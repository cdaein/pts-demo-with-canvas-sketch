{"version":3,"sources":["../../../.nvm/versions/node/v16.14.0/lib/node_modules/canvas-sketch-cli/node_modules/browser-pack/_prelude.js","../../../.nvm/versions/node/v16.14.0/lib/node_modules/canvas-sketch-cli/node_modules/events/events.js","../../../.nvm/versions/node/v16.14.0/lib/node_modules/canvas-sketch-cli/node_modules/path-browserify/index.js","../../../.nvm/versions/node/v16.14.0/lib/node_modules/canvas-sketch-cli/node_modules/process/browser.js","canvasspace.action.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/object-assign/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/right-now/browser.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/is-promise/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/is-dom/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/util.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/repeat-string/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/lib/keys.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/lib/is_arguments.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/dateformat/lib/dateformat.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/pad-left/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/save.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/accessibility.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/paper-sizes.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/defined/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/convert-length/convert-length.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/distances.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/resizeCanvas.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/get-canvas-context/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/createCanvas.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/SketchManager.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/keyboardShortcuts.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/canvas-sketch.js","node_modules/pts/dist/index.js","node_modules/simple-input-events/simple-input-events.js","canvas-sketch-cli/injected/storage-key.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","objectCreate","Object","create","proto","F","prototype","objectKeys","keys","obj","k","hasOwnProperty","push","bind","Function","context","fn","this","apply","arguments","EventEmitter","_events","_eventsCount","_maxListeners","undefined","hasDefineProperty","defaultMaxListeners","defineProperty","value","x","err","$getMaxListeners","that","_addListener","target","type","listener","prepend","m","events","existing","TypeError","newListener","emit","unshift","warned","w","String","name","emitter","count","console","warn","message","onceWrapper","fired","removeListener","wrapFn","args","Array","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","enumerable","get","set","arg","setMaxListeners","isNaN","getMaxListeners","er","handler","len","doError","error","isFn","self","listeners","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","on","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","removeAllListeners","key","rawListeners","eventNames","Reflect","ownKeys","normalizeArray","parts","allowAboveRoot","up","last","splice","filter","xs","res","resolve","resolvedPath","resolvedAbsolute","path","process","cwd","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","slice","relative","from","to","trim","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","off","binding","chdir","dir","umask","canvasSketch","createInputEvents","CanvasForm","Pt","Bound","Group","canvas","ctx","width","height","form","size","innerBound","chain","stretch","event","mouse","uv","multiply","[object Object]","fillStyle","fillRect","strokeOnly","line","fillOnly","point","bottomRight","dimensions","animate","duration","prefix","__filename","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","objectAssign","assign","test1","getOwnPropertyNames","test2","fromCharCode","map","test3","forEach","letter","shouldUseNative","source","symbols","val","toObject","s","commonjsGlobal","performance","now","Date","isPromise_1","then","isDom","window","Node","nodeType","nodeName","getClientAPI","defined","arguments$1","isBrowser","document","cache","shim","supportsArgumentsClass","toString","supported","object","unsupported","pSlice","deepEqual","actual","expected","opts","getTime","strict","b","isUndefinedOrNull","is_arguments","isBuffer","ka","kb","sort","objEquiv","global","token","timezone","timezoneClip","dateFormat","date","mask","utc","gmt","isArray","toLowerCase","test","maskSlice","masks","_","d","D","y","H","M","L","getTimezoneOffset","W","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","setHours","getHours","floor","getWeek","N","dow","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","replace","abs","S","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","repeatString","num","max","link","padLeft","ch","defaultExts","extension","suffix","supportedEncodings","stream","isStart","Promise","reject","filename","resolveFilename","frame","func","client","output","ev","saveDataURL","dataURL","splitIndex","indexOf","base64","byteString","atob","mimeMatch","exec","mime","ab","ArrayBuffer","ia","Uint8Array","Blob","createBlobFromDataURL","blob","saveBlob","createElement","style","visibility","download","href","URL","createObjectURL","body","appendChild","onclick","revokeObjectURL","parentElement","removeChild","removeAttribute","click","opt","file","totalFrames","layerStr","isFinite","totalLayers","layer","Boolean","timeStamp","hash","commonTypos","dimension","animated","animating","unit","P5","pixellated","looping","pixelPerInch","allKeys","checkSettings","settings","includes","paperSizes","reduce","dict","preset","item","units","defined$1","conversions","system","factor","cm","pt","pc","in","ft","anchors","metric","ratio","imperial","convertLength","fromUnit","toUnit","pixelsPerInch","precision","roundPixel","toFactor","fromFactor","isToPixel","fromUnitData","toUnitData","anchor","result","decimals","Number","convertDistance$1","unitsFrom","unitsTo","resizeCanvas","props","styleWidth","styleHeight","canvasWidth","canvasHeight","hasDimensions","checkIfHasDimensions","exporting","scaleToFit","scaleToView","pixelRatio","exportPixelRatio","bleed","devicePixelRatio","basePixelRatio","maxPixelRatio","trimWidth","trimHeight","ref","element","parent","innerWidth","innerHeight","getBoundingClientRect","getParentSize","parentWidth","parentHeight","getDimensionsFromPreset","highest","lowest","orientation","landscape","realWidth","realHeight","aspect","windowAspect","scaleToFitPadding","maxWidth","maxHeight","getCanvasContext_1","gl","attribs","names","getContext","createCanvas","ownsCanvas","newCanvas","createCanvasElement","attributes","pixelated","imageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","SketchManager","_settings","_props","_sketch","_raf","_recordTimeout","_lastRedrawResult","_isP5Resizing","_keyboardShortcuts","enabled","keyCode","altKey","metaKey","ctrlKey","togglePlay","preventDefault","commit","save","addEventListener","removeEventListener","keyboardShortcuts","this$1","hotkeys","shiftKey","recording","endRecord","record","exportFrame","playing","pause","play","_animateHandler","_resizeHandler","resize","render","sketch","_computePlayhead","currentTime","_computeFrame","playhead","time","fps","_computeCurrentFrame","_getSizeProps","viewportWidth","viewportHeight","dispose","started","_signalBegin","tick","_cancelTimeouts","cancelAnimationFrame","_lastTime","requestAnimationFrame","stop","deltaTime","exportOpts","_createExportOptions","frameInterval","log","_signalEnd","beginRecord","_wrapContextScale","catch","response","begin","wasRecording","sequence","encoding","encodingQuality","dateformat","all","preExport","commitOpts","_doExportFrame","drawResult","hasDataObject","data","toDataURL","exportCanvas","layerList","curOpt","saveParam","savePromise","saveFile","saveResult","savedEvents","eventWithOutput","find","outputName","isClient","some","isStreaming","ofSeq","postExport","cb","_preRender","_postRender","p5","scale","scaleX","scaleY","scaleContext","restore","flush","redraw","submitDrawCall","update","notYetSupported","oldCanvas","oldContext","timeOpts","timeProps","getTimeProps","_setupGLKey","_appendCanvasIfNeeded","draw","oldSizes","newProps","pixelDensity","styleCanvas","newSizes","changed","deepEqual_1","_sizeChanged","frameIntervalMS","deltaTimeMS","hasDuration","isNewFrame","playbackRate","newTime","timeScale","isFinished","isLoopStart","loop","lastFrame","dispatch","mount","unmount","detach","clear","clearColor","bufferData","hasTotalFrames","totalFramesFromDuration","durationFromTotalFrames","Infinity","startTime","startFrame","hasStartTime","hasStartFrame","setup","loadAndRun","newSettings","load","unload","destroy","createSketch","preload","P5Constructor","p5Sketch","isGL","renderer","WEBGL","P2D","noLoop","setAttributes","_renderer","drawingContext","loader","attach","CACHE","runtimeCollisions","hotID","isHot","hot","id","isInjecting","previousData","cacheGet","next","oldManager","manager","PaperSizes","root","factory","define","amd","modules","installedModules","__webpack_require__","moduleId","getter","Symbol","toStringTag","mode","__esModule","ns","property","./src/Canvas.ts","CanvasSpace","Space_1","Form_1","Pt_1","Util_1","Typography_1","Op_1","Image_1","MultiTouchSpace","elem","callback","super","_pixelScale","_autoResize","_bgcolor","_offscreen","_initialResize","_selector","Element","querySelector","_container","_canvas","_createElement","_ready","_ctx","setAttribute","_isReady","dispatchEvent","Event","players","bound","clone","_pointer","center","bgcolor","autoResize","retina","r1","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","offscreen","_offCanvas","_offCtx","auto","evt","ceil","isPlaying","playOnce","box","fromBoundingRect","add","pageXOffset","pageYOffset","background","bg","pixelScale","hasOffscreen","offscreenCtx","offscreenCanvas","ready","lastColor","px","clearRect","playItems","removeAll","downloadOrCallback","filetype","bitrate","captureStream","recorder","MediaRecorder","mimeType","bitsPerSecond","ondataavailable","url","remove","VisualForm","space","_style","strokeStyle","lineWidth","lineJoin","lineCap","globalAlpha","_setup","font","_font","CanvasRenderingContext2D","_space","clearOffscreen","offset","drawImage","filled","linejoin","linecap","stroked","strokeWidth","fill","stroke","stops","vals","area1","area2","grad","createRadialGradient","createLinearGradient","addColorStop","globalCompositeOperation","clip","segments","setLineDash","lineDashOffset","sizeOrFont","weight","lineHeight","family","face","_estimateTextWidth","fontWidthEstimate","estimate","Typography","textWidthEstimator","measureText","tail","truncate","getTextWidth","vertical","_box","Util","iterToArray","arrayCheck","Rectangle","textAlign","py","Font","_filled","_stroked","radius","shape","_paint","beginPath","arc","Const","two_pi","closePath","pts","circle","rotation","startAngle","endAngle","cc","ellipse","halfsize","x1","y1","x2","y2","moveTo","lineTo","square","it","polygon","rect","ptOrRect","img","orig","pos","Img","loaded","image","putImageData","imageData","txt","fillText","text","verticalAlign","overrideBaseline","textBaseline","_textTruncate","_textAlign","crop","lstep","nextLine","sub","buffer","newln","dt","lastIndexOf","lines","lsize","lbox","lpad","$add","$subtract","alignment","baseline","./src/Color.ts","Color","Num_1","_mode","_isNorm","getArgs","hex","alpha","substring","hexVal","parseInt","toMode","ranges","zipSlice","$take","rgb","rgba","convert","fname","toUpperCase","g","v","normalized","toNorm","Num","mapToRange","format","_hex","normalizedInput","normalizedOutput","$normalize","hsl","q","sc","hsb","XYZtoLAB","RGBtoXYZ","lab","XYZtoRGB","LABtoXYZ","LABtoLCH","RGBtoLAB","lch","LABtoRGB","LCHtoLAB","XYZtoLUV","luv","LUVtoXYZ","pow","xyz","z","divide","D65","cy","eps","kap","xxx","zzz","cubeY","Geom","toDegree","boundRadian","atan2","sqrt","rad","toRadian","cos","sin","./src/Create.ts","Delaunay","Noise","Create","LinearAlgebra_1","random","depth","_line","ln","Line","subpoints","columns","rows","$divide","$multiply","topLeft","angleOffset","half_pi","toAngle","dx","dy","seed","np","initNoise","__noise_grad3","__noise_permTable","perm","_n","j","n00","Vec","dot","n01","n10","n11","_fade","tx","lerp","_mesh","triangleOnly","indices","st","_superTriangle","opened","_circum","closed","tris","edges","circum","triangle","epsilon","_dedupe","_cache","vs","neighborPts","cs","sortEdges","minPt","maxPt","$min","$max","mid","dmax","tri","_triangle","Triangle","circumcircle","./src/Dom.ts","HTMLForm","HTMLSpace","DOMSpace","_css","appendTo","refresh","styles","innerHTML","backgroundColor","autoClass","player","querySelectorAll","scopeID","el","parentNode","border-color","color","border-width","border-radius","border-style","opacity","top","left","group","groupID","groupCount","currentID","currentClass","styleTo","group_id","nextID","animateID","updateScope","domID","setAttr","htmlElement","getID","class","rectStyle","textContent","textStyle","./src/Form.ts","Form","currentFont","groups","rest","_multiple","./src/Image.ts","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","Canvas_1","editable","crossOrigin","_scale","_loaded","_editable","_img","Image","src","repeat","loadAsync","pattern","initCanvas","onload","_cv","_drawToScale","_data","getImageData","onerror","canvasScale","nw","nh","cms","createImageBitmap","reptition","dynamic","createPattern","bitmap","toBase64","rescale","getPixel","imgData","no","sizeOrScale","asScale","naturalWidth","naturalHeight","css","cv","toBlob","current","imageSize","canvasSize","scaledMatrix","Mat","scale2D","./src/LinearAlgebra.ts","magnitude","make","MIN_VALUE","MAX_VALUE","reset","_33","domMatrix","DOMMatrix","toDOMMatrix","scale2DMatrix","at","scaleAt2DMatrix","ang","rotateAt2DMatrix","translate2DMatrix","shearAt2DMatrix","tan","isNum","transposed","elementwise","ai","alen","transpose","bi","blen","defaultValue","useLongest","ps","zip","cosA","sinA","tanX","tanY","sx","sy","rotate2DMatrix","shear2DMatrix","p1","p2","intercept","yi","ang2","atan","slope","./src/Num.ts","Range","Shaping","uheprng_1","threshold","range","subtract","_pts","sum","method","sineInOut","currA","currB","targetA","targetB","normalizeValue","angle","boundValue","radian","deg_to_rad","rad_to_deg","average","ptOrIndex","direction","axis","xy","pa","pb","boundPt1","boundPt2","within","bounds","boundingBox","da","db","det","$cross2D","scs","lenP","transform2D","tanx","tany","mat","reflectAt2DMatrix","Float64Array","PI","table","boundAngle","t2","t4","bounceOut","bounceIn","exp","A","B","om2a","curve","Curve","bezierStep","controlPoints","steps","_dims","_source","fromPtArray","calc","_max","_min","_mag","dims","mag","exclude","./src/Op.ts","Polygon","Circle","_errorLength","param","_errorOutofBound","xi","p3","$cross","equals","magnitudeSq","asProjection","proj","$project","projectionVector","perpendicularFromPt","la","lb","_la","_lb","intersectRay2D","withinBound","ray","_ray","lineOrRay","poly","sourceIsRay","_lineOrRay","_poly","intersectLineWithRay2D","intersectLine2D","lines1","lines2","isRay","l1","l2","_ip","gridPt","intersectGridWithRay2D","gg","_rect","hasIntersectRect2D","intersectLines2D","sides","interpolate","cropAsCircle","ls","fromCenter","sideIdx","graphic","atTail","perpendicular","widthOrSize","fromTopLeft","half","fromRect","enclose","maxValue","minValue","p0","corners","rects","_rects","merged","flatten","_center","asRows","rect1","rect2","resetBoundingBox","_rect1","_rect2","incircle","disc","discSqrt","circle1","circle2","_circle","dv","dr2","dr","ar","br","ar2","br2","inc","toTriangle","fromCircle","midpoints","opp","oppositeSide","altitude","bisector","incenter","area","perim","perimeter","total","md","medial","circumcenter","centroid","sp","gs","right","adjacentSides","sorted","dq","bot","hull","originIndex","_near","_item","unitAxis","poly1","poly2","projectAxis","lineAt","info","which","dist","normal","edge","vertex","minDist","MAX_SAFE_INTEGER","_axisOverlap","_poly1","_poly2","plen","b1","b2","c1","c2","smallest","lp","ins","intersectPolygon2D","polys","boxes","ts","copyStart","_index","ctrls","params","getSteps","catmullRomStep","cp","_calcPt","tension","cardinalStep","h2","h3","bsplineTensionStep","bsplineStep","./src/Physics.ts","Body","Particle","World","friction","gravity","_gravity","_friction","_damping","_particles","_bodies","_pnames","_bnames","_bound","fromGroup","damping","bodyCount","particleCount","idx","ms","_updateParticles","_updateBodies","_drawParticles","_drawBodies","bodyIndex","particleIndex","stiff","precise","m1","mass","m2","delta","distSq","previous","prevDt","addForce","verlet","integrate","boundConstraint","collide","bds","klen","bk","processBody","mlen","processParticle","processEdges","_mass","_radius","_force","_prev","_lock","force","_body","lock","_lockPt","lastDt","lt","damp","dp","np1","np2","f1","f2","dm1","dm2","_cs","_stiff","_locks","autoLink","autoMass","init","linkAll","li","index1","index2","nd","edgeConstraint","hit","hasIntersectPolygon","eg","lambda","m0","mr0","mr1","hasIntersectCircle","./src/Play.ts","Sound","Tempo","bpm","_listenerInc","_bpm","_ms","beats","_createID","period","continuous","progress","_t","clamp","ftime","track","_playing","_type","AudioContext","webkitAudioContext","node","_node","_stream","Audio","autoplay","createMediaElementSource","request","XMLHttpRequest","open","responseType","decodeAudioData","createBuffer","send","buf","createBufferSource","_buffer","onended","_gen","createOscillator","osc","setPeriodicWave","frequency","constraint","audio","video","navigator","mediaDevices","getUserMedia","createMediaStreamSource","outputNode","_outputNode","dur","curr","_timestamp","playable","readyState","binSize","analyzer","sampleRate","connect","minDb","maxDb","smooth","createAnalyser","fftSize","minDecibels","maxDecibels","smoothingTimeConstant","frequencyBinCount","getByteTimeDomainData","getByteFrequencyData","timeDomain","freqDomain","_domain","_domainTo","disconnect","timeAt","resume","destination","getAudioTracks","./src/Pt.ts","Float32Array","randomize","_id","anchorFromPt","change","fns","_ops","op","toArray","cross2D","cross","rotate2D","shear2D","reflect2D","p4","q1","q2","q3","q4","chunkSize","stride","loopBack","pts_per_segment","chunk","tc","moveBy","dim","desc","ptFn","forEachPt","_size","_topLeft","_bottomRight","_inited","bottom","_g","_updateSize","_updateCenter","_updatePosFromTop","_updatePosFromCenter","inited","./src/Space.ts","Space","UI_1","_time","prev","diff","playerCount","_animID","_pause","_refresh","pid","toggle","_renderFunc","customRendering","outerBound","_pressed","_dragged","_hasMouse","_hasTouch","_hasKeyboard","pointer","options","customTarget","_mouseDown","_mouseUp","_mouseOver","_mouseOut","_mouseMove","_mouseClick","_contextMenu","bindCanvas","unbindCanvas","passive","_touchStart","_touchMove","_keyDownBind","_keyDown","_keyUpBind","_keyUp","bindDoc","unbindDoc","pageX","pageY","MouseEvent","action","changedTouches","touch","_mouseAction","UIPointerActions","down","drop","move","drag","over","out","contextmenu","_keyboardAction","keydown","keyup","./src/Svg.ts","SVGForm","SVGSpace","Dom_1","svgElement","viewBox","xmlns","createElementNS","stroke-width","stroke-linejoin","stroke-linecap","cx","largeArc","pi","points","pointsString","string","fromArray","pointer-events","./src/Typography.ts","samples","distribution","avg","byHeight","box2","bound2","defaultSize","./src/UI.ts","UIDragger","UIButton","UI","UIShape","rectangle","polyline","uidrag","uidrop","enter","leave","states","_holds","Map","_group","_shape","_counter","_states","_actions","ui","_addHandler","_removeHandler","_within","values","_trigger","newKey","delete","uis","listen","hasIntersectPoint","temp","_hoverID","hover","clicks","UA","_capID","hold","unhold","ids","enterID","leaveID","_draggingID","_moveHoldID","_dropHoldID","_upHoldID","dragging","moved","endDrag","./src/Util.ts","yz","xz","horizontal","identical","bottom_right","bottom_left","top_left","top_right","quarter_pi","one_degree","newton","gaussian","lv","_warnLevel","isView","defaultReturn","warnLevel","matchSize","chunks","part","flattenAsGroup","lenB","arrays","status","responseText","quality","avgFrames","minRequired","userAgent","./src/_module.ts","__createBinding","k2","__exportStar","./src/uheprng.ts","mash","initState","inStr","cleanString","hashString","isInsideBounds","clientX","clientY","getElementBounds","winEl","isDOMNode","tapDistanceThreshold","tapDelay","filtered","eventOpts","initialIdentifier","lastTime","lastPosition","attached","enable","disable","mousedown","mouseup","mousemove","preventDefaultEvent","defineProperties","createEvent","getCurrentEvent","wasDragging","valid","identifier","inside","distance","first","touches","getFirstTargetTouch","getTouch","getPosition","getNormalizedPosition","CANVAS_SKETCH_DEFAULT_STORAGE_KEY","location"],"mappings":"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GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GACA,CAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAA,CAAA,GAAA,GAAA,IAEAC,EAAA,CAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GACA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,EAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IAAA,GAAA,GAAA,GACA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GACA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IACA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IACA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,EAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IACA,EAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAAA,GAAA,GACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,EACA,IAAA,GAAA,GAAA,IAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IACA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA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","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const canvasSketch = require(\"canvas-sketch\");\nconst createInputEvents = require(\"simple-input-events\");\nconst { CanvasForm, Pt, Bound, Group } = require(\"pts\");\nconst path = require(\"path\");\n\nconst sketch = ({ canvas, context: ctx, width, height }) => {\n  const form = new CanvasForm(ctx);\n  const size = new Pt(width, height);\n  const innerBound = new Bound(new Pt(), new Pt(size));\n\n  const chain = new Group();\n  let stretch = false;\n\n  // mouse events\n  const event = createInputEvents(canvas);\n  let mouse = new Pt();\n  event.on(\"down\", ({ position, event }) => (stretch = true));\n  event.on(\"up\", ({ position, event }) => (stretch = false));\n  event.on(\"move\", ({ position, event, uv }) => {\n    mouse.set(uv);\n    mouse.multiply(size);\n    chain.push(new Pt(mouse));\n  });\n\n  return {\n    render({ width, height }) {\n      ctx.fillStyle = \"#fe3\";\n      ctx.fillRect(0, 0, width, height);\n\n      // shorten the line when it's not stretching\n      if (chain.length > (stretch ? 100 : 10)) chain.shift();\n\n      form.strokeOnly(\"#123\", 3).line(chain);\n      form.fillOnly(\"#123\").point(mouse, 10, \"circle\");\n    },\n    resize({ width, height }) {\n      size.set([width, height]); // REVIEW: when setting Pt, param has to be an array, while creating doesn't.\n      innerBound.bottomRight = size;\n    },\n  };\n};\n\nconst settings = {\n  dimensions: [800, 800],\n  // pixelRatio: 2,\n  // exportPixelRatio: 2,\n  // scaleToFitPadding: 0,\n  // scaleToView: true,\n  animate: true,\n  // duration: 4,\n  // fps: 30,\n  // playbackRate: \"throttle\",\n  duration: 4,\n  prefix: path.basename(__filename),\n};\n\ncanvasSketch(sketch, settings);\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports =\n  global.performance &&\n  global.performance.now ? function now() {\n    return performance.now()\n  } : Date.now || function now() {\n    return +new Date\n  }\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","module.exports = isNode\n\nfunction isNode (val) {\n  return (!val || typeof val !== 'object')\n    ? false\n    : (typeof window === 'object' && typeof window.Node === 'object')\n      ? (val instanceof window.Node)\n      : (typeof val.nodeType === 'number') &&\n        (typeof val.nodeName === 'string')\n}\n","// TODO: We can remove a huge chunk of bundle size by using a smaller\n// utility module for converting units.\nimport isDOM from 'is-dom';\n\nexport function getClientAPI () {\n  return typeof window !== 'undefined' && window['canvas-sketch-cli'];\n}\n\nexport function defined () {\n  for (let i = 0; i < arguments.length; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n  return undefined;\n}\n\nexport function isBrowser () {\n  return typeof document !== 'undefined';\n}\n\nexport function isWebGLContext (ctx) {\n  return typeof ctx.clear === 'function' && typeof ctx.clearColor === 'function' && typeof ctx.bufferData === 'function';\n}\n\nexport function isCanvas (element) {\n  return isDOM(element) && /canvas/i.test(element.nodeName) && typeof element.getContext === 'function';\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\n(function(global) {\n  'use strict';\n\n  var dateFormat = (function() {\n      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n      var timezoneClip = /[^-+\\dA-Z]/g;\n  \n      // Regexes and supporting functions are cached through closure\n      return function (date, mask, utc, gmt) {\n  \n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n          mask = date;\n          date = undefined;\n        }\n  \n        date = date || new Date;\n  \n        if(!(date instanceof Date)) {\n          date = new Date(date);\n        }\n  \n        if (isNaN(date)) {\n          throw TypeError('Invalid date');\n        }\n  \n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n  \n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n          mask = mask.slice(4);\n          utc = true;\n          if (maskSlice === 'GMT:') {\n            gmt = true;\n          }\n        }\n  \n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n          d:    d,\n          dd:   pad(d),\n          ddd:  dateFormat.i18n.dayNames[D],\n          dddd: dateFormat.i18n.dayNames[D + 7],\n          m:    m + 1,\n          mm:   pad(m + 1),\n          mmm:  dateFormat.i18n.monthNames[m],\n          mmmm: dateFormat.i18n.monthNames[m + 12],\n          yy:   String(y).slice(2),\n          yyyy: y,\n          h:    H % 12 || 12,\n          hh:   pad(H % 12 || 12),\n          H:    H,\n          HH:   pad(H),\n          M:    M,\n          MM:   pad(M),\n          s:    s,\n          ss:   pad(s),\n          l:    pad(L, 3),\n          L:    pad(Math.round(L / 10)),\n          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n          W:    W,\n          N:    N\n        };\n  \n        return mask.replace(token, function (match) {\n          if (match in flags) {\n            return flags[match];\n          }\n          return match.slice(1, match.length - 1);\n        });\n      };\n    })();\n\n  dateFormat.masks = {\n    'default':               'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate':             'm/d/yy',\n    'mediumDate':            'mmm d, yyyy',\n    'longDate':              'mmmm d, yyyy',\n    'fullDate':              'dddd, mmmm d, yyyy',\n    'shortTime':             'h:MM TT',\n    'mediumTime':            'h:MM:ss TT',\n    'longTime':              'h:MM:ss TT Z',\n    'isoDate':               'yyyy-mm-dd',\n    'isoTime':               'HH:MM:ss',\n    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n  };\n\n  // Internationalization strings\n  dateFormat.i18n = {\n    dayNames: [\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n    ],\n    monthNames: [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n    ],\n    timeNames: [\n      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\n    ]\n  };\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n  // Remove time components of date\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n  // Change date to Thursday same week\n  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n  // Take January 4th as it is always in week 1 (see ISO 8601)\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n  // Change date to Thursday same week\n  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n  // Check if daylight-saving-time-switch occurred and correct for it\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n  targetThursday.setHours(targetThursday.getHours() - ds);\n\n  // Number of weeks between target Thursday and first Thursday\n  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n  return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n * \n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n  var dow = date.getDay();\n  if(dow === 0) {\n    dow = 7;\n  }\n  return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n  if (val === null) {\n    return 'null';\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof val !== 'object') {\n    return typeof val;\n  }\n\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n\n  return {}.toString.call(val)\n    .slice(8, -1).toLowerCase();\n};\n\n\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dateFormat;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = dateFormat;\n  } else {\n    global.dateFormat = dateFormat;\n  }\n})(this);\n","/*!\n * pad-left <https://github.com/jonschlinkert/pad-left>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar repeat = require('repeat-string');\n\nmodule.exports = function padLeft(str, num, ch) {\n  str = str.toString();\n\n  if (typeof num === 'undefined') {\n    return str;\n  }\n\n  if (ch === 0) {\n    ch = '0';\n  } else if (ch) {\n    ch = ch.toString();\n  } else {\n    ch = ' ';\n  }\n\n  return repeat(ch, num - str.length) + str;\n};\n","import dateformat from 'dateformat';\nimport assign from 'object-assign';\nimport padLeft from 'pad-left';\nimport { getClientAPI } from './util';\n\nconst noop = () => {};\nlet link;\nlet defaultExts = { extension: '', prefix: '', suffix: '' };\n\n// Alternative solution for saving files,\n// a bit slower and does not work in Safari\n// function fetchBlobFromDataURL (dataURL) {\n//   return window.fetch(dataURL).then(res => res.blob());\n// }\n\nconst supportedEncodings = [\n  'image/png',\n  'image/jpeg',\n  'image/webp'\n];\n\nfunction stream (isStart, opts = {}) {\n  return new Promise((resolve, reject) => {\n    opts = assign({}, defaultExts, opts);\n    const filename = resolveFilename(Object.assign({}, opts, {\n      extension: '',\n      frame: undefined\n    }));\n    const func = isStart ? 'streamStart' : 'streamEnd';\n    const client = getClientAPI();\n    if (client && client.output && typeof client[func] === 'function') {\n      return client[func](assign({}, opts, { filename }))\n        .then(ev => resolve(ev));\n    } else {\n      return resolve({ filename, client: false });\n    }\n  });\n}\n\nexport function streamStart (opts = {}) {\n  return stream(true, opts);\n}\n\nexport function streamEnd (opts = {}) {\n  return stream(false, opts);\n}\n\nexport function exportCanvas (canvas, opt = {}) {\n  const encoding = opt.encoding || 'image/png';\n  if (!supportedEncodings.includes(encoding)) throw new Error(`Invalid canvas encoding ${encoding}`);\n  let extension = (encoding.split('/')[1] || '').replace(/jpeg/i, 'jpg');\n  if (extension) extension = `.${extension}`.toLowerCase();\n  return {\n    extension,\n    type: encoding,\n    dataURL: canvas.toDataURL(encoding, opt.encodingQuality)\n  };\n}\n\nfunction createBlobFromDataURL (dataURL) {\n  return new Promise((resolve) => {\n    const splitIndex = dataURL.indexOf(',');\n    if (splitIndex === -1) {\n      resolve(new window.Blob());\n      return;\n    }\n    const base64 = dataURL.slice(splitIndex + 1);\n    const byteString = window.atob(base64);\n    const type = dataURL.slice(0, splitIndex);\n    const mimeMatch = /data:([^;]+)/.exec(type);\n    const mime = (mimeMatch ? mimeMatch[1] : '') || undefined;\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    resolve(new window.Blob([ ab ], { type: mime }));\n  });\n}\n\nexport function saveDataURL (dataURL, opts = {}) {\n  return createBlobFromDataURL(dataURL)\n    .then(blob => saveBlob(blob, opts));\n}\n\nexport function saveBlob (blob, opts = {}) {\n  return new Promise(resolve => {\n    opts = assign({}, defaultExts, opts);\n    const filename = opts.filename;\n\n    const client = getClientAPI();\n    if (client && typeof client.saveBlob === 'function' && client.output) {\n      // native saving using a CLI tool\n      return client.saveBlob(blob, assign({}, opts, { filename }))\n        .then(ev => resolve(ev));\n    } else {\n      // force download\n      if (!link) {\n        link = document.createElement('a');\n        link.style.visibility = 'hidden';\n        link.target = '_blank';\n      }\n      link.download = filename;\n      link.href = window.URL.createObjectURL(blob);\n      document.body.appendChild(link);\n      link.onclick = () => {\n        link.onclick = noop;\n        setTimeout(() => {\n          window.URL.revokeObjectURL(blob);\n          if (link.parentElement) link.parentElement.removeChild(link);\n          link.removeAttribute('href');\n          resolve({ filename, client: false });\n        });\n      };\n      link.click();\n    }\n  });\n}\n\nexport function saveFile (data, opts = {}) {\n  const parts = Array.isArray(data) ? data : [ data ];\n  const blob = new window.Blob(parts, { type: opts.type || '' });\n  return saveBlob(blob, opts);\n}\n\nexport function getTimeStamp () {\n  const dateFormatStr = `yyyy.mm.dd-HH.MM.ss`;\n  return dateformat(new Date(), dateFormatStr);\n}\n\nexport function getDefaultFile (prefix = '', suffix = '', ext) {\n  // const dateFormatStr = `yyyy.mm.dd-HH.MM.ss`;\n  const dateFormatStr = `yyyy-mm-dd 'at' h.MM.ss TT`;\n  return `${prefix}${dateformat(new Date(), dateFormatStr)}${suffix}${ext}`;\n}\n\nexport function resolveFilename (opt = {}) {\n  opt = assign({}, opt);\n\n  // Custom filename function\n  if (typeof opt.file === 'function') {\n    return opt.file(opt);\n  } else if (opt.file) {\n    return opt.file;\n  }\n\n  let frame = null;\n  let extension = '';\n  if (typeof opt.extension === 'string') extension = opt.extension;\n\n  if (typeof opt.frame === 'number') {\n    let totalFrames;\n    if (typeof opt.totalFrames === 'number') {\n      totalFrames = opt.totalFrames;\n    } else {\n      totalFrames = Math.max(10000, opt.frame);\n    }\n    frame = padLeft(String(opt.frame), String(totalFrames).length, '0');\n  }\n\n  const layerStr = isFinite(opt.totalLayers) && isFinite(opt.layer) && opt.totalLayers > 1 ? `${opt.layer}` : '';\n  if (frame != null) {\n    return [ layerStr, frame ].filter(Boolean).join('-') + extension;\n  } else {\n    const defaultFileName = opt.timeStamp;\n    return [ opt.prefix, opt.name || defaultFileName, layerStr, opt.hash, opt.suffix ].filter(Boolean).join('-') + extension;\n  }\n}\n","// Handle some common typos\nconst commonTypos = {\n  dimension: 'dimensions',\n  animated: 'animate',\n  animating: 'animate',\n  unit: 'units',\n  P5: 'p5',\n  pixellated: 'pixelated',\n  looping: 'loop',\n  pixelPerInch: 'pixels'\n};\n\n// Handle all other typos\nconst allKeys = [\n  'dimensions', 'units', 'pixelsPerInch', 'orientation',\n  'scaleToFit', 'scaleToView', 'bleed', 'pixelRatio',\n  'exportPixelRatio', 'maxPixelRatio', 'scaleContext',\n  'resizeCanvas', 'styleCanvas', 'canvas', 'context', 'attributes',\n  'parent', 'file', 'name', 'prefix', 'suffix', 'animate', 'playing',\n  'loop', 'duration', 'totalFrames', 'fps', 'playbackRate', 'timeScale',\n  'frame', 'time', 'flush', 'pixelated', 'hotkeys', 'p5', 'id',\n  'scaleToFitPadding', 'data', 'params', 'encoding', 'encodingQuality'\n];\n\n// This is fairly opinionated and forces users to use the 'data' parameter\n// if they want to pass along non-setting objects...\nexport const checkSettings = (settings) => {\n  const keys = Object.keys(settings);\n  keys.forEach(key => {\n    if (key in commonTypos) {\n      const actual = commonTypos[key];\n      console.warn(`[canvas-sketch] Could not recognize the setting \"${key}\", did you mean \"${actual}\"?`);\n    } else if (!allKeys.includes(key)) {\n      console.warn(`[canvas-sketch] Could not recognize the setting \"${key}\"`);\n    }\n  });\n};\n","const defaultUnits = 'mm';\n\nconst data = [\n  // Common Paper Sizes\n  // (Mostly North-American based)\n  [ 'postcard', 101.6, 152.4 ],\n  [ 'poster-small', 280, 430 ],\n  [ 'poster', 460, 610 ],\n  [ 'poster-large', 610, 910 ],\n  [ 'business-card', 50.8, 88.9 ],\n\n  // Photographic Print Paper Sizes\n  [ '2r', 64, 89 ],\n  [ '3r', 89, 127 ],\n  [ '4r', 102, 152 ],\n  [ '5r', 127, 178 ], // 5″x7″\n  [ '6r', 152, 203 ], // 6″x8″\n  [ '8r', 203, 254 ], // 8″x10″\n  [ '10r', 254, 305 ], // 10″x12″\n  [ '11r', 279, 356 ], // 11″x14″\n  [ '12r', 305, 381 ],\n\n  // Standard Paper Sizes\n  [ 'a0', 841, 1189 ],\n  [ 'a1', 594, 841 ],\n  [ 'a2', 420, 594 ],\n  [ 'a3', 297, 420 ],\n  [ 'a4', 210, 297 ],\n  [ 'a5', 148, 210 ],\n  [ 'a6', 105, 148 ],\n  [ 'a7', 74, 105 ],\n  [ 'a8', 52, 74 ],\n  [ 'a9', 37, 52 ],\n  [ 'a10', 26, 37 ],\n  [ '2a0', 1189, 1682 ],\n  [ '4a0', 1682, 2378 ],\n  [ 'b0', 1000, 1414 ],\n  [ 'b1', 707, 1000 ],\n  [ 'b1+', 720, 1020 ],\n  [ 'b2', 500, 707 ],\n  [ 'b2+', 520, 720 ],\n  [ 'b3', 353, 500 ],\n  [ 'b4', 250, 353 ],\n  [ 'b5', 176, 250 ],\n  [ 'b6', 125, 176 ],\n  [ 'b7', 88, 125 ],\n  [ 'b8', 62, 88 ],\n  [ 'b9', 44, 62 ],\n  [ 'b10', 31, 44 ],\n  [ 'b11', 22, 32 ],\n  [ 'b12', 16, 22 ],\n  [ 'c0', 917, 1297 ],\n  [ 'c1', 648, 917 ],\n  [ 'c2', 458, 648 ],\n  [ 'c3', 324, 458 ],\n  [ 'c4', 229, 324 ],\n  [ 'c5', 162, 229 ],\n  [ 'c6', 114, 162 ],\n  [ 'c7', 81, 114 ],\n  [ 'c8', 57, 81 ],\n  [ 'c9', 40, 57 ],\n  [ 'c10', 28, 40 ],\n  [ 'c11', 22, 32 ],\n  [ 'c12', 16, 22 ],\n\n  // Use inches for North American sizes,\n  // as it produces less float precision errors\n  [ 'half-letter', 5.5, 8.5, 'in' ],\n  [ 'letter', 8.5, 11, 'in' ],\n  [ 'legal', 8.5, 14, 'in' ],\n  [ 'junior-legal', 5, 8, 'in' ],\n  [ 'ledger', 11, 17, 'in' ],\n  [ 'tabloid', 11, 17, 'in' ],\n  [ 'ansi-a', 8.5, 11.0, 'in' ],\n  [ 'ansi-b', 11.0, 17.0, 'in' ],\n  [ 'ansi-c', 17.0, 22.0, 'in' ],\n  [ 'ansi-d', 22.0, 34.0, 'in' ],\n  [ 'ansi-e', 34.0, 44.0, 'in' ],\n  [ 'arch-a', 9, 12, 'in' ],\n  [ 'arch-b', 12, 18, 'in' ],\n  [ 'arch-c', 18, 24, 'in' ],\n  [ 'arch-d', 24, 36, 'in' ],\n  [ 'arch-e', 36, 48, 'in' ],\n  [ 'arch-e1', 30, 42, 'in' ],\n  [ 'arch-e2', 26, 38, 'in' ],\n  [ 'arch-e3', 27, 39, 'in' ]\n];\n\nexport default data.reduce((dict, preset) => {\n  const item = {\n    units: preset[3] || defaultUnits,\n    dimensions: [ preset[1], preset[2] ]\n  };\n  dict[preset[0]] = item;\n  dict[preset[0].replace(/-/g, ' ')] = item;\n  return dict;\n}, {});\n","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","var defined = require('defined');\nvar units = [ 'mm', 'cm', 'm', 'pc', 'pt', 'in', 'ft', 'px' ];\n\nvar conversions = {\n  // metric\n  m: {\n    system: 'metric',\n    factor: 1\n  },\n  cm: {\n    system: 'metric',\n    factor: 1 / 100\n  },\n  mm: {\n    system: 'metric',\n    factor: 1 / 1000\n  },\n  // imperial\n  pt: {\n    system: 'imperial',\n    factor: 1 / 72\n  },\n  pc: {\n    system: 'imperial',\n    factor: 1 / 6\n  },\n  in: {\n    system: 'imperial',\n    factor: 1\n  },\n  ft: {\n    system: 'imperial',\n    factor: 12\n  }\n};\n\nconst anchors = {\n  metric: {\n    unit: 'm',\n    ratio: 1 / 0.0254\n  },\n  imperial: {\n    unit: 'in',\n    ratio: 0.0254\n  }\n};\n\nfunction round (value, decimals) {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\nfunction convertDistance (value, fromUnit, toUnit, opts) {\n  if (typeof value !== 'number' || !isFinite(value)) throw new Error('Value must be a finite number');\n  if (!fromUnit || !toUnit) throw new Error('Must specify from and to units');\n\n  opts = opts || {};\n  var pixelsPerInch = defined(opts.pixelsPerInch, 96);\n  var precision = opts.precision;\n  var roundPixel = opts.roundPixel !== false;\n\n  fromUnit = fromUnit.toLowerCase();\n  toUnit = toUnit.toLowerCase();\n\n  if (units.indexOf(fromUnit) === -1) throw new Error('Invalid from unit \"' + fromUnit + '\", must be one of: ' + units.join(', '));\n  if (units.indexOf(toUnit) === -1) throw new Error('Invalid from unit \"' + toUnit + '\", must be one of: ' + units.join(', '));\n\n  if (fromUnit === toUnit) {\n    // We don't need to convert from A to B since they are the same already\n    return value;\n  }\n\n  var toFactor = 1;\n  var fromFactor = 1;\n  var isToPixel = false;\n\n  if (fromUnit === 'px') {\n    fromFactor = 1 / pixelsPerInch;\n    fromUnit = 'in';\n  }\n  if (toUnit === 'px') {\n    isToPixel = true;\n    toFactor = pixelsPerInch;\n    toUnit = 'in';\n  }\n\n  var fromUnitData = conversions[fromUnit];\n  var toUnitData = conversions[toUnit];\n\n  // source to anchor inside source's system\n  var anchor = value * fromUnitData.factor * fromFactor;\n\n  // if systems differ, convert one to another\n  if (fromUnitData.system !== toUnitData.system) {\n    // regular 'm' to 'in' and so forth\n    anchor *= anchors[fromUnitData.system].ratio;\n  }\n\n  var result = anchor / toUnitData.factor * toFactor;\n  if (isToPixel && roundPixel) {\n    result = Math.round(result);\n  } else if (typeof precision === 'number' && isFinite(precision)) {\n    result = round(result, precision);\n  }\n  return result;\n}\n\nmodule.exports = convertDistance;\nmodule.exports.units = units;\n","import paperSizes from './paper-sizes';\nimport convertLength from 'convert-length';\n\nexport function getDimensionsFromPreset (dimensions, unitsTo = 'px', pixelsPerInch = 72) {\n  if (typeof dimensions === 'string') {\n    const key = dimensions.toLowerCase();\n    if (!(key in paperSizes)) {\n      throw new Error(`The dimension preset \"${dimensions}\" is not supported or could not be found; try using a4, a3, postcard, letter, etc.`)\n    }\n    const preset = paperSizes[key];\n    return preset.dimensions.map(d => {\n      return convertDistance(d, preset.units, unitsTo, pixelsPerInch);\n    });\n  } else {\n    return dimensions;\n  }\n}\n\nexport function convertDistance (dimension, unitsFrom = 'px', unitsTo = 'px', pixelsPerInch = 72) {\n  return convertLength(dimension, unitsFrom, unitsTo, {\n    pixelsPerInch,\n    precision: 4,\n    roundPixel: true\n  });\n}\n","import { getDimensionsFromPreset, convertDistance } from '../distances';\nimport { isBrowser, defined } from '../util';\n\nfunction checkIfHasDimensions (settings) {\n  if (!settings.dimensions) return false;\n  if (typeof settings.dimensions === 'string') return true;\n  if (Array.isArray(settings.dimensions) && settings.dimensions.length >= 2) return true;\n  return false;\n}\n\nfunction getParentSize (props, settings) {\n  // When no { dimension } is passed in node, we default to HTML canvas size\n  if (!isBrowser()) {\n    return [ 300, 150 ];\n  }\n\n  let element = settings.parent || window;\n\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return [ window.innerWidth, window.innerHeight ];\n  } else {\n    const { width, height } = element.getBoundingClientRect();\n    return [ width, height ];\n  }\n}\n\nexport default function resizeCanvas (props, settings) {\n  let width, height;\n  let styleWidth, styleHeight;\n  let canvasWidth, canvasHeight;\n\n  const browser = isBrowser();\n  const dimensions = settings.dimensions;\n  const hasDimensions = checkIfHasDimensions(settings);\n  const exporting = props.exporting;\n  let scaleToFit = hasDimensions ? settings.scaleToFit !== false : false;\n  let scaleToView = (!exporting && hasDimensions) ? settings.scaleToView : true;\n  // in node, cancel both of these options\n  if (!browser) scaleToFit = scaleToView = false;\n  const units = settings.units;\n  const pixelsPerInch = (typeof settings.pixelsPerInch === 'number' && isFinite(settings.pixelsPerInch)) ? settings.pixelsPerInch : 72;\n  const bleed = defined(settings.bleed, 0);\n\n  const devicePixelRatio = browser ? window.devicePixelRatio : 1;\n  const basePixelRatio = scaleToView ? devicePixelRatio : 1;\n\n  let pixelRatio, exportPixelRatio;\n\n  // If a pixel ratio is specified, we will use it.\n  // Otherwise:\n  //  -> If dimension is specified, use base ratio (i.e. size for export)\n  //  -> If no dimension is specified, use device ratio (i.e. size for screen)\n  if (typeof settings.pixelRatio === 'number' && isFinite(settings.pixelRatio)) {\n    // When { pixelRatio } is specified, it's also used as default exportPixelRatio.\n    pixelRatio = settings.pixelRatio;\n    exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n  } else {\n    if (hasDimensions) {\n      // When a dimension is specified, use the base ratio rather than screen ratio\n      pixelRatio = basePixelRatio;\n      // Default to a pixel ratio of 1 so that you end up with the same dimension\n      // you specified, i.e. [ 500, 500 ] is exported as 500x500 px\n      exportPixelRatio = defined(settings.exportPixelRatio, 1);\n    } else {\n      // No dimension is specified, assume full-screen retina sizing\n      pixelRatio = devicePixelRatio;\n      // Default to screen pixel ratio, so that it's like taking a device screenshot\n      exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n    }\n  }\n\n  // Clamp pixel ratio\n  if (typeof settings.maxPixelRatio === 'number' && isFinite(settings.maxPixelRatio)) {\n    pixelRatio = Math.min(settings.maxPixelRatio, pixelRatio);\n  }\n\n  // Handle export pixel ratio\n  if (exporting) {\n    pixelRatio = exportPixelRatio;\n  }\n\n  // parentWidth = typeof parentWidth === 'undefined' ? defaultNodeSize[0] : parentWidth;\n  // parentHeight = typeof parentHeight === 'undefined' ? defaultNodeSize[1] : parentHeight;\n\n  let [ parentWidth, parentHeight ] = getParentSize(props, settings);\n  let trimWidth, trimHeight;\n\n  // You can specify a dimensions in pixels or cm/m/in/etc\n  if (hasDimensions) {\n    const result = getDimensionsFromPreset(dimensions, units, pixelsPerInch);\n    const highest = Math.max(result[0], result[1]);\n    const lowest = Math.min(result[0], result[1]);\n    if (settings.orientation) {\n      const landscape = settings.orientation === 'landscape';\n      width = landscape ? highest : lowest;\n      height = landscape ? lowest : highest;\n    } else {\n      width = result[0];\n      height = result[1];\n    }\n\n    trimWidth = width;\n    trimHeight = height;\n\n    // Apply bleed which is assumed to be in the same units\n    width += bleed * 2;\n    height += bleed * 2;\n  } else {\n    width = parentWidth;\n    height = parentHeight;\n    trimWidth = width;\n    trimHeight = height;\n  }\n\n  // Real size in pixels after PPI is taken into account\n  let realWidth = width;\n  let realHeight = height;\n  if (hasDimensions && units) {\n    // Convert to digital/pixel units if necessary\n    realWidth = convertDistance(width, units, 'px', pixelsPerInch);\n    realHeight = convertDistance(height, units, 'px', pixelsPerInch);\n  }\n\n  // How big to set the 'view' of the canvas in the browser (i.e. style)\n  styleWidth = Math.round(realWidth);\n  styleHeight = Math.round(realHeight);\n\n  // If we wish to scale the view to the browser window\n  if (scaleToFit && !exporting && hasDimensions) {\n    const aspect = width / height;\n    const windowAspect = parentWidth / parentHeight;\n    const scaleToFitPadding = defined(settings.scaleToFitPadding, 40);\n    const maxWidth = Math.round(parentWidth - scaleToFitPadding * 2);\n    const maxHeight = Math.round(parentHeight - scaleToFitPadding * 2);\n    if (styleWidth > maxWidth || styleHeight > maxHeight) {\n      if (windowAspect > aspect) {\n        styleHeight = maxHeight;\n        styleWidth = Math.round(styleHeight * aspect);\n      } else {\n        styleWidth = maxWidth;\n        styleHeight = Math.round(styleWidth / aspect);\n      }\n    }\n  }\n\n  canvasWidth = scaleToView ? Math.round(pixelRatio * styleWidth) : Math.round(pixelRatio * realWidth);\n  canvasHeight = scaleToView ? Math.round(pixelRatio * styleHeight) : Math.round(pixelRatio * realHeight);\n\n  const viewportWidth = scaleToView ? Math.round(styleWidth) : Math.round(realWidth);\n  const viewportHeight = scaleToView ? Math.round(styleHeight) : Math.round(realHeight);\n\n  const scaleX = canvasWidth / width;\n  const scaleY = canvasHeight / height;\n\n  // Assign to current props\n  return {\n    bleed,\n    pixelRatio,\n    width,\n    height,\n    dimensions: [ width, height ],\n    units: units || 'px',\n    scaleX,\n    scaleY,\n    pixelsPerInch,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    trimWidth,\n    trimHeight,\n    styleWidth,\n    styleHeight\n  };\n}\n","module.exports = getCanvasContext\nfunction getCanvasContext (type, opts) {\n  if (typeof type !== 'string') {\n    throw new TypeError('must specify type string')\n  }\n\n  opts = opts || {}\n\n  if (typeof document === 'undefined' && !opts.canvas) {\n    return null // check for Node\n  }\n\n  var canvas = opts.canvas || document.createElement('canvas')\n  if (typeof opts.width === 'number') {\n    canvas.width = opts.width\n  }\n  if (typeof opts.height === 'number') {\n    canvas.height = opts.height\n  }\n\n  var attribs = opts\n  var gl\n  try {\n    var names = [ type ]\n    // prefix GL contexts\n    if (type.indexOf('webgl') === 0) {\n      names.push('experimental-' + type)\n    }\n\n    for (var i = 0; i < names.length; i++) {\n      gl = canvas.getContext(names[i], attribs)\n      if (gl) return gl\n    }\n  } catch (e) {\n    gl = null\n  }\n  return (gl || null) // ensure null on fail\n}\n","import assign from 'object-assign';\nimport getCanvasContext from 'get-canvas-context';\nimport { isBrowser } from '../util';\n\nfunction createCanvasElement () {\n  if (!isBrowser()) {\n    throw new Error('It appears you are runing from Node.js or a non-browser environment. Try passing in an existing { canvas } interface instead.');\n  }\n  return document.createElement('canvas');\n}\n\nexport default function createCanvas (settings = {}) {\n  let context, canvas;\n  let ownsCanvas = false;\n  if (settings.canvas !== false) {\n    // Determine the canvas and context to create\n    context = settings.context;\n    if (!context || typeof context === 'string') {\n      let newCanvas = settings.canvas;\n      if (!newCanvas) {\n        newCanvas = createCanvasElement();\n        ownsCanvas = true;\n      }\n      const type = context || '2d';\n      if (typeof newCanvas.getContext !== 'function') {\n        throw new Error(`The specified { canvas } element does not have a getContext() function, maybe it is not a <canvas> tag?`);\n      }\n      context = getCanvasContext(type, assign({}, settings.attributes, { canvas: newCanvas }));\n      if (!context) {\n        throw new Error(`Failed at canvas.getContext('${type}') - the browser may not support this context, or a different context may already be in use with this canvas.`);\n      }\n    }\n\n    canvas = context.canvas;\n    // Ensure context matches user's canvas expectations\n    if (settings.canvas && canvas !== settings.canvas) {\n      throw new Error('The { canvas } and { context } settings must point to the same underlying canvas element');\n    }\n\n    // Apply pixelation to canvas if necessary, this is mostly a convenience utility\n    if (settings.pixelated) {\n      context.imageSmoothingEnabled = false;\n      context.mozImageSmoothingEnabled = false;\n      context.oImageSmoothingEnabled = false;\n      context.webkitImageSmoothingEnabled = false;\n      context.msImageSmoothingEnabled = false;\n      canvas.style['image-rendering'] = 'pixelated';\n    }\n  }\n  return { canvas, context, ownsCanvas };\n}\n","import assign from 'object-assign';\nimport rightNow from 'right-now';\nimport isPromise from 'is-promise';\nimport { isBrowser, defined, isWebGLContext, isCanvas, getClientAPI } from '../util';\nimport deepEqual from 'deep-equal';\nimport {\n  resolveFilename,\n  saveFile,\n  saveDataURL,\n  getTimeStamp,\n  exportCanvas,\n  streamStart,\n  streamEnd\n} from '../save';\nimport { checkSettings } from '../accessibility';\n\nimport keyboardShortcuts from './keyboardShortcuts';\nimport resizeCanvas from './resizeCanvas';\nimport createCanvas from './createCanvas';\n\nclass SketchManager {\n  constructor () {\n    this._settings = {};\n    this._props = {};\n    this._sketch = undefined;\n    this._raf = null;\n    this._recordTimeout = null;\n\n    // Some hacky things required to get around p5.js structure\n    this._lastRedrawResult = undefined;\n    this._isP5Resizing = false;\n\n    this._keyboardShortcuts = keyboardShortcuts({\n      enabled: () => this.settings.hotkeys !== false,\n      save: (ev) => {\n        if (ev.shiftKey) {\n          if (this.props.recording) {\n            this.endRecord();\n            this.run();\n          } else this.record();\n        } else if (!this.props.recording) {\n          this.exportFrame();\n        }\n      },\n      togglePlay: () => {\n        if (this.props.playing) this.pause();\n        else this.play();\n      },\n      commit: (ev) => {\n        this.exportFrame({ commit: true });\n      }\n    });\n\n    this._animateHandler = () => this.animate();\n\n    this._resizeHandler = () => {\n      const changed = this.resize();\n      // Only re-render when size actually changes\n      if (changed) {\n        this.render();\n      }\n    };\n  }\n\n  get sketch () {\n    return this._sketch;\n  }\n\n  get settings () {\n    return this._settings;\n  }\n\n  get props () {\n    return this._props;\n  }\n\n  _computePlayhead (currentTime, duration) {\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n    return hasDuration ? currentTime / duration : 0;\n  }\n\n  _computeFrame (playhead, time, totalFrames, fps) {\n    return (isFinite(totalFrames) && totalFrames > 1)\n      ? Math.floor(playhead * (totalFrames - 1))\n      : Math.floor(fps * time);\n  }\n\n  _computeCurrentFrame () {\n    return this._computeFrame(\n      this.props.playhead, this.props.time,\n      this.props.totalFrames, this.props.fps\n    );\n  }\n\n  _getSizeProps () {\n    const props = this.props;\n    return {\n      width: props.width,\n      height: props.height,\n      pixelRatio: props.pixelRatio,\n      canvasWidth: props.canvasWidth,\n      canvasHeight: props.canvasHeight,\n      viewportWidth: props.viewportWidth,\n      viewportHeight: props.viewportHeight\n    };\n  }\n\n  run () {\n    if (!this.sketch) throw new Error('should wait until sketch is loaded before trying to play()');\n\n    // Start an animation frame loop if necessary\n    if (this.settings.playing !== false) {\n      this.play();\n    }\n\n    // Let's let this warning hang around for a few versions...\n    if (typeof this.sketch.dispose === 'function') {\n      console.warn('In canvas-sketch@0.0.23 the dispose() event has been renamed to unload()');\n    }\n\n    // In case we aren't playing or animated, make sure we still trigger begin message...\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // Render an initial frame\n    this.tick();\n    this.render();\n    return this;\n  }\n\n  _cancelTimeouts () {\n    if (this._raf != null && typeof window !== 'undefined' && typeof window.cancelAnimationFrame === 'function') {\n      window.cancelAnimationFrame(this._raf);\n      this._raf = null;\n    }\n    if (this._recordTimeout != null) {\n      clearTimeout(this._recordTimeout);\n      this._recordTimeout = null;\n    }\n  }\n\n  play () {\n    let animate = this.settings.animate;\n    if ('animation' in this.settings) {\n      animate = true;\n      console.warn('[canvas-sketch] { animation } has been renamed to { animate }');\n    }\n    if (!animate) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Using { animate } in Node.js is not yet supported');\n      return;\n    }\n    if (this.props.playing) return;\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // console.log('play', this.props.time)\n\n    // Start a render loop\n    this.props.playing = true;\n    this._cancelTimeouts();\n    this._lastTime = rightNow();\n    this._raf = window.requestAnimationFrame(this._animateHandler);\n  }\n\n  pause () {\n    if (this.props.recording) this.endRecord();\n    this.props.playing = false;\n\n    this._cancelTimeouts();\n  }\n\n  togglePlay () {\n    if (this.props.playing) this.pause();\n    else this.play();\n  }\n\n  // Stop and reset to frame zero\n  stop () {\n    this.pause();\n    this.props.frame = 0;\n    this.props.playhead = 0;\n    this.props.time = 0;\n    this.props.deltaTime = 0;\n    this.props.started = false;\n    this.render();\n  }\n\n  record () {\n    if (this.props.recording) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Recording from Node.js is not yet supported');\n      return;\n    }\n\n    this.stop();\n    this.props.playing = true;\n    this.props.recording = true;\n\n    const exportOpts = this._createExportOptions({ sequence: true });\n\n    const frameInterval = 1 / this.props.fps;\n    // Render each frame in the sequence\n    this._cancelTimeouts();\n    const tick = () => {\n      if (!this.props.recording) return Promise.resolve();\n      this.props.deltaTime = frameInterval;\n      this.tick();\n      return this.exportFrame(exportOpts)\n        .then(() => {\n          if (!this.props.recording) return; // was cancelled before\n          this.props.deltaTime = 0;\n          this.props.frame++;\n          if (this.props.frame < this.props.totalFrames) {\n            this.props.time += frameInterval;\n            this.props.playhead = this._computePlayhead(this.props.time, this.props.duration);\n            this._recordTimeout = setTimeout(tick, 0);\n          } else {\n            console.log('Finished recording');\n            this._signalEnd();\n            this.endRecord();\n            this.stop();\n            this.run();\n          }\n        });\n    };\n\n    // Trigger a start event before we begin recording\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // Trigger 'begin record' event\n    if (this.sketch && typeof this.sketch.beginRecord === 'function') {\n      this._wrapContextScale(props => this.sketch.beginRecord(props));\n    }\n\n    // Initiate a streaming start if necessary\n    streamStart(exportOpts)\n      .catch(err => {\n        console.error(err);\n      })\n      .then(response => {\n        this._raf = window.requestAnimationFrame(tick);\n      });\n  }\n\n  _signalBegin () {\n    if (this.sketch && typeof this.sketch.begin === 'function') {\n      this._wrapContextScale(props => this.sketch.begin(props));\n    }\n  }\n\n  _signalEnd () {\n    if (this.sketch && typeof this.sketch.end === 'function') {\n      this._wrapContextScale(props => this.sketch.end(props));\n    }\n  }\n\n  endRecord () {\n    const wasRecording = this.props.recording;\n\n    this._cancelTimeouts();\n    this.props.recording = false;\n    this.props.deltaTime = 0;\n    this.props.playing = false;\n\n    // tell CLI that stream has finished\n    return streamEnd()\n      .catch(err => {\n        console.error(err);\n      })\n      .then(() => {\n        // Trigger 'end record' event\n        if (wasRecording && this.sketch && typeof this.sketch.endRecord === 'function') {\n          this._wrapContextScale(props => this.sketch.endRecord(props));\n        }\n      });\n  }\n\n  _createExportOptions (opt = {}) {\n    return {\n      sequence: opt.sequence,\n      save: opt.save,\n      fps: this.props.fps,\n      frame: opt.sequence ? this.props.frame : undefined,\n      file: this.settings.file,\n      name: this.settings.name,\n      prefix: this.settings.prefix,\n      suffix: this.settings.suffix,\n      encoding: this.settings.encoding,\n      encodingQuality: this.settings.encodingQuality,\n      timeStamp: opt.timeStamp || getTimeStamp(),\n      totalFrames: isFinite(this.props.totalFrames) ? Math.max(0, this.props.totalFrames) : 1000\n    };\n  }\n\n  exportFrame (opt = {}) {\n    if (!this.sketch) return Promise.all([]);\n    if (typeof this.sketch.preExport === 'function') {\n      this.sketch.preExport();\n    }\n\n    // Options for export function\n    let exportOpts = this._createExportOptions(opt);\n\n    const client = getClientAPI();\n    let p = Promise.resolve();\n    if (client && opt.commit && typeof client.commit === 'function') {\n      const commitOpts = assign({}, exportOpts);\n      const hash = client.commit(commitOpts);\n      if (isPromise(hash)) p = hash;\n      else p = Promise.resolve(hash);\n    }\n\n    return p.then(hash => {\n      return this._doExportFrame(assign({}, exportOpts, { hash: hash || '' }));\n    }).then(result => {\n      // Most common usecase is to export a single layer,\n      // so let's optimize the user experience for that.\n      if (result.length === 1) return result[0];\n      else return result;\n    });\n  }\n\n  _doExportFrame (exportOpts = {}) {\n    this._props.exporting = true;\n\n    // Resize to output resolution\n    this.resize();\n\n    // Draw at this output resolution\n    let drawResult = this.render();\n\n    // The self owned canvas (may be undefined...!)\n    const canvas = this.props.canvas;\n\n    // Get list of results from render\n    if (typeof drawResult === 'undefined') {\n      drawResult = [ canvas ];\n    }\n    drawResult = [].concat(drawResult).filter(Boolean);\n\n    // Transform the canvas/file descriptors into a consistent format,\n    // and pull out any data URLs from canvas elements\n    drawResult = drawResult.map(result => {\n      const hasDataObject = typeof result === 'object' && result && ('data' in result || 'dataURL' in result);\n      const data = hasDataObject ? result.data : result;\n      const opts = hasDataObject ? assign({}, result, { data }) : { data };\n      if (isCanvas(data)) {\n        const encoding = opts.encoding || exportOpts.encoding;\n        const encodingQuality = defined(opts.encodingQuality, exportOpts.encodingQuality, 0.95);\n        const { dataURL, extension, type } = exportCanvas(data, { encoding, encodingQuality });\n        return Object.assign(opts, { dataURL, extension, type });\n      } else {\n        return opts;\n      }\n    });\n\n    // Now return to regular rendering mode\n    this._props.exporting = false;\n    this.resize();\n    this.render();\n\n    // And now we can save each result\n    return Promise.all(drawResult.map((result, i, layerList) => {\n      // By default, if rendering multiple layers we will give them indices\n      const curOpt = assign({\n        extension: '',\n        prefix: '',\n        suffix: ''\n      }, exportOpts, result, {\n        layer: i,\n        totalLayers: layerList.length\n      });\n\n      // If export is explicitly not saving, make sure nothing saves\n      // Otherwise default to the layer save option, or fallback to true\n      const saveParam = exportOpts.save === false ? false : result.save;\n      curOpt.save = saveParam !== false;\n\n      // Resolve a full filename from all the options\n      curOpt.filename = resolveFilename(curOpt);\n\n      // Clean up some parameters that may be ambiguous to the user\n      delete curOpt.encoding;\n      delete curOpt.encodingQuality;\n\n      // Clean it up further by just removing undefined values\n      for (let k in curOpt) {\n        if (typeof curOpt[k] === 'undefined') delete curOpt[k];\n      }\n\n      let savePromise = Promise.resolve({});\n      if (curOpt.save) {\n        // Whether to actually save (download) this fragment\n        const data = curOpt.data;\n        if (curOpt.dataURL) {\n          const dataURL = curOpt.dataURL;\n          savePromise = saveDataURL(dataURL, curOpt);\n        } else {\n          savePromise = saveFile(data, curOpt);\n        }\n      }\n      return savePromise.then(saveResult => {\n        return Object.assign({}, curOpt, saveResult);\n      });\n    })).then(ev => {\n      const savedEvents = ev.filter(e => e.save);\n      if (savedEvents.length > 0) {\n        // Log the saved exports\n        const eventWithOutput = savedEvents.find(e => e.outputName);\n        const isClient = savedEvents.some(e => e.client);\n        const isStreaming = savedEvents.some(e => e.stream);\n        let item;\n        // many files, just log how many were exported\n        if (savedEvents.length > 1) item = savedEvents.length;\n        // in CLI, we know exact path dirname\n        else if (eventWithOutput) item = `${eventWithOutput.outputName}/${savedEvents[0].filename}`;\n        // in browser, we can only know it went to \"browser download folder\"\n        else item = `${savedEvents[0].filename}`;\n        let ofSeq = '';\n        if (exportOpts.sequence) {\n          const hasTotalFrames = isFinite(this.props.totalFrames);\n          ofSeq = hasTotalFrames ? ` (frame ${exportOpts.frame + 1} / ${this.props.totalFrames})` : ` (frame ${exportOpts.frame})`;\n        } else if (savedEvents.length > 1) {\n          ofSeq = ` files`;\n        }\n        const client = isClient ? 'canvas-sketch-cli' : 'canvas-sketch';\n        const action = isStreaming ? 'Streaming into' : 'Exported';\n        console.log(`%c[${client}]%c ${action} %c${item}%c${ofSeq}`, 'color: #8e8e8e;', 'color: initial;', 'font-weight: bold;', 'font-weight: initial;');\n      }\n      if (typeof this.sketch.postExport === 'function') {\n        this.sketch.postExport();\n      }\n      return ev;\n    });\n  }\n\n  _wrapContextScale (cb) {\n    this._preRender();\n    cb(this.props);\n    this._postRender();\n  }\n\n  _preRender () {\n    const props = this.props;\n\n    // Scale context for unit sizing\n    if (!this.props.gl && props.context && !props.p5) {\n      props.context.save();\n      if (this.settings.scaleContext !== false) {\n        props.context.scale(props.scaleX, props.scaleY);\n      }\n    } else if (props.p5) {\n      props.p5.scale(props.scaleX / props.pixelRatio, props.scaleY / props.pixelRatio);\n    }\n  }\n\n  _postRender () {\n    const props = this.props;\n\n    if (!this.props.gl && props.context && !props.p5) {\n      props.context.restore();\n    }\n\n    // Flush by default, this may be revisited at a later point.\n    // We do this to ensure toDataURL can be called immediately after.\n    // Most likely browsers already handle this, so we may revisit this and\n    // remove it if it improves performance without any usability issues.\n    if (props.gl && this.settings.flush !== false && !props.p5) {\n      props.gl.flush();\n    }\n  }\n\n  tick () {\n    if (this.sketch && typeof this.sketch.tick === 'function') {\n      this._preRender();\n      this.sketch.tick(this.props);\n      this._postRender();\n    }\n  }\n\n  render () {\n    if (this.props.p5) {\n      this._lastRedrawResult = undefined;\n      this.props.p5.redraw();\n      return this._lastRedrawResult;\n    } else {\n      return this.submitDrawCall();\n    }\n  }\n\n  submitDrawCall () {\n    if (!this.sketch) return;\n\n    const props = this.props;\n    this._preRender();\n\n    let drawResult;\n\n    if (typeof this.sketch === 'function') {\n      drawResult = this.sketch(props);\n    } else if (typeof this.sketch.render === 'function') {\n      drawResult = this.sketch.render(props);\n    }\n\n    this._postRender();\n\n    return drawResult;\n  }\n\n  update (opt = {}) {\n    // Currently update() is only focused on resizing,\n    // but later we will support other options like switching\n    // frames and such.\n    const notYetSupported = [\n      'animate'\n    ];\n\n    Object.keys(opt).forEach(key => {\n      if (notYetSupported.indexOf(key) >= 0) {\n        throw new Error(`Sorry, the { ${key} } option is not yet supported with update().`);\n      }\n    });\n\n    const oldCanvas = this._settings.canvas;\n    const oldContext = this._settings.context;\n\n    // Merge new options into settings\n    for (let key in opt) {\n      const value = opt[key];\n      if (typeof value !== 'undefined') { // ignore undefined\n        this._settings[key] = value;\n      }\n    }\n\n    // Merge in time props\n    const timeOpts = Object.assign({}, this._settings, opt);\n    if ('time' in opt && 'frame' in opt) throw new Error('You should specify { time } or { frame } but not both');\n    else if ('time' in opt) delete timeOpts.frame;\n    else if ('frame' in opt) delete timeOpts.time;\n    if ('duration' in opt && 'totalFrames' in opt) throw new Error('You should specify { duration } or { totalFrames } but not both');\n    else if ('duration' in opt) delete timeOpts.totalFrames;\n    else if ('totalFrames' in opt) delete timeOpts.duration;\n\n    // Merge in user data without copying\n    if ('data' in opt) this._props.data = opt.data;\n\n    const timeProps = this.getTimeProps(timeOpts);\n    Object.assign(this._props, timeProps);\n\n    // If either canvas or context is changed, we should re-update\n    if (oldCanvas !== this._settings.canvas || oldContext !== this._settings.context) {\n      const { canvas, context } = createCanvas(this._settings);\n\n      this.props.canvas = canvas;\n      this.props.context = context;\n\n      // Delete or add a 'gl' prop for convenience\n      this._setupGLKey();\n\n      // Re-mount the new canvas if it has no parent\n      this._appendCanvasIfNeeded();\n    }\n\n    // Special case to support P5.js\n    if (opt.p5 && typeof opt.p5 !== 'function') {\n      this.props.p5 = opt.p5;\n      this.props.p5.draw = () => {\n        if (this._isP5Resizing) return;\n        this._lastRedrawResult = this.submitDrawCall();\n      };\n    }\n\n    // Update playing state if necessary\n    if ('playing' in opt) {\n      if (opt.playing) this.play();\n      else this.pause();\n    }\n\n    checkSettings(this._settings);\n\n    // Draw new frame\n    this.resize();\n    this.render();\n    return this.props;\n  }\n\n  resize () {\n    const oldSizes = this._getSizeProps();\n\n    const settings = this.settings;\n    const props = this.props;\n\n    // Recompute new properties based on current setup\n    const newProps = resizeCanvas(props, settings);\n\n    // Assign to current props\n    Object.assign(this._props, newProps);\n\n    // Now we actually update the canvas width/height and style props\n    const {\n      pixelRatio,\n      canvasWidth,\n      canvasHeight,\n      styleWidth,\n      styleHeight\n    } = this.props;\n\n    // Update canvas settings\n    const canvas = this.props.canvas;\n    if (canvas && settings.resizeCanvas !== false) {\n      if (props.p5) {\n        // P5.js specific edge case\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n          this._isP5Resizing = true;\n          // This causes a re-draw :\\ so we ignore draws in the mean time... sorta hacky\n          props.p5.pixelDensity(pixelRatio);\n          props.p5.resizeCanvas(canvasWidth / pixelRatio, canvasHeight / pixelRatio, false);\n          this._isP5Resizing = false;\n        }\n      } else {\n        // Force canvas size\n        if (canvas.width !== canvasWidth) canvas.width = canvasWidth;\n        if (canvas.height !== canvasHeight) canvas.height = canvasHeight;\n      }\n      // Update canvas style\n      if (isBrowser() && settings.styleCanvas !== false) {\n        canvas.style.width = `${styleWidth}px`;\n        canvas.style.height = `${styleHeight}px`;\n      }\n    }\n\n    const newSizes = this._getSizeProps();\n    let changed = !deepEqual(oldSizes, newSizes);\n    if (changed) {\n      this._sizeChanged();\n    }\n    return changed;\n  }\n\n  _sizeChanged () {\n    // Send resize event to sketch\n    if (this.sketch && typeof this.sketch.resize === 'function') {\n      this.sketch.resize(this.props);\n    }\n  }\n\n  animate () {\n    if (!this.props.playing) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Animation in Node.js is not yet supported');\n      return;\n    }\n    this._raf = window.requestAnimationFrame(this._animateHandler);\n\n    let now = rightNow();\n\n    const fps = this.props.fps;\n    const frameIntervalMS = 1000 / fps;\n    let deltaTimeMS = now - this._lastTime;\n\n    const duration = this.props.duration;\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n\n    let isNewFrame = true;\n    const playbackRate = this.settings.playbackRate;\n    if (playbackRate === 'fixed') {\n      deltaTimeMS = frameIntervalMS;\n    } else if (playbackRate === 'throttle') {\n      if (deltaTimeMS > frameIntervalMS) {\n        now = now - (deltaTimeMS % frameIntervalMS);\n        this._lastTime = now;\n      } else {\n        isNewFrame = false;\n      }\n    } else {\n      this._lastTime = now;\n    }\n\n    const deltaTime = deltaTimeMS / 1000;\n    let newTime = this.props.time + deltaTime * this.props.timeScale;\n\n    // Handle reverse time scale\n    if (newTime < 0 && hasDuration) {\n      newTime = duration + newTime;\n    }\n\n    // Re-start animation\n    let isFinished = false;\n    let isLoopStart = false;\n\n    const looping = this.settings.loop !== false;\n\n    if (hasDuration && newTime >= duration) {\n      // Re-start animation\n      if (looping) {\n        isNewFrame = true;\n        newTime = newTime % duration;\n        isLoopStart = true;\n      } else {\n        isNewFrame = false;\n        newTime = duration;\n        isFinished = true;\n      }\n\n      this._signalEnd();\n    }\n\n    if (isNewFrame) {\n      this.props.deltaTime = deltaTime;\n      this.props.time = newTime;\n      this.props.playhead = this._computePlayhead(newTime, duration);\n      const lastFrame = this.props.frame;\n      this.props.frame = this._computeCurrentFrame();\n      if (isLoopStart) this._signalBegin();\n      if (lastFrame !== this.props.frame) this.tick();\n      this.render();\n      this.props.deltaTime = 0;\n    }\n\n    if (isFinished) {\n      this.pause();\n    }\n  }\n\n  dispatch (cb) {\n    if (typeof cb !== 'function') throw new Error('must pass function into dispatch()');\n    cb(this.props);\n    this.render();\n  }\n\n  mount () {\n    this._appendCanvasIfNeeded();\n  }\n\n  unmount () {\n    if (isBrowser()) {\n      window.removeEventListener('resize', this._resizeHandler);\n      this._keyboardShortcuts.detach();\n    }\n    if (this.props.canvas.parentElement) {\n      this.props.canvas.parentElement.removeChild(this.props.canvas);\n    }\n  }\n\n  _appendCanvasIfNeeded () {\n    if (!isBrowser()) return;\n    if (this.settings.parent !== false && (this.props.canvas && !this.props.canvas.parentElement)) {\n      const defaultParent = this.settings.parent || document.body;\n      defaultParent.appendChild(this.props.canvas);\n    }\n  }\n\n  _setupGLKey () {\n    if (this.props.context) {\n      if (isWebGLContext(this.props.context)) {\n        this._props.gl = this.props.context;\n      } else {\n        delete this._props.gl;\n      }\n    }\n  }\n\n  getTimeProps (settings = {}) {\n    // Get timing data\n    let duration = settings.duration;\n    let totalFrames = settings.totalFrames;\n    const timeScale = defined(settings.timeScale, 1);\n    const fps = defined(settings.fps, 24);\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n    const hasTotalFrames = typeof totalFrames === 'number' && isFinite(totalFrames);\n\n    const totalFramesFromDuration = hasDuration ? Math.floor(fps * duration) : undefined;\n    const durationFromTotalFrames = hasTotalFrames ? (totalFrames / fps) : undefined;\n    if (hasDuration && hasTotalFrames && totalFramesFromDuration !== totalFrames) {\n      throw new Error('You should specify either duration or totalFrames, but not both. Or, they must match exactly.');\n    }\n\n    if (typeof settings.dimensions === 'undefined' && typeof settings.units !== 'undefined') {\n      console.warn(`You've specified a { units } setting but no { dimension }, so the units will be ignored.`);\n    }\n\n    totalFrames = defined(totalFrames, totalFramesFromDuration, Infinity);\n    duration = defined(duration, durationFromTotalFrames, Infinity);\n\n    const startTime = settings.time;\n    const startFrame = settings.frame;\n    const hasStartTime = typeof startTime === 'number' && isFinite(startTime);\n    const hasStartFrame = typeof startFrame === 'number' && isFinite(startFrame);\n\n    // start at zero unless user specifies frame or time (but not both mismatched)\n    let time = 0;\n    let frame = 0;\n    let playhead = 0;\n    if (hasStartTime && hasStartFrame) {\n      throw new Error('You should specify either start frame or time, but not both.');\n    } else if (hasStartTime) {\n      // User specifies time, we infer frames from FPS\n      time = startTime;\n      playhead = this._computePlayhead(time, duration);\n      frame = this._computeFrame(\n        playhead, time,\n        totalFrames, fps\n      );\n    } else if (hasStartFrame) {\n      // User specifies frame number, we infer time from FPS\n      frame = startFrame;\n      time = frame / fps;\n      playhead = this._computePlayhead(time, duration);\n    }\n\n    return {\n      playhead,\n      time,\n      frame,\n      duration,\n      totalFrames,\n      fps,\n      timeScale\n    };\n  }\n\n  setup (settings = {}) {\n    if (this.sketch) throw new Error('Multiple setup() calls not yet supported.');\n\n    this._settings = Object.assign({}, settings, this._settings);\n\n    checkSettings(this._settings);\n\n    // Get initial canvas & context\n    const { context, canvas } = createCanvas(this._settings);\n\n    const timeProps = this.getTimeProps(this._settings);\n\n    // Initial render state features\n    this._props = {\n      ...timeProps,\n      canvas,\n      context,\n      deltaTime: 0,\n      started: false,\n      exporting: false,\n      playing: false,\n      recording: false,\n      settings: this.settings,\n      data: this.settings.data,\n\n      // Export some specific actions to the sketch\n      render: () => this.render(),\n      togglePlay: () => this.togglePlay(),\n      dispatch: (cb) => this.dispatch(cb),\n      tick: () => this.tick(),\n      resize: () => this.resize(),\n      update: (opt) => this.update(opt),\n      exportFrame: opt => this.exportFrame(opt),\n      record: () => this.record(),\n      play: () => this.play(),\n      pause: () => this.pause(),\n      stop: () => this.stop()\n    };\n\n    // For WebGL sketches, a gl variable reads a bit better\n    this._setupGLKey();\n\n    // Trigger initial resize now so that canvas is already sized\n    // by the time we load the sketch\n    this.resize();\n  }\n\n  loadAndRun (canvasSketch, newSettings) {\n    return this.load(canvasSketch, newSettings).then(() => {\n      this.run();\n      return this;\n    });\n  }\n\n  unload () {\n    this.pause();\n    if (!this.sketch) return;\n    if (typeof this.sketch.unload === 'function') {\n      this._wrapContextScale(props => this.sketch.unload(props));\n    }\n    this._sketch = null;\n  }\n\n  destroy () {\n    this.unload();\n    this.unmount();\n  }\n\n  load (createSketch, newSettings) {\n    // User didn't specify a function\n    if (typeof createSketch !== 'function') {\n      throw new Error('The function must take in a function as the first parameter. Example:\\n  canvasSketcher(() => { ... }, settings)');\n    }\n\n    if (this.sketch) {\n      this.unload();\n    }\n\n    if (typeof newSettings !== 'undefined') {\n      this.update(newSettings);\n    }\n\n    // This is a bit of a tricky case; we set up the auto-scaling here\n    // in case the user decides to render anything to the context *before* the\n    // render() function... However, users should instead use begin() function for that.\n    this._preRender();\n\n    let preload = Promise.resolve();\n\n    // Because of P5.js's unusual structure, we have to do a bit of\n    // library-specific changes to support it properly.\n    if (this.settings.p5) {\n      if (!isBrowser()) {\n        throw new Error('[canvas-sketch] ERROR: Using p5.js in Node.js is not supported');\n      }\n      preload = new Promise(resolve => {\n        let P5Constructor = this.settings.p5;\n        let preload;\n        if (P5Constructor.p5) {\n          preload = P5Constructor.preload;\n          P5Constructor = P5Constructor.p5;\n        }\n\n        // The sketch setup; disable loop, set sizing, etc.\n        const p5Sketch = p5 => {\n          // Hook in preload if necessary\n          if (preload) p5.preload = () => preload(p5);\n          p5.setup = () => {\n            const props = this.props;\n            const isGL = this.settings.context === 'webgl';\n            const renderer = isGL ? p5.WEBGL : p5.P2D;\n            p5.noLoop();\n            p5.pixelDensity(props.pixelRatio);\n            p5.createCanvas(props.viewportWidth, props.viewportHeight, renderer);\n            if (isGL && this.settings.attributes) {\n              p5.setAttributes(this.settings.attributes);\n            }\n\n            this.update({ p5, canvas: p5.canvas, context: p5._renderer.drawingContext });\n            resolve();\n          };\n        };\n\n        // Support global and instance P5.js modes\n        if (typeof P5Constructor === 'function') {\n          new P5Constructor(p5Sketch);\n        } else {\n          if (typeof window.createCanvas !== 'function') {\n            throw new Error(\"{ p5 } setting is passed but can't find p5.js in global (window) scope. Maybe you did not create it globally?\\nnew p5(); // <-- attaches to global scope\");\n          }\n          p5Sketch(window);\n        }\n      });\n    }\n\n    return preload.then(() => {\n      // Load the user's sketch\n      let loader = createSketch(this.props);\n      if (!isPromise(loader)) {\n        loader = Promise.resolve(loader);\n      }\n      return loader;\n    }).then(sketch => {\n      if (!sketch) sketch = {};\n      this._sketch = sketch;\n\n      // Once the sketch is loaded we can add the events\n      if (isBrowser()) {\n        this._keyboardShortcuts.attach();\n        window.addEventListener('resize', this._resizeHandler);\n      }\n\n      this._postRender();\n\n      // The initial resize() in the constructor will not have\n      // triggered a resize() event on the sketch, since it was before\n      // the sketch was loaded. So we send the signal here, allowing\n      // users to react to the initial size before first render.\n      this._sizeChanged();\n      return this;\n    }).catch(err => {\n      console.warn('Could not start sketch, the async loading function rejected with an error:\\n    Error: ' + err.message);\n      throw err;\n    });\n  }\n}\n\nexport default SketchManager;\n","import { getClientAPI } from '../util';\n\nexport default function (opt = {}) {\n  const handler = ev => {\n    if (!opt.enabled()) return;\n\n    const client = getClientAPI();\n    if (ev.keyCode === 83 && !ev.altKey && (ev.metaKey || ev.ctrlKey)) {\n      // Cmd + S\n      ev.preventDefault();\n      opt.save(ev);\n    } else if (ev.keyCode === 32) {\n      // Space\n      // TODO: what to do with this? keep it, or remove it?\n      opt.togglePlay(ev);\n    } else if (client && !ev.altKey && ev.keyCode === 75 && (ev.metaKey || ev.ctrlKey)) {\n      // Cmd + K, only when canvas-sketch-cli is used\n      ev.preventDefault();\n      opt.commit(ev);\n    }\n  };\n\n  const attach = () => {\n    window.addEventListener('keydown', handler);\n  };\n\n  const detach = () => {\n    window.removeEventListener('keydown', handler);\n  };\n\n  return {\n    attach,\n    detach\n  };\n}\n","import SketchManager from './core/SketchManager';\nimport PaperSizes from './paper-sizes';\nimport { getClientAPI, defined } from './util';\n\nconst CACHE = 'hot-id-cache';\nconst runtimeCollisions = [];\n\nfunction isHotReload () {\n  const client = getClientAPI();\n  return client && client.hot;\n}\n\nfunction cacheGet (id) {\n  const client = getClientAPI();\n  if (!client) return undefined;\n  client[CACHE] = client[CACHE] || {};\n  return client[CACHE][id];\n}\n\nfunction cachePut (id, data) {\n  const client = getClientAPI();\n  if (!client) return undefined;\n  client[CACHE] = client[CACHE] || {};\n  client[CACHE][id] = data;\n}\n\nfunction getTimeProp (oldManager, newSettings) {\n  // Static sketches ignore the time persistency\n  return newSettings.animate ? { time: oldManager.props.time } : undefined;\n}\n\nfunction canvasSketch (sketch, settings = {}) {\n  if (settings.p5) {\n    if (settings.canvas || (settings.context && typeof settings.context !== 'string')) {\n      throw new Error(`In { p5 } mode, you can't pass your own canvas or context, unless the context is a \"webgl\" or \"2d\" string`);\n    }\n\n    // Do not create a canvas on startup, since P5.js does that for us\n    const context = typeof settings.context === 'string' ? settings.context : false;\n    settings = Object.assign({}, settings, { canvas: false, context });\n  }\n\n  const isHot = isHotReload();\n  let hotID;\n  if (isHot) {\n    // Use a magic name by default, force user to define each sketch if they\n    // require more than one in an application. Open to other ideas on how to tackle\n    // this as well...\n    hotID = defined(settings.id, '$__DEFAULT_CANVAS_SKETCH_ID__$');\n  }\n  let isInjecting = isHot && typeof hotID === 'string';\n\n  if (isInjecting && runtimeCollisions.includes(hotID)) {\n    console.warn(`Warning: You have multiple calls to canvasSketch() in --hot mode. You must pass unique { id } strings in settings to enable hot reload across multiple sketches. `, hotID);\n    isInjecting = false;\n  }\n\n  let preload = Promise.resolve();\n\n  if (isInjecting) {\n    // Mark this as already spotted in this runtime instance\n    runtimeCollisions.push(hotID);\n\n    const previousData = cacheGet(hotID);\n    if (previousData) {\n      const next = () => {\n        // Grab new props from old sketch instance\n        const newProps = getTimeProp(previousData.manager, settings);\n        // Destroy the old instance\n        previousData.manager.destroy();\n        // Pass along new props\n        return newProps;\n      };\n\n      // Move along the next data...\n      preload = previousData.load.then(next).catch(next);\n    }\n  }\n\n  return preload.then(newProps => {\n    const manager = new SketchManager();\n    let result;\n    if (sketch) {\n      // Merge with incoming data\n      settings = Object.assign({}, settings, newProps);\n\n      // Apply settings and create a canvas\n      manager.setup(settings);\n\n      // Mount to DOM\n      manager.mount();\n\n      // load the sketch first\n      result = manager.loadAndRun(sketch);\n    } else {\n      result = Promise.resolve(manager);\n    }\n    if (isInjecting) {\n      cachePut(hotID, { load: result, manager });\n    }\n    return result;\n  });\n}\n\n// TODO: Figure out a nice way to export things.\ncanvasSketch.canvasSketch = canvasSketch;\ncanvasSketch.PaperSizes = PaperSizes;\n\nexport default canvasSketch;\n","/*!\n * pts.js 0.10.10 - Copyright © 2017-2022 William Ngan and contributors.\n * Licensed under Apache 2.0 License.\n * See https://github.com/williamngan/pts for details.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/_module.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/Canvas.ts\":\n/*!***********************!*\\\n  !*** ./src/Canvas.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasForm = exports.CanvasSpace = void 0;\nconst Space_1 = __webpack_require__(/*! ./Space */ \"./src/Space.ts\");\nconst Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Typography_1 = __webpack_require__(/*! ./Typography */ \"./src/Typography.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nconst Image_1 = __webpack_require__(/*! ./Image */ \"./src/Image.ts\");\nclass CanvasSpace extends Space_1.MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this._pixelScale = 1;\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._offscreen = false;\n        this._initialResize = false;\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pt\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            let id = elem;\n            id = (elem[0] === \"#\" || elem[0] === \".\") ? elem : \"#\" + elem;\n            _selector = document.querySelector(id);\n            _existed = true;\n            this.id = id.substr(1);\n        }\n        if (!_selector) {\n            this._container = this._createElement(\"div\", this.id + \"_container\");\n            this._canvas = this._createElement(\"canvas\", this.id);\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else if (_selector.nodeName.toLowerCase() != \"canvas\") {\n            this._container = _selector;\n            this._canvas = this._createElement(\"canvas\", this.id + \"_canvas\");\n            this._container.appendChild(this._canvas);\n            this._initialResize = true;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n            this._autoResize = false;\n        }\n        setTimeout(this._ready.bind(this, callback), 100);\n        this._ctx = this._canvas.getContext('2d');\n    }\n    _createElement(elem = \"div\", id) {\n        let d = document.createElement(elem);\n        d.setAttribute(\"id\", id);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this._initialResize = false;\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        this._bgcolor = opt.bgcolor ? opt.bgcolor : \"transparent\";\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        if (opt.retina !== false) {\n            let r1 = window ? window.devicePixelRatio || 1 : 1;\n            let r2 = this._ctx.webkitBackingStorePixelRatio || this._ctx.mozBackingStorePixelRatio || this._ctx.msBackingStorePixelRatio || this._ctx.oBackingStorePixelRatio || this._ctx.backingStorePixelRatio || 1;\n            this._pixelScale = Math.max(1, r1 / r2);\n        }\n        if (opt.offscreen) {\n            this._offscreen = true;\n            this._offCanvas = this._createElement(\"canvas\", this.id + \"_offscreen\");\n            this._offCtx = this._offCanvas.getContext('2d');\n        }\n        else {\n            this._offscreen = false;\n        }\n        if (opt.pixelDensity) {\n            this._pixelScale = opt.pixelDensity;\n        }\n        return this;\n    }\n    set autoResize(auto) {\n        if (!window)\n            return;\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this._canvas.width = Math.ceil(this.bound.size.x) * this._pixelScale;\n        this._canvas.height = Math.ceil(this.bound.size.y) * this._pixelScale;\n        this._canvas.style.width = Math.ceil(this.bound.size.x) + \"px\";\n        this._canvas.style.height = Math.ceil(this.bound.size.y) + \"px\";\n        if (this._offscreen) {\n            this._offCanvas.width = Math.ceil(this.bound.size.x) * this._pixelScale;\n            this._offCanvas.height = Math.ceil(this.bound.size.y) * this._pixelScale;\n        }\n        if (this._pixelScale != 1) {\n            this._ctx.scale(this._pixelScale, this._pixelScale);\n            if (this._offscreen) {\n                this._offCtx.scale(this._pixelScale, this._pixelScale);\n            }\n        }\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        this.render(this._ctx);\n        if (evt && !this.isPlaying)\n            this.playOnce(0);\n        return this;\n    }\n    _resizeHandler(evt) {\n        if (!window)\n            return;\n        let b = (this._autoResize || this._initialResize) ? this._container.getBoundingClientRect() : this._canvas.getBoundingClientRect();\n        if (b) {\n            let box = Pt_1.Bound.fromBoundingRect(b);\n            box.center = box.center.add(window.pageXOffset, window.pageYOffset);\n            this.resize(box, evt);\n        }\n    }\n    set background(bg) { this._bgcolor = bg; }\n    get background() { return this._bgcolor; }\n    get pixelScale() {\n        return this._pixelScale;\n    }\n    get hasOffscreen() {\n        return this._offscreen;\n    }\n    get offscreenCtx() { return this._offCtx; }\n    get offscreenCanvas() { return this._offCanvas; }\n    getForm() { return new CanvasForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() {\n        return this._isReady;\n    }\n    get ctx() { return this._ctx; }\n    clear(bg) {\n        if (bg)\n            this._bgcolor = bg;\n        const lastColor = this._ctx.fillStyle;\n        const px = Math.ceil(this.pixelScale);\n        if (!this._bgcolor || this._bgcolor === \"transparent\") {\n            this._ctx.clearRect(-px, -px, this._canvas.width + px, this._canvas.height + px);\n        }\n        else {\n            if (this._bgcolor.indexOf(\"rgba\") === 0 || (this._bgcolor.length === 9 && this._bgcolor.indexOf(\"#\") === 0)) {\n                this._ctx.clearRect(-px, -px, this._canvas.width + px, this._canvas.height + px);\n            }\n            this._ctx.fillStyle = this._bgcolor;\n            this._ctx.fillRect(-px, -px, this._canvas.width + px, this._canvas.height + px);\n        }\n        this._ctx.fillStyle = lastColor;\n        return this;\n    }\n    clearOffscreen(bg) {\n        if (this._offscreen) {\n            const px = Math.ceil(this.pixelScale);\n            if (bg) {\n                this._offCtx.fillStyle = bg;\n                this._offCtx.fillRect(-px, -px, this._canvas.width + px, this._canvas.height + px);\n            }\n            else {\n                this._offCtx.clearRect(-px, -px, this._offCanvas.width + px, this._offCanvas.height + px);\n            }\n        }\n        return this;\n    }\n    playItems(time) {\n        if (this._isReady) {\n            this._ctx.save();\n            if (this._offscreen)\n                this._offCtx.save();\n            super.playItems(time);\n            this._ctx.restore();\n            if (this._offscreen)\n                this._offCtx.restore();\n            this.render(this._ctx);\n        }\n    }\n    dispose() {\n        if (!window)\n            return;\n        window.removeEventListener('resize', this._resizeHandler.bind(this));\n        this.stop();\n        this.removeAll();\n        return this;\n    }\n    recorder(downloadOrCallback, filetype = \"webm\", bitrate = 15000000) {\n        let stream = this._canvas.captureStream();\n        const recorder = new MediaRecorder(stream, { mimeType: `video/${filetype}`, bitsPerSecond: bitrate });\n        recorder.ondataavailable = function (d) {\n            let url = URL.createObjectURL(new Blob([d.data], { type: `video/${filetype}` }));\n            if (typeof downloadOrCallback === \"function\") {\n                downloadOrCallback(url);\n            }\n            else if (downloadOrCallback) {\n                let a = document.createElement(\"a\");\n                a.href = url;\n                a.download = `canvas_video.${filetype}`;\n                a.click();\n                a.remove();\n            }\n        };\n        return recorder;\n    }\n}\nexports.CanvasSpace = CanvasSpace;\nclass CanvasForm extends Form_1.VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            fillStyle: \"#f03\", strokeStyle: \"#fff\",\n            lineWidth: 1, lineJoin: \"bevel\", lineCap: \"butt\",\n            globalAlpha: 1\n        };\n        if (!space)\n            return this;\n        const _setup = (ctx) => {\n            this._ctx = ctx;\n            this._ctx.fillStyle = this._style.fillStyle;\n            this._ctx.strokeStyle = this._style.strokeStyle;\n            this._ctx.lineJoin = \"bevel\";\n            this._ctx.font = this._font.value;\n            this._ready = true;\n        };\n        if (space instanceof CanvasRenderingContext2D) {\n            _setup(space);\n        }\n        else {\n            this._space = space;\n            this._space.add({ start: () => {\n                    _setup(this._space.ctx);\n                } });\n        }\n    }\n    get space() { return this._space; }\n    get ctx() { return this._space.ctx; }\n    useOffscreen(off = true, clear = false) {\n        if (clear)\n            this._space.clearOffscreen((typeof clear == \"string\") ? clear : null);\n        this._ctx = (this._space.hasOffscreen && off) ? this._space.offscreenCtx : this._space.ctx;\n        return this;\n    }\n    renderOffscreen(offset = [0, 0]) {\n        if (this._space.hasOffscreen) {\n            this._space.ctx.drawImage(this._space.offscreenCanvas, offset[0], offset[1], this._space.width, this._space.height);\n        }\n    }\n    alpha(a) {\n        this._ctx.globalAlpha = a;\n        this._style.globalAlpha = a;\n        return this;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.filled = c;\n        }\n        else {\n            this.filled = true;\n            this._style.fillStyle = c;\n            this._ctx.fillStyle = c;\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.stroked = c;\n        }\n        else {\n            this.stroked = true;\n            this._style.strokeStyle = c;\n            this._ctx.strokeStyle = c;\n            if (width) {\n                this._ctx.lineWidth = width;\n                this._style.lineWidth = width;\n            }\n            if (linejoin) {\n                this._ctx.lineJoin = linejoin;\n                this._style.lineJoin = linejoin;\n            }\n            if (linecap) {\n                this._ctx.lineCap = linecap;\n                this._style.lineCap = linecap;\n            }\n        }\n        return this;\n    }\n    applyFillStroke(filled = true, stroked = true, strokeWidth = 1) {\n        if (filled) {\n            if (typeof filled === 'string')\n                this.fill(filled);\n            this._ctx.fill();\n        }\n        if (stroked) {\n            if (typeof stroked === 'string')\n                this.stroke(stroked, strokeWidth);\n            this._ctx.stroke();\n        }\n        return this;\n    }\n    gradient(stops) {\n        let vals = [];\n        if (stops.length < 2)\n            stops.push([0.99, \"#000\"], [1, \"#000\"]);\n        for (let i = 0, len = stops.length; i < len; i++) {\n            let t = typeof stops[i] === 'string' ? i * (1 / (stops.length - 1)) : stops[i][0];\n            let v = typeof stops[i] === 'string' ? stops[i] : stops[i][1];\n            vals.push([t, v]);\n        }\n        return (area1, area2) => {\n            area1 = area1.map(a => a.abs());\n            if (area2)\n                area2.map(a => a.abs());\n            let grad = area2\n                ? this.ctx.createRadialGradient(area1[0][0], area1[0][1], area1[1][0], area2[0][0], area2[0][1], area2[1][0])\n                : this.ctx.createLinearGradient(area1[0][0], area1[0][1], area1[1][0], area1[1][1]);\n            for (let i = 0, len = vals.length; i < len; i++) {\n                grad.addColorStop(vals[i][0], vals[i][1]);\n            }\n            return grad;\n        };\n    }\n    composite(mode = 'source-over') {\n        this.ctx.globalCompositeOperation = mode;\n        return this;\n    }\n    clip() {\n        this.ctx.clip();\n        return this;\n    }\n    dash(segments = true, offset = 0) {\n        if (!segments) {\n            this._ctx.setLineDash([]);\n            this._ctx.lineDashOffset = 0;\n        }\n        else {\n            if (segments === true) {\n                segments = [5, 5];\n            }\n            this._ctx.setLineDash([segments[0], segments[1]]);\n            this._ctx.lineDashOffset = offset;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        this._ctx.font = this._font.value;\n        if (this._estimateTextWidth)\n            this.fontWidthEstimate(true);\n        return this;\n    }\n    fontWidthEstimate(estimate = true) {\n        this._estimateTextWidth = (estimate) ? Typography_1.Typography.textWidthEstimator(((c) => this._ctx.measureText(c).width)) : undefined;\n        return this;\n    }\n    getTextWidth(c) {\n        return (!this._estimateTextWidth) ? this._ctx.measureText(c + \" .\").width : this._estimateTextWidth(c);\n    }\n    _textTruncate(str, width, tail = \"\") {\n        return Typography_1.Typography.truncate(this.getTextWidth.bind(this), str, width, tail);\n    }\n    _textAlign(box, vertical, offset, center) {\n        let _box = Util_1.Util.iterToArray(box);\n        if (!Util_1.Util.arrayCheck(_box))\n            return;\n        if (!center)\n            center = Op_1.Rectangle.center(_box);\n        var px = _box[0][0];\n        if (this._ctx.textAlign == \"end\" || this._ctx.textAlign == \"right\") {\n            px = _box[1][0];\n        }\n        else if (this._ctx.textAlign == \"center\" || this._ctx.textAlign == \"middle\") {\n            px = center[0];\n        }\n        var py = center[1];\n        if (vertical == \"top\" || vertical == \"start\") {\n            py = _box[0][1];\n        }\n        else if (vertical == \"end\" || vertical == \"bottom\") {\n            py = _box[1][1];\n        }\n        return (offset) ? new Pt_1.Pt(px + offset[0], py + offset[1]) : new Pt_1.Pt(px, py);\n    }\n    reset() {\n        for (let k in this._style) {\n            if (this._style.hasOwnProperty(k)) {\n                this._ctx[k] = this._style[k];\n            }\n        }\n        this._font = new Form_1.Font();\n        this._ctx.font = this._font.value;\n        return this;\n    }\n    _paint() {\n        if (this._filled)\n            this._ctx.fill();\n        if (this._stroked)\n            this._ctx.stroke();\n    }\n    static point(ctx, p, radius = 5, shape = \"square\") {\n        if (!p)\n            return;\n        if (!CanvasForm[shape])\n            throw new Error(`${shape} is not a static function of CanvasForm`);\n        CanvasForm[shape](ctx, p, radius);\n    }\n    point(p, radius = 5, shape = \"square\") {\n        CanvasForm.point(this._ctx, p, radius, shape);\n        this._paint();\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        if (!pt)\n            return;\n        ctx.beginPath();\n        ctx.arc(pt[0], pt[1], radius, 0, Util_1.Const.two_pi, false);\n        ctx.closePath();\n    }\n    circle(pts) {\n        let p = Util_1.Util.iterToArray(pts);\n        CanvasForm.circle(this._ctx, p[0], p[1][0]);\n        this._paint();\n        return this;\n    }\n    static ellipse(ctx, pt, radius, rotation = 0, startAngle = 0, endAngle = Util_1.Const.two_pi, cc = false) {\n        if (!pt || !radius)\n            return;\n        ctx.beginPath();\n        ctx.ellipse(pt[0], pt[1], radius[0], radius[1], rotation, startAngle, endAngle, cc);\n    }\n    ellipse(pt, radius, rotation = 0, startAngle = 0, endAngle = Util_1.Const.two_pi, cc = false) {\n        CanvasForm.ellipse(this._ctx, pt, radius, rotation, startAngle, endAngle, cc);\n        this._paint();\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        if (!pt)\n            return;\n        ctx.beginPath();\n        ctx.arc(pt[0], pt[1], radius, startAngle, endAngle, cc);\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        CanvasForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        this._paint();\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        if (!pt)\n            return;\n        let x1 = pt[0] - halfsize;\n        let y1 = pt[1] - halfsize;\n        let x2 = pt[0] + halfsize;\n        let y2 = pt[1] + halfsize;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.lineTo(x2, y2);\n        ctx.lineTo(x2, y1);\n        ctx.closePath();\n    }\n    square(pt, halfsize) {\n        CanvasForm.square(this._ctx, pt, halfsize);\n        this._paint();\n        return this;\n    }\n    static line(ctx, pts) {\n        if (!Util_1.Util.arrayCheck(pts))\n            return;\n        let i = 0;\n        ctx.beginPath();\n        for (let it of pts) {\n            if (it) {\n                if (i++ > 0) {\n                    ctx.lineTo(it[0], it[1]);\n                }\n                else {\n                    ctx.moveTo(it[0], it[1]);\n                }\n            }\n        }\n    }\n    line(pts) {\n        CanvasForm.line(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static polygon(ctx, pts) {\n        if (!Util_1.Util.arrayCheck(pts))\n            return;\n        CanvasForm.line(ctx, pts);\n        ctx.closePath();\n    }\n    polygon(pts) {\n        CanvasForm.polygon(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static rect(ctx, pts) {\n        let p = Util_1.Util.iterToArray(pts);\n        if (!Util_1.Util.arrayCheck(p))\n            return;\n        ctx.beginPath();\n        ctx.moveTo(p[0][0], p[0][1]);\n        ctx.lineTo(p[0][0], p[1][1]);\n        ctx.lineTo(p[1][0], p[1][1]);\n        ctx.lineTo(p[1][0], p[0][1]);\n        ctx.closePath();\n    }\n    rect(pts) {\n        CanvasForm.rect(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static image(ctx, ptOrRect, img, orig) {\n        let t = Util_1.Util.iterToArray(ptOrRect);\n        let pos;\n        if (typeof t[0] === \"number\") {\n            pos = t;\n        }\n        else {\n            if (orig) {\n                let o = Util_1.Util.iterToArray(orig);\n                pos = [o[0][0], o[0][1], o[1][0] - o[0][0], o[1][1] - o[0][1],\n                    t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]];\n            }\n            else {\n                pos = [t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]];\n            }\n        }\n        if (img instanceof Image_1.Img) {\n            if (img.loaded) {\n                ctx.drawImage(img.image, ...pos);\n            }\n        }\n        else {\n            ctx.drawImage(img, ...pos);\n        }\n    }\n    image(ptOrRect, img, orig) {\n        if (img instanceof Image_1.Img) {\n            if (img.loaded) {\n                CanvasForm.image(this._ctx, ptOrRect, img.image, orig);\n            }\n        }\n        else {\n            CanvasForm.image(this._ctx, ptOrRect, img, orig);\n        }\n        return this;\n    }\n    static imageData(ctx, ptOrRect, img) {\n        let t = Util_1.Util.iterToArray(ptOrRect);\n        if (typeof t[0] === \"number\") {\n            ctx.putImageData(img, t[0], t[1]);\n        }\n        else {\n            ctx.putImageData(img, t[0][0], t[0][1], t[0][0], t[0][1], t[1][0], t[1][1]);\n        }\n    }\n    imageData(ptOrRect, img) {\n        CanvasForm.imageData(this._ctx, ptOrRect, img);\n        return this;\n    }\n    static text(ctx, pt, txt, maxWidth) {\n        if (!pt)\n            return;\n        ctx.fillText(txt, pt[0], pt[1], maxWidth);\n    }\n    text(pt, txt, maxWidth) {\n        CanvasForm.text(this._ctx, pt, txt, maxWidth);\n        return this;\n    }\n    textBox(box, txt, verticalAlign = \"middle\", tail = \"\", overrideBaseline = true) {\n        if (overrideBaseline)\n            this._ctx.textBaseline = verticalAlign;\n        let size = Op_1.Rectangle.size(box);\n        let t = this._textTruncate(txt, size[0], tail);\n        this.text(this._textAlign(box, verticalAlign), t[0]);\n        return this;\n    }\n    paragraphBox(box, txt, lineHeight = 1.2, verticalAlign = \"top\", crop = true) {\n        let b = Util_1.Util.iterToArray(box);\n        let size = Op_1.Rectangle.size(b);\n        this._ctx.textBaseline = \"top\";\n        let lstep = this._font.size * lineHeight;\n        let nextLine = (sub, buffer = [], cc = 0) => {\n            if (!sub)\n                return buffer;\n            if (crop && cc * lstep > size[1] - lstep * 2)\n                return buffer;\n            if (cc > 10000)\n                throw new Error(\"max recursion reached (10000)\");\n            let t = this._textTruncate(sub, size[0], \"\");\n            let newln = t[0].indexOf(\"\\n\");\n            if (newln >= 0) {\n                buffer.push(t[0].substr(0, newln));\n                return nextLine(sub.substr(newln + 1), buffer, cc + 1);\n            }\n            let dt = t[0].lastIndexOf(\" \") + 1;\n            if (dt <= 0 || t[1] === sub.length)\n                dt = undefined;\n            let line = t[0].substr(0, dt);\n            buffer.push(line);\n            return (t[1] <= 0 || t[1] === sub.length) ? buffer : nextLine(sub.substr((dt || t[1])), buffer, cc + 1);\n        };\n        let lines = nextLine(txt);\n        let lsize = lines.length * lstep;\n        let lbox = b;\n        if (verticalAlign == \"middle\" || verticalAlign == \"center\") {\n            let lpad = (size[1] - lsize) / 2;\n            if (crop)\n                lpad = Math.max(0, lpad);\n            lbox = new Pt_1.Group(b[0].$add(0, lpad), b[1].$subtract(0, lpad));\n        }\n        else if (verticalAlign == \"bottom\") {\n            lbox = new Pt_1.Group(b[0].$add(0, size[1] - lsize), b[1]);\n        }\n        else {\n            lbox = new Pt_1.Group(b[0], b[0].$add(size[0], lsize));\n        }\n        let center = Op_1.Rectangle.center(lbox);\n        for (let i = 0, len = lines.length; i < len; i++) {\n            this.text(this._textAlign(lbox, \"top\", [0, i * lstep], center), lines[i]);\n        }\n        return this;\n    }\n    alignText(alignment = \"left\", baseline = \"alphabetic\") {\n        if (baseline == \"center\")\n            baseline = \"middle\";\n        if (baseline == \"baseline\")\n            baseline = \"alphabetic\";\n        this._ctx.textAlign = alignment;\n        this._ctx.textBaseline = baseline;\n        return this;\n    }\n    log(txt) {\n        let w = this._ctx.measureText(txt).width + 20;\n        this.stroke(false).fill(\"rgba(0,0,0,.4)\").rect([[0, 0], [w, 20]]);\n        this.fill(\"#fff\").text([10, 14], txt);\n        return this;\n    }\n}\nexports.CanvasForm = CanvasForm;\n\n\n/***/ }),\n\n/***/ \"./src/Color.ts\":\n/*!**********************!*\\\n  !*** ./src/Color.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Color = void 0;\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nclass Color extends Pt_1.Pt {\n    constructor(...args) {\n        super(...args);\n        this._mode = \"rgb\";\n        this._isNorm = false;\n    }\n    static from(...args) {\n        let p = [1, 1, 1, 1];\n        let c = Util_1.Util.getArgs(args);\n        for (let i = 0, len = p.length; i < len; i++) {\n            if (i < c.length)\n                p[i] = c[i];\n        }\n        return new Color(p);\n    }\n    static fromHex(hex) {\n        if (hex[0] == \"#\")\n            hex = hex.substr(1);\n        if (hex.length <= 3) {\n            let fn = (i) => hex[i] || \"F\";\n            hex = `${fn(0)}${fn(0)}${fn(1)}${fn(1)}${fn(2)}${fn(2)}`;\n        }\n        let alpha = 1;\n        if (hex.length === 8) {\n            alpha = hex.substr(6) && 0xFF / 255;\n            hex = hex.substring(0, 6);\n        }\n        let hexVal = parseInt(hex, 16);\n        return new Color(hexVal >> 16, hexVal >> 8 & 0xFF, hexVal & 0xFF, alpha);\n    }\n    static rgb(...args) { return Color.from(...args).toMode(\"rgb\"); }\n    static hsl(...args) { return Color.from(...args).toMode(\"hsl\"); }\n    static hsb(...args) { return Color.from(...args).toMode(\"hsb\"); }\n    static lab(...args) { return Color.from(...args).toMode(\"lab\"); }\n    static lch(...args) { return Color.from(...args).toMode(\"lch\"); }\n    static luv(...args) { return Color.from(...args).toMode(\"luv\"); }\n    static xyz(...args) { return Color.from(...args).toMode(\"xyz\"); }\n    static maxValues(mode) { return Color.ranges[mode].zipSlice(1).$take([0, 1, 2]); }\n    get hex() { return this.toString(\"hex\"); }\n    get rgb() { return this.toString(\"rgb\"); }\n    get rgba() { return this.toString(\"rgba\"); }\n    clone() {\n        let c = new Color(this);\n        c.toMode(this._mode);\n        return c;\n    }\n    toMode(mode, convert = false) {\n        if (convert) {\n            let fname = this._mode.toUpperCase() + \"to\" + mode.toUpperCase();\n            if (Color[fname]) {\n                this.to(Color[fname](this, this._isNorm, this._isNorm));\n            }\n            else {\n                throw new Error(\"Cannot convert color with \" + fname);\n            }\n        }\n        this._mode = mode;\n        return this;\n    }\n    get mode() { return this._mode; }\n    get r() { return this[0]; }\n    set r(n) { this[0] = n; }\n    get g() { return this[1]; }\n    set g(n) { this[1] = n; }\n    get b() { return this[2]; }\n    set b(n) { this[2] = n; }\n    get h() { return (this._mode == \"lch\") ? this[2] : this[0]; }\n    set h(n) {\n        let i = (this._mode == \"lch\") ? 2 : 0;\n        this[i] = n;\n    }\n    get s() { return this[1]; }\n    set s(n) { this[1] = n; }\n    get l() { return (this._mode == \"hsl\") ? this[2] : this[0]; }\n    set l(n) {\n        let i = (this._mode == \"hsl\") ? 2 : 0;\n        this[i] = n;\n    }\n    get a() { return this[1]; }\n    set a(n) { this[1] = n; }\n    get c() { return this[1]; }\n    set c(n) { this[1] = n; }\n    get u() { return this[1]; }\n    set u(n) { this[1] = n; }\n    get v() { return this[2]; }\n    set v(n) { this[2] = n; }\n    set alpha(n) { if (this.length > 3)\n        this[3] = n; }\n    get alpha() { return (this.length > 3) ? this[3] : 1; }\n    get normalized() { return this._isNorm; }\n    set normalized(b) { this._isNorm = b; }\n    normalize(toNorm = true) {\n        if (this._isNorm == toNorm)\n            return this;\n        let ranges = Color.ranges[this._mode];\n        for (let i = 0; i < 3; i++) {\n            this[i] = (!toNorm)\n                ? Num_1.Num.mapToRange(this[i], 0, 1, ranges[i][0], ranges[i][1])\n                : Num_1.Num.mapToRange(this[i], ranges[i][0], ranges[i][1], 0, 1);\n        }\n        this._isNorm = toNorm;\n        return this;\n    }\n    $normalize(toNorm = true) { return this.clone().normalize(toNorm); }\n    toString(format = \"mode\") {\n        if (format == \"hex\") {\n            let _hex = (n) => {\n                let s = Math.floor(n).toString(16);\n                return (s.length < 2) ? '0' + s : s;\n            };\n            return `#${_hex(this[0])}${_hex(this[1])}${_hex(this[2])}`;\n        }\n        else if (format == \"rgba\") {\n            return `rgba(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])},${this.alpha})`;\n        }\n        else if (format == \"rgb\") {\n            return `rgb(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])})`;\n        }\n        else {\n            return `${this._mode}(${this[0]},${this[1]},${this[2]},${this.alpha})`;\n        }\n    }\n    static RGBtoHSL(rgb, normalizedInput = false, normalizedOutput = false) {\n        let [r, g, b] = (!normalizedInput) ? rgb.$normalize() : rgb;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let h = (max + min) / 2;\n        let s = h;\n        let l = h;\n        if (max == min) {\n            h = 0;\n            s = 0;\n        }\n        else {\n            let d = max - min;\n            s = (l > 0.5) ? d / (2 - max - min) : d / (max + min);\n            h = 0;\n            if (max === r) {\n                h = (g - b) / d + ((g < b) ? 6 : 0);\n            }\n            else if (max === g) {\n                h = (b - r) / d + 2;\n            }\n            else if (max === b) {\n                h = (r - g) / d + 4;\n            }\n        }\n        return Color.hsl(((normalizedOutput) ? h / 60 : h * 60), s, l, rgb.alpha);\n    }\n    static HSLtoRGB(hsl, normalizedInput = false, normalizedOutput = false) {\n        let [h, s, l] = hsl;\n        if (!normalizedInput)\n            h = h / 360;\n        if (s == 0)\n            return Color.rgb(l * 255, l * 255, l * 255, hsl.alpha);\n        let q = (l <= 0.5) ? l * (1 + s) : l + s - (l * s);\n        let p = 2 * l - q;\n        let convert = (t) => {\n            t = (t < 0) ? t + 1 : (t > 1) ? t - 1 : t;\n            if (t * 6 < 1) {\n                return p + (q - p) * t * 6;\n            }\n            else if (t * 2 < 1) {\n                return q;\n            }\n            else if (t * 3 < 2) {\n                return p + (q - p) * ((2 / 3) - t) * 6;\n            }\n            else {\n                return p;\n            }\n        };\n        let sc = (normalizedOutput) ? 1 : 255;\n        return Color.rgb(sc * convert((h + 1 / 3)), sc * convert(h), sc * convert((h - 1 / 3)), hsl.alpha);\n    }\n    static RGBtoHSB(rgb, normalizedInput = false, normalizedOutput = false) {\n        let [r, g, b] = (!normalizedInput) ? rgb.$normalize() : rgb;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let d = max - min;\n        let h = 0;\n        let s = (max === 0) ? 0 : d / max;\n        let v = max;\n        if (max != min) {\n            if (max === r) {\n                h = (g - b) / d + ((g < b) ? 6 : 0);\n            }\n            else if (max === g) {\n                h = (b - r) / d + 2;\n            }\n            else if (max === b) {\n                h = (r - g) / d + 4;\n            }\n        }\n        return Color.hsb(((normalizedOutput) ? h / 60 : h * 60), s, v, rgb.alpha);\n    }\n    static HSBtoRGB(hsb, normalizedInput = false, normalizedOutput = false) {\n        let [h, s, v] = hsb;\n        if (!normalizedInput)\n            h = h / 360;\n        let i = Math.floor(h * 6);\n        let f = h * 6 - i;\n        let p = v * (1 - s);\n        let q = v * (1 - f * s);\n        let t = v * (1 - (1 - f) * s);\n        let pick = [\n            [v, t, p], [q, v, p], [p, v, t],\n            [p, q, v], [t, p, v], [v, p, q]\n        ];\n        let c = pick[i % 6];\n        let sc = (normalizedOutput) ? 1 : 255;\n        return Color.rgb(sc * c[0], sc * c[1], sc * c[2], hsb.alpha);\n    }\n    static RGBtoLAB(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.XYZtoLAB(Color.RGBtoXYZ(c), false, normalizedOutput);\n    }\n    static LABtoRGB(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        return Color.XYZtoRGB(Color.LABtoXYZ(c), false, normalizedOutput);\n    }\n    static RGBtoLCH(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.LABtoLCH(Color.RGBtoLAB(c), false, normalizedOutput);\n    }\n    static LCHtoRGB(lch, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lch.$normalize(false) : lch;\n        return Color.LABtoRGB(Color.LCHtoLAB(c), false, normalizedOutput);\n    }\n    static RGBtoLUV(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.XYZtoLUV(Color.RGBtoXYZ(c), false, normalizedOutput);\n    }\n    static LUVtoRGB(luv, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? luv.$normalize(false) : luv;\n        return Color.XYZtoRGB(Color.LUVtoXYZ(c), false, normalizedOutput);\n    }\n    static RGBtoXYZ(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (!normalizedInput) ? rgb.$normalize() : rgb.clone();\n        for (let i = 0; i < 3; i++) {\n            c[i] = (c[i] > 0.04045) ? Math.pow((c[i] + 0.055) / 1.055, 2.4) : c[i] / 12.92;\n            if (!normalizedOutput)\n                c[i] = c[i] * 100;\n        }\n        let cc = Color.xyz(c[0] * 0.4124564 + c[1] * 0.3575761 + c[2] * 0.1804375, c[0] * 0.2126729 + c[1] * 0.7151522 + c[2] * 0.0721750, c[0] * 0.0193339 + c[1] * 0.1191920 + c[2] * 0.9503041, rgb.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoRGB(xyz, normalizedInput = false, normalizedOutput = false) {\n        let [x, y, z] = (!normalizedInput) ? xyz.$normalize() : xyz;\n        let rgb = [\n            x * 3.2406254773200533 + y * -1.5372079722103187 + z * -0.4986285986982479,\n            x * -0.9689307147293197 + y * 1.8757560608852415 + z * 0.041517523842953964,\n            x * 0.055710120445510616 + y * -0.2040210505984867 + z * 1.0569959422543882\n        ];\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = (rgb[i] > 0.0031308) ? (1.055 * Math.pow(rgb[i], 1 / 2.4) - 0.055) : (12.92 * rgb[i]);\n            rgb[i] = Math.max(0, Math.min(1, rgb[i]));\n            if (!normalizedOutput)\n                rgb[i] = Math.round(rgb[i] * 255);\n        }\n        let cc = Color.rgb(rgb[0], rgb[1], rgb[2], xyz.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoLAB(xyz, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? xyz.$normalize(false) : xyz.clone();\n        const eps = 0.00885645167;\n        const kap = 903.296296296;\n        c.divide(Color.D65);\n        let fn = (n) => (n > eps) ? Math.pow(n, 1 / 3) : (kap * n + 16) / 116;\n        let cy = fn(c[1]);\n        let cc = Color.lab((116 * cy) - 16, 500 * (fn(c[0]) - cy), 200 * (cy - fn(c[2])), xyz.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static LABtoXYZ(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        let y = (c[0] + 16) / 116;\n        let x = (c[1] / 500) + y;\n        let z = y - c[2] / 200;\n        const eps = 0.00885645167;\n        const kap = 903.296296296;\n        let d = Color.D65;\n        const xxx = Math.pow(x, 3);\n        const zzz = Math.pow(z, 3);\n        let cc = Color.xyz(d[0] * ((xxx > eps) ? xxx : (116 * x - 16) / kap), d[1] * ((c[0] > kap * eps) ? Math.pow((c[0] + 16) / 116, 3) : c[0] / kap), d[2] * ((zzz > eps) ? zzz : (116 * z - 16) / kap), lab.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoLUV(xyz, normalizedInput = false, normalizedOutput = false) {\n        let [x, y, z] = (normalizedInput) ? xyz.$normalize(false) : xyz;\n        let u = (4 * x) / (x + (15 * y) + (3 * z));\n        let v = (9 * y) / (x + (15 * y) + (3 * z));\n        y = y / 100;\n        y = (y > 0.008856) ? Math.pow(y, 1 / 3) : (7.787 * y + 16 / 116);\n        let refU = (4 * Color.D65[0]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let refV = (9 * Color.D65[1]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let L = (116 * y) - 16;\n        return Color.luv(L, 13 * L * (u - refU), 13 * L * (v - refV), xyz.alpha);\n    }\n    static LUVtoXYZ(luv, normalizedInput = false, normalizedOutput = false) {\n        let [l, u, v] = (normalizedInput) ? luv.$normalize(false) : luv;\n        let y = (l + 16) / 116;\n        let cubeY = y * y * y;\n        y = (cubeY > 0.008856) ? cubeY : (y - 16 / 116) / 7.787;\n        let refU = (4 * Color.D65[0]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let refV = (9 * Color.D65[1]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        u = u / (13 * l) + refU;\n        v = v / (13 * l) + refV;\n        y = y * 100;\n        let x = -1 * (9 * y * u) / ((u - 4) * v - u * v);\n        let z = (9 * y - (15 * v * y) - (v * x)) / (3 * v);\n        return Color.xyz(x, y, z, luv.alpha);\n    }\n    static LABtoLCH(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        let h = Num_1.Geom.toDegree(Num_1.Geom.boundRadian(Math.atan2(c[2], c[1])));\n        return Color.lch(c[0], Math.sqrt(c[1] * c[1] + c[2] * c[2]), h, lab.alpha);\n    }\n    static LCHtoLAB(lch, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lch.$normalize(false) : lch;\n        let rad = Num_1.Geom.toRadian(c[2]);\n        return Color.lab(c[0], Math.cos(rad) * c[1], Math.sin(rad) * c[1], lch.alpha);\n    }\n}\nexports.Color = Color;\nColor.D65 = new Pt_1.Pt(95.047, 100, 108.883, 1);\nColor.ranges = {\n    rgb: new Pt_1.Group(new Pt_1.Pt(0, 255), new Pt_1.Pt(0, 255), new Pt_1.Pt(0, 255)),\n    hsl: new Pt_1.Group(new Pt_1.Pt(0, 360), new Pt_1.Pt(0, 1), new Pt_1.Pt(0, 1)),\n    hsb: new Pt_1.Group(new Pt_1.Pt(0, 360), new Pt_1.Pt(0, 1), new Pt_1.Pt(0, 1)),\n    lab: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(-128, 127), new Pt_1.Pt(-128, 127)),\n    lch: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 360)),\n    luv: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(-134, 220), new Pt_1.Pt(-140, 122)),\n    xyz: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100))\n};\n\n\n/***/ }),\n\n/***/ \"./src/Create.ts\":\n/*!***********************!*\\\n  !*** ./src/Create.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Delaunay = exports.Noise = exports.Create = void 0;\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nclass Create {\n    static distributeRandom(bound, count, dimensions = 2) {\n        let pts = new Pt_1.Group();\n        for (let i = 0; i < count; i++) {\n            let p = [bound.x + Num_1.Num.random() * bound.width];\n            if (dimensions > 1)\n                p.push(bound.y + Num_1.Num.random() * bound.height);\n            if (dimensions > 2)\n                p.push(bound.z + Num_1.Num.random() * bound.depth);\n            pts.push(new Pt_1.Pt(p));\n        }\n        return pts;\n    }\n    static distributeLinear(line, count) {\n        let _line = Util_1.Util.iterToArray(line);\n        let ln = Op_1.Line.subpoints(_line, count - 2);\n        ln.unshift(_line[0]);\n        ln.push(_line[_line.length - 1]);\n        return ln;\n    }\n    static gridPts(bound, columns, rows, orientation = [0.5, 0.5]) {\n        if (columns === 0 || rows === 0)\n            throw new Error(\"grid columns and rows cannot be 0\");\n        let unit = bound.size.$subtract(1).$divide(columns, rows);\n        let offset = unit.$multiply(orientation);\n        let g = new Pt_1.Group();\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                g.push(bound.topLeft.$add(unit.$multiply(c, r)).add(offset));\n            }\n        }\n        return g;\n    }\n    static gridCells(bound, columns, rows) {\n        if (columns === 0 || rows === 0)\n            throw new Error(\"grid columns and rows cannot be 0\");\n        let unit = bound.size.$subtract(1).divide(columns, rows);\n        let g = [];\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                g.push(new Pt_1.Group(bound.topLeft.$add(unit.$multiply(c, r)), bound.topLeft.$add(unit.$multiply(c, r).add(unit))));\n            }\n        }\n        return g;\n    }\n    static radialPts(center, radius, count, angleOffset = -Util_1.Const.half_pi) {\n        let g = new Pt_1.Group();\n        let a = Util_1.Const.two_pi / count;\n        for (let i = 0; i < count; i++) {\n            g.push(new Pt_1.Pt(center).toAngle(a * i + angleOffset, radius, true));\n        }\n        return g;\n    }\n    static noisePts(pts, dx = 0.01, dy = 0.01, rows = 0, columns = 0) {\n        let seed = Num_1.Num.random();\n        let g = new Pt_1.Group();\n        let i = 0;\n        for (let p of pts) {\n            let np = new Noise(p);\n            let r = (rows && rows > 0) ? Math.floor(i / rows) : i;\n            let c = (columns && columns > 0) ? i % columns : i;\n            np.initNoise(dx * c, dy * r);\n            np.seed(seed);\n            g.push(np);\n            i++;\n        }\n        return g;\n    }\n    static delaunay(pts) {\n        return Delaunay.from(pts);\n    }\n}\nexports.Create = Create;\nconst __noise_grad3 = [\n    [1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0],\n    [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1],\n    [0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]\n];\nconst __noise_permTable = [151, 160, 137, 91, 90, 15,\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n    129, 22, 39, 253, 9, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n];\nclass Noise extends Pt_1.Pt {\n    constructor(...args) {\n        super(...args);\n        this.perm = [];\n        this._n = new Pt_1.Pt(0.01, 0.01);\n        this.perm = __noise_permTable.concat(__noise_permTable);\n    }\n    initNoise(...args) {\n        this._n = new Pt_1.Pt(...args);\n        return this;\n    }\n    step(x = 0, y = 0) {\n        this._n.add(x, y);\n        return this;\n    }\n    seed(s) {\n        if (s > 0 && s < 1)\n            s *= 65536;\n        s = Math.floor(s);\n        if (s < 256)\n            s |= s << 8;\n        for (let i = 0; i < 255; i++) {\n            let v = (i & 1) ? __noise_permTable[i] ^ (s & 255) : __noise_permTable[i] ^ ((s >> 8) & 255);\n            this.perm[i] = this.perm[i + 256] = v;\n        }\n        return this;\n    }\n    noise2D() {\n        let i = Math.max(0, Math.floor(this._n[0])) % 255;\n        let j = Math.max(0, Math.floor(this._n[1])) % 255;\n        let x = (this._n[0] % 255) - i;\n        let y = (this._n[1] % 255) - j;\n        let n00 = LinearAlgebra_1.Vec.dot(__noise_grad3[(i + this.perm[j]) % 12], [x, y, 0]);\n        let n01 = LinearAlgebra_1.Vec.dot(__noise_grad3[(i + this.perm[j + 1]) % 12], [x, y - 1, 0]);\n        let n10 = LinearAlgebra_1.Vec.dot(__noise_grad3[(i + 1 + this.perm[j]) % 12], [x - 1, y, 0]);\n        let n11 = LinearAlgebra_1.Vec.dot(__noise_grad3[(i + 1 + this.perm[j + 1]) % 12], [x - 1, y - 1, 0]);\n        let _fade = (f) => f * f * f * (f * (f * 6 - 15) + 10);\n        let tx = _fade(x);\n        return Num_1.Num.lerp(Num_1.Num.lerp(n00, n10, tx), Num_1.Num.lerp(n01, n11, tx), _fade(y));\n    }\n}\nexports.Noise = Noise;\nclass Delaunay extends Pt_1.Group {\n    constructor() {\n        super(...arguments);\n        this._mesh = [];\n    }\n    delaunay(triangleOnly = true) {\n        if (this.length < 3)\n            return [];\n        this._mesh = [];\n        let n = this.length;\n        let indices = [];\n        for (let i = 0; i < n; i++)\n            indices[i] = i;\n        indices.sort((i, j) => this[j][0] - this[i][0]);\n        let pts = this.slice();\n        let st = this._superTriangle();\n        pts = pts.concat(st);\n        let opened = [this._circum(n, n + 1, n + 2, st)];\n        let closed = [];\n        let tris = [];\n        for (let i = 0, len = indices.length; i < len; i++) {\n            let c = indices[i];\n            let edges = [];\n            let j = opened.length;\n            if (!this._mesh[c])\n                this._mesh[c] = {};\n            while (j--) {\n                let circum = opened[j];\n                let radius = circum.circle[1][0];\n                let d = pts[c].$subtract(circum.circle[0]);\n                if (d[0] > 0 && d[0] * d[0] > radius * radius) {\n                    closed.push(circum);\n                    tris.push(circum.triangle);\n                    opened.splice(j, 1);\n                    continue;\n                }\n                if (d[0] * d[0] + d[1] * d[1] - radius * radius > Util_1.Const.epsilon) {\n                    continue;\n                }\n                edges.push(circum.i, circum.j, circum.j, circum.k, circum.k, circum.i);\n                opened.splice(j, 1);\n            }\n            Delaunay._dedupe(edges);\n            j = edges.length;\n            while (j > 1) {\n                opened.push(this._circum(edges[--j], edges[--j], c, false, pts));\n            }\n        }\n        for (let i = 0, len = opened.length; i < len; i++) {\n            let o = opened[i];\n            if (o.i < n && o.j < n && o.k < n) {\n                closed.push(o);\n                tris.push(o.triangle);\n                this._cache(o);\n            }\n        }\n        return (triangleOnly) ? tris : closed;\n    }\n    voronoi() {\n        let vs = [];\n        let n = this._mesh;\n        for (let i = 0, len = n.length; i < len; i++) {\n            vs.push(this.neighborPts(i, true));\n        }\n        return vs;\n    }\n    mesh() {\n        return this._mesh;\n    }\n    neighborPts(i, sort = false) {\n        let cs = new Pt_1.Group();\n        let n = this._mesh;\n        for (let k in n[i]) {\n            if (n[i].hasOwnProperty(k))\n                cs.push(n[i][k].circle[0]);\n        }\n        return (sort) ? Num_1.Geom.sortEdges(cs) : cs;\n    }\n    neighbors(i) {\n        let cs = [];\n        let n = this._mesh;\n        for (let k in n[i]) {\n            if (n[i].hasOwnProperty(k))\n                cs.push(n[i][k]);\n        }\n        return cs;\n    }\n    _cache(o) {\n        this._mesh[o.i][`${Math.min(o.j, o.k)}-${Math.max(o.j, o.k)}`] = o;\n        this._mesh[o.j][`${Math.min(o.i, o.k)}-${Math.max(o.i, o.k)}`] = o;\n        this._mesh[o.k][`${Math.min(o.i, o.j)}-${Math.max(o.i, o.j)}`] = o;\n    }\n    _superTriangle() {\n        let minPt = this[0];\n        let maxPt = this[0];\n        for (let i = 1, len = this.length; i < len; i++) {\n            minPt = minPt.$min(this[i]);\n            maxPt = maxPt.$max(this[i]);\n        }\n        let d = maxPt.$subtract(minPt);\n        let mid = minPt.$add(maxPt).divide(2);\n        let dmax = Math.max(d[0], d[1]);\n        return new Pt_1.Group(mid.$subtract(20 * dmax, dmax), mid.$add(0, 20 * dmax), mid.$add(20 * dmax, -dmax));\n    }\n    _triangle(i, j, k, pts = this) {\n        return new Pt_1.Group(pts[i], pts[j], pts[k]);\n    }\n    _circum(i, j, k, tri, pts = this) {\n        let t = tri || this._triangle(i, j, k, pts);\n        return {\n            i: i,\n            j: j,\n            k: k,\n            triangle: t,\n            circle: Op_1.Triangle.circumcircle(t)\n        };\n    }\n    static _dedupe(edges) {\n        let j = edges.length;\n        while (j > 1) {\n            let b = edges[--j];\n            let a = edges[--j];\n            let i = j;\n            while (i > 1) {\n                let n = edges[--i];\n                let m = edges[--i];\n                if ((a == m && b == n) || (a == n && b == m)) {\n                    edges.splice(j, 2);\n                    edges.splice(i, 2);\n                    break;\n                }\n            }\n        }\n        return edges;\n    }\n}\nexports.Delaunay = Delaunay;\n\n\n/***/ }),\n\n/***/ \"./src/Dom.ts\":\n/*!********************!*\\\n  !*** ./src/Dom.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HTMLForm = exports.HTMLSpace = exports.DOMSpace = void 0;\nconst Space_1 = __webpack_require__(/*! ./Space */ \"./src/Space.ts\");\nconst Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nclass DOMSpace extends Space_1.MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this.id = \"domspace\";\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._css = {};\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pts\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            _selector = document.querySelector(elem);\n            _existed = true;\n            this.id = elem.substr(1);\n        }\n        if (!_selector) {\n            this._container = DOMSpace.createElement(\"div\", \"pts_container\");\n            this._canvas = DOMSpace.createElement(\"div\", \"pts_element\");\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n        }\n        setTimeout(this._ready.bind(this, callback), 50);\n    }\n    static createElement(elem = \"div\", id, appendTo) {\n        let d = document.createElement(elem);\n        if (id)\n            d.setAttribute(\"id\", id);\n        if (appendTo && appendTo.appendChild)\n            appendTo.appendChild(d);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this.refresh(false);\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        if (opt.bgcolor) {\n            this._bgcolor = opt.bgcolor;\n        }\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        return this;\n    }\n    getForm() {\n        return null;\n    }\n    set autoResize(auto) {\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            delete this._css['width'];\n            delete this._css['height'];\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        return this;\n    }\n    _resizeHandler(evt) {\n        let b = Pt_1.Bound.fromBoundingRect(this._container.getBoundingClientRect());\n        if (this._autoResize) {\n            this.styles({ width: \"100%\", height: \"100%\" }, true);\n        }\n        else {\n            this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        }\n        this.resize(b, evt);\n    }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() { return this._isReady; }\n    clear(bg) {\n        if (bg)\n            this.background = bg;\n        this._canvas.innerHTML = \"\";\n        return this;\n    }\n    set background(bg) {\n        this._bgcolor = bg;\n        this._container.style.backgroundColor = this._bgcolor;\n    }\n    get background() { return this._bgcolor; }\n    style(key, val, update = false) {\n        this._css[key] = val;\n        if (update)\n            this._canvas.style[key] = val;\n        return this;\n    }\n    styles(styles, update = false) {\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k))\n                this.style(k, styles[k], update);\n        }\n        return this;\n    }\n    static setAttr(elem, data) {\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                elem.setAttribute(k, data[k]);\n            }\n        }\n        return elem;\n    }\n    static getInlineStyles(data) {\n        let str = \"\";\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                if (data[k])\n                    str += `${k}: ${data[k]}; `;\n            }\n        }\n        return str;\n    }\n    dispose() {\n        window.removeEventListener('resize', this._resizeHandler.bind(this));\n        this.stop();\n        this.removeAll();\n        return this;\n    }\n}\nexports.DOMSpace = DOMSpace;\nclass HTMLSpace extends DOMSpace {\n    getForm() {\n        return new HTMLForm(this);\n    }\n    static htmlElement(parent, name, id, autoClass = true) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElement(name);\n            elem.setAttribute(\"id\", id);\n            if (autoClass)\n                elem.setAttribute(\"class\", id.substring(0, id.indexOf(\"-\")));\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + HTMLForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexports.HTMLSpace = HTMLSpace;\nclass HTMLForm extends Form_1.VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            \"filled\": true,\n            \"stroked\": true,\n            \"background\": \"#f03\",\n            \"border-color\": \"#fff\",\n            \"color\": \"#000\",\n            \"border-width\": \"1px\",\n            \"border-radius\": \"0\",\n            \"border-style\": \"solid\",\n            \"opacity\": 1,\n            \"position\": \"absolute\",\n            \"top\": 0,\n            \"left\": 0,\n            \"width\": 0,\n            \"height\": 0\n        };\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {},\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_dom_\" + (HTMLForm.groupID++);\n                this._ctx.style = Object.assign({}, this._style);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v, unit = '') {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = `${v}${unit}`;\n    }\n    alpha(a) {\n        this.styleTo(\"opacity\", a);\n        return this;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n            if (!c)\n                this.styleTo(\"background\", \"transparent\");\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"background\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n            if (!c)\n                this.styleTo(\"border-width\", 0);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"border-color\", c);\n            this.styleTo(\"border-width\", (width || 1) + \"px\");\n        }\n        return this;\n    }\n    fillText(c) {\n        this.styleTo(\"color\", c);\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    reset() {\n        this._ctx.style = Object.assign({}, this._style);\n        this._font = new Form_1.Font(10, \"sans-serif\");\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(HTMLForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${HTMLForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"background: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"border: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('background') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('border-width') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return HTMLSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static rectStyle(ctx, pt, size) {\n        ctx.style[\"left\"] = pt[0] + \"px\";\n        ctx.style[\"top\"] = pt[1] + \"px\";\n        ctx.style[\"width\"] = size[0] + \"px\";\n        ctx.style[\"height\"] = size[1] + \"px\";\n        return ctx;\n    }\n    static textStyle(ctx, pt) {\n        ctx.style[\"left\"] = pt[0] + \"px\";\n        ctx.style[\"top\"] = pt[1] + \"px\";\n        return ctx;\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return HTMLForm.circle(ctx, pt, radius);\n        }\n        else {\n            return HTMLForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        if (shape == \"circle\")\n            this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-circle ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt_1.Pt(pt).$subtract(radius), new Pt_1.Pt(radius * 2, radius * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-square ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt_1.Pt(pt).$subtract(halfsize), new Pt_1.Pt(halfsize * 2, halfsize * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        HTMLForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static rect(ctx, pts) {\n        let p = Util_1.Util.iterToArray(pts);\n        if (!Util_1.Util.arrayCheck(p))\n            return;\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-rect ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, p[0], p[1]);\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"0\");\n        HTMLForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-text ${ctx.currentClass}` });\n        elem.textContent = txt;\n        HTMLForm.textStyle(ctx, pt);\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        HTMLForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        Util_1.Util.warn(\"arc is not implemented in HTMLForm\");\n        return this;\n    }\n    line(pts) {\n        Util_1.Util.warn(\"line is not implemented in HTMLForm\");\n        return this;\n    }\n    polygon(pts) {\n        Util_1.Util.warn(\"polygon is not implemented in HTMLForm\");\n        return this;\n    }\n}\nexports.HTMLForm = HTMLForm;\nHTMLForm.groupID = 0;\nHTMLForm.domID = 0;\n\n\n/***/ }),\n\n/***/ \"./src/Form.ts\":\n/*!*********************!*\\\n  !*** ./src/Form.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Font = exports.VisualForm = exports.Form = void 0;\nclass Form {\n    constructor() {\n        this._ready = false;\n    }\n    get ready() { return this._ready; }\n}\nexports.Form = Form;\nclass VisualForm extends Form {\n    constructor() {\n        super(...arguments);\n        this._filled = true;\n        this._stroked = true;\n        this._font = new Font(14, \"sans-serif\");\n    }\n    get filled() { return this._filled; }\n    set filled(b) { this._filled = b; }\n    get stroked() { return this._stroked; }\n    set stroked(b) { this._stroked = b; }\n    get currentFont() { return this._font; }\n    _multiple(groups, shape, ...rest) {\n        if (!groups)\n            return this;\n        for (let i = 0, len = groups.length; i < len; i++) {\n            this[shape](groups[i], ...rest);\n        }\n        return this;\n    }\n    alpha(a) {\n        return this;\n    }\n    fill(c) {\n        return this;\n    }\n    fillOnly(c) {\n        this.stroke(false);\n        return this.fill(c);\n    }\n    stroke(c, width, linejoin, linecap) {\n        return this;\n    }\n    strokeOnly(c, width, linejoin, linecap) {\n        this.fill(false);\n        return this.stroke(c, width, linejoin, linecap);\n    }\n    points(pts, radius, shape) {\n        if (!pts)\n            return;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            this.point(pts[i], radius, shape);\n        }\n        return this;\n    }\n    circles(groups) {\n        return this._multiple(groups, \"circle\");\n    }\n    squares(groups) {\n        return this._multiple(groups, \"square\");\n    }\n    lines(groups) {\n        return this._multiple(groups, \"line\");\n    }\n    polygons(groups) {\n        return this._multiple(groups, \"polygon\");\n    }\n    rects(groups) {\n        return this._multiple(groups, \"rect\");\n    }\n}\nexports.VisualForm = VisualForm;\nclass Font {\n    constructor(size = 12, face = \"sans-serif\", weight = \"\", style = \"\", lineHeight = 1.5) {\n        this.size = size;\n        this.face = face;\n        this.style = style;\n        this.weight = weight;\n        this.lineHeight = lineHeight;\n    }\n    get value() { return `${this.style} ${this.weight} ${this.size}px/${this.lineHeight} ${this.face}`; }\n    toString() { return this.value; }\n}\nexports.Font = Font;\n\n\n/***/ }),\n\n/***/ \"./src/Image.ts\":\n/*!**********************!*\\\n  !*** ./src/Image.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Img = void 0;\nconst Canvas_1 = __webpack_require__(/*! ./Canvas */ \"./src/Canvas.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nclass Img {\n    constructor(editable = false, space, crossOrigin) {\n        this._scale = 1;\n        this._loaded = false;\n        this._editable = editable;\n        this._space = space;\n        this._scale = this._space ? this._space.pixelScale : 1;\n        this._img = new Image();\n        if (crossOrigin)\n            this._img.crossOrigin = \"Anonymous\";\n    }\n    static load(src, editable = false, space, ready) {\n        const img = new Img(editable, space);\n        img.load(src).then(res => {\n            if (ready)\n                ready(res);\n        });\n        return img;\n    }\n    static loadAsync(src, editable = false, space) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const img = yield new Img(editable, space).load(src);\n            return img;\n        });\n    }\n    static loadPattern(src, space, repeat = 'repeat', editable = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const img = yield Img.loadAsync(src, editable, space);\n            return img.pattern(repeat);\n        });\n    }\n    static blank(size, space, scale) {\n        let img = new Img(true, space);\n        const s = scale ? scale : space.pixelScale;\n        img.initCanvas(size[0], size[1], s);\n        return img;\n    }\n    load(src) {\n        return new Promise((resolve, reject) => {\n            if (this._editable && !document) {\n                reject(\"Cannot create html canvas element. document not found.\");\n            }\n            this._img.src = src;\n            this._img.onload = () => {\n                if (this._editable) {\n                    if (!this._cv)\n                        this._cv = document.createElement(\"canvas\");\n                    this._drawToScale(this._scale, this._img);\n                    this._data = this._ctx.getImageData(0, 0, this._cv.width, this._cv.height);\n                }\n                this._loaded = true;\n                resolve(this);\n            };\n            this._img.onerror = (evt) => {\n                reject(evt);\n            };\n        });\n    }\n    _drawToScale(canvasScale, img) {\n        const nw = img.width;\n        const nh = img.height;\n        this.initCanvas(nw, nh, canvasScale);\n        if (img)\n            this._ctx.drawImage(img, 0, 0, nw, nh, 0, 0, this._cv.width, this._cv.height);\n    }\n    initCanvas(width, height, canvasScale = 1) {\n        if (!this._editable) {\n            console.error('Cannot initiate canvas because this Img is not set to be editable');\n            return;\n        }\n        if (!this._cv)\n            this._cv = document.createElement(\"canvas\");\n        const cms = (typeof canvasScale === 'number') ? [canvasScale, canvasScale] : canvasScale;\n        this._cv.width = width * cms[0];\n        this._cv.height = height * cms[1];\n        this._ctx = this._cv.getContext('2d');\n        this._loaded = true;\n    }\n    bitmap(size) {\n        const w = (size) ? size[0] : this._cv.width;\n        const h = (size) ? size[1] : this._cv.height;\n        return createImageBitmap(this._cv, 0, 0, w, h);\n    }\n    pattern(reptition = 'repeat', dynamic = false) {\n        if (!this._space)\n            throw \"Cannot find CanvasSpace ctx to create image pattern\";\n        return this._space.ctx.createPattern(dynamic ? this._cv : this._img, reptition);\n    }\n    sync() {\n        if (this._scale !== 1) {\n            this.bitmap().then(b => {\n                this._drawToScale(1 / this._scale, b);\n                this.load(this.toBase64());\n            });\n        }\n        else {\n            this._img.src = this.toBase64();\n        }\n    }\n    pixel(p, rescale = true) {\n        const s = (typeof rescale == 'number') ? rescale : (rescale ? this._scale : 1);\n        return Img.getPixel(this._data, [p[0] * s, p[1] * s]);\n    }\n    static getPixel(imgData, p) {\n        const no = new Pt_1.Pt(0, 0, 0, 0);\n        if (p[0] >= imgData.width || p[1] >= imgData.height)\n            return no;\n        const i = Math.floor(p[1]) * (imgData.width * 4) + (Math.floor(p[0]) * 4);\n        const d = imgData.data;\n        if (i >= d.length - 4)\n            return no;\n        return new Pt_1.Pt(d[i], d[i + 1], d[i + 2], d[i + 3]);\n    }\n    resize(sizeOrScale, asScale = false) {\n        let s = asScale ? sizeOrScale : [sizeOrScale[0] / this._img.naturalWidth, sizeOrScale[1] / this._img.naturalHeight];\n        this._drawToScale(s, this._img);\n        this._data = this._ctx.getImageData(0, 0, this._cv.width, this._cv.height);\n        return this;\n    }\n    crop(box) {\n        let p = box.topLeft.scale(this._scale);\n        let s = box.size.scale(this._scale);\n        return this._ctx.getImageData(p.x, p.y, s.x, s.y);\n    }\n    filter(css) {\n        this._ctx.filter = css;\n        this._ctx.drawImage(this._cv, 0, 0);\n        this._ctx.filter = \"none\";\n        return this;\n    }\n    cleanup() {\n        if (this._cv)\n            this._cv.remove();\n        if (this._img)\n            this._img.remove();\n        this._data = null;\n    }\n    static fromBlob(blob, editable = false, space) {\n        let url = URL.createObjectURL(blob);\n        return new Img(editable, space).load(url);\n    }\n    static imageDataToBlob(data) {\n        return new Promise(function (resolve, reject) {\n            if (!document) {\n                reject(\"Cannot create html canvas element. document not found.\");\n            }\n            let cv = document.createElement(\"canvas\");\n            cv.width = data.width;\n            cv.height = data.height;\n            cv.getContext(\"2d\").putImageData(data, 0, 0);\n            cv.toBlob(blob => {\n                resolve(blob);\n                cv.remove();\n            });\n        });\n    }\n    toBase64() {\n        return this._cv.toDataURL();\n    }\n    toBlob() {\n        return new Promise((resolve) => {\n            this._cv.toBlob(blob => resolve(blob));\n        });\n    }\n    getForm() {\n        if (!this._editable) {\n            console.error(\"Cannot get a CanvasForm because this Img is not editable\");\n        }\n        return this._ctx ? new Canvas_1.CanvasForm(this._ctx) : undefined;\n    }\n    get current() {\n        return this._editable ? this._cv : this._img;\n    }\n    get image() {\n        return this._img;\n    }\n    get canvas() {\n        return this._cv;\n    }\n    get data() {\n        return this._data;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get loaded() {\n        return this._loaded;\n    }\n    get pixelScale() {\n        return this._scale;\n    }\n    get imageSize() {\n        if (!this._img.width || !this._img.height) {\n            return this.canvasSize.$divide(this._scale);\n        }\n        else {\n            return new Pt_1.Pt(this._img.width, this._img.height);\n        }\n    }\n    get canvasSize() {\n        return new Pt_1.Pt(this._cv.width, this._cv.height);\n    }\n    get scaledMatrix() {\n        const s = 1 / this._scale;\n        return new LinearAlgebra_1.Mat().scale2D([s, s]);\n    }\n}\nexports.Img = Img;\n\n\n/***/ }),\n\n/***/ \"./src/LinearAlgebra.ts\":\n/*!******************************!*\\\n  !*** ./src/LinearAlgebra.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mat = exports.Vec = void 0;\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nclass Vec {\n    static add(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] += b;\n        }\n        else {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] += b[i] || 0;\n        }\n        return a;\n    }\n    static subtract(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] -= b;\n        }\n        else {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] -= b[i] || 0;\n        }\n        return a;\n    }\n    static multiply(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] *= b;\n        }\n        else {\n            if (a.length != b.length) {\n                throw new Error(`Cannot do element-wise multiply since the array lengths don't match: ${a.toString()} multiply-with ${b.toString()}`);\n            }\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] *= b[i];\n        }\n        return a;\n    }\n    static divide(a, b) {\n        if (typeof b == \"number\") {\n            if (b === 0)\n                throw new Error(\"Cannot divide by zero\");\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] /= b;\n        }\n        else {\n            if (a.length != b.length) {\n                throw new Error(`Cannot do element-wise divide since the array lengths don't match. ${a.toString()} divide-by ${b.toString()}`);\n            }\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] /= b[i];\n        }\n        return a;\n    }\n    static dot(a, b) {\n        if (a.length != b.length)\n            throw new Error(\"Array lengths don't match\");\n        let d = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            d += a[i] * b[i];\n        }\n        return d;\n    }\n    static cross2D(a, b) {\n        return a[0] * b[1] - a[1] * b[0];\n    }\n    static cross(a, b) {\n        return new Pt_1.Pt((a[1] * b[2] - a[2] * b[1]), (a[2] * b[0] - a[0] * b[2]), (a[0] * b[1] - a[1] * b[0]));\n    }\n    static magnitude(a) {\n        return Math.sqrt(Vec.dot(a, a));\n    }\n    static unit(a, magnitude = undefined) {\n        let m = (magnitude === undefined) ? Vec.magnitude(a) : magnitude;\n        if (m === 0)\n            return Pt_1.Pt.make(a.length);\n        return Vec.divide(a, m);\n    }\n    static abs(a) {\n        return Vec.map(a, Math.abs);\n    }\n    static floor(a) {\n        return Vec.map(a, Math.floor);\n    }\n    static ceil(a) {\n        return Vec.map(a, Math.ceil);\n    }\n    static round(a) {\n        return Vec.map(a, Math.round);\n    }\n    static max(a) {\n        let m = Number.MIN_VALUE;\n        let index = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            m = Math.max(m, a[i]);\n            if (m === a[i])\n                index = i;\n        }\n        return { value: m, index: index };\n    }\n    static min(a) {\n        let m = Number.MAX_VALUE;\n        let index = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            m = Math.min(m, a[i]);\n            if (m === a[i])\n                index = i;\n        }\n        return { value: m, index: index };\n    }\n    static sum(a) {\n        let s = 0;\n        for (let i = 0, len = a.length; i < len; i++)\n            s += a[i];\n        return s;\n    }\n    static map(a, fn) {\n        for (let i = 0, len = a.length; i < len; i++) {\n            a[i] = fn(a[i], i, a);\n        }\n        return a;\n    }\n}\nexports.Vec = Vec;\nclass Mat {\n    constructor() {\n        this.reset();\n    }\n    get value() {\n        return this._33;\n    }\n    get domMatrix() {\n        return new DOMMatrix(Mat.toDOMMatrix(this._33));\n    }\n    reset() {\n        this._33 = Mat.scale2DMatrix(1, 1);\n    }\n    scale2D(val, at = [0, 0]) {\n        const m = Mat.scaleAt2DMatrix(val[0] || 1, val[1] || 1, at);\n        this._33 = Mat.multiply(this._33, m);\n        return this;\n    }\n    rotate2D(ang, at = [0, 0]) {\n        const m = Mat.rotateAt2DMatrix(Math.cos(ang), Math.sin(ang), at);\n        this._33 = Mat.multiply(this._33, m);\n        return this;\n    }\n    translate2D(val) {\n        const m = Mat.translate2DMatrix(val[0] || 0, val[1] || 0);\n        this._33 = Mat.multiply(this._33, m);\n        return this;\n    }\n    shear2D(val, at = [0, 0]) {\n        const m = Mat.shearAt2DMatrix(Math.tan(val[0] || 0), Math.tan(val[1] || 1), at);\n        this._33 = Mat.multiply(this._33, m);\n        return this;\n    }\n    static add(a, b) {\n        if (typeof b != \"number\") {\n            if (a[0].length != b[0].length)\n                throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n            if (a.length != b.length)\n                throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n        }\n        let g = new Pt_1.Group();\n        let isNum = typeof b == \"number\";\n        for (let i = 0, len = a.length; i < len; i++) {\n            g.push(a[i].$add((isNum) ? b : b[i]));\n        }\n        return g;\n    }\n    static multiply(a, b, transposed = false, elementwise = false) {\n        let g = new Pt_1.Group();\n        if (typeof b != \"number\") {\n            if (elementwise) {\n                if (a.length != b.length)\n                    throw new Error(\"Cannot multiply matrix element-wise because the matrices' sizes don't match.\");\n                for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                    g.push(a[ai].$multiply(b[ai]));\n                }\n            }\n            else {\n                if (!transposed && a[0].length != b.length)\n                    throw new Error(\"Cannot multiply matrix if rows in matrix-a don't match columns in matrix-b.\");\n                if (transposed && a[0].length != b[0].length)\n                    throw new Error(\"Cannot multiply matrix if transposed and the columns in both matrices don't match.\");\n                if (!transposed)\n                    b = Mat.transpose(b);\n                for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                    let p = Pt_1.Pt.make(b.length, 0);\n                    for (let bi = 0, blen = b.length; bi < blen; bi++) {\n                        p[bi] = Vec.dot(a[ai], b[bi]);\n                    }\n                    g.push(p);\n                }\n            }\n        }\n        else {\n            for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                g.push(a[ai].$multiply(b));\n            }\n        }\n        return g;\n    }\n    static zipSlice(g, index, defaultValue = false) {\n        let z = [];\n        for (let i = 0, len = g.length; i < len; i++) {\n            if (g[i].length - 1 < index && defaultValue === false)\n                throw `Index ${index} is out of bounds`;\n            z.push(g[i][index] || defaultValue);\n        }\n        return new Pt_1.Pt(z);\n    }\n    static zip(g, defaultValue = false, useLongest = false) {\n        let ps = new Pt_1.Group();\n        let len = (useLongest) ? g.reduce((a, b) => Math.max(a, b.length), 0) : g[0].length;\n        for (let i = 0; i < len; i++) {\n            ps.push(Mat.zipSlice(g, i, defaultValue));\n        }\n        return ps;\n    }\n    static transpose(g, defaultValue = false, useLongest = false) {\n        return Mat.zip(g, defaultValue, useLongest);\n    }\n    static toDOMMatrix(m) {\n        return [m[0][0], m[0][1], m[1][0], m[1][1], m[2][0], m[2][1]];\n    }\n    static transform2D(pt, m) {\n        let x = pt[0] * m[0][0] + pt[1] * m[1][0] + m[2][0];\n        let y = pt[0] * m[0][1] + pt[1] * m[1][1] + m[2][1];\n        return new Pt_1.Pt(x, y);\n    }\n    static scale2DMatrix(x, y) {\n        return new Pt_1.Group(new Pt_1.Pt(x, 0, 0), new Pt_1.Pt(0, y, 0), new Pt_1.Pt(0, 0, 1));\n    }\n    static rotate2DMatrix(cosA, sinA) {\n        return new Pt_1.Group(new Pt_1.Pt(cosA, sinA, 0), new Pt_1.Pt(-sinA, cosA, 0), new Pt_1.Pt(0, 0, 1));\n    }\n    static shear2DMatrix(tanX, tanY) {\n        return new Pt_1.Group(new Pt_1.Pt(1, tanX, 0), new Pt_1.Pt(tanY, 1, 0), new Pt_1.Pt(0, 0, 1));\n    }\n    static translate2DMatrix(x, y) {\n        return new Pt_1.Group(new Pt_1.Pt(1, 0, 0), new Pt_1.Pt(0, 1, 0), new Pt_1.Pt(x, y, 1));\n    }\n    static scaleAt2DMatrix(sx, sy, at) {\n        let m = Mat.scale2DMatrix(sx, sy);\n        m[2][0] = -at[0] * sx + at[0];\n        m[2][1] = -at[1] * sy + at[1];\n        return m;\n    }\n    static rotateAt2DMatrix(cosA, sinA, at) {\n        let m = Mat.rotate2DMatrix(cosA, sinA);\n        m[2][0] = at[0] * (1 - cosA) + at[1] * sinA;\n        m[2][1] = at[1] * (1 - cosA) - at[0] * sinA;\n        return m;\n    }\n    static shearAt2DMatrix(tanX, tanY, at) {\n        let m = Mat.shear2DMatrix(tanX, tanY);\n        m[2][0] = -at[1] * tanY;\n        m[2][1] = -at[0] * tanX;\n        return m;\n    }\n    static reflectAt2DMatrix(p1, p2) {\n        let intercept = Op_1.Line.intercept(p1, p2);\n        if (intercept == undefined) {\n            return [\n                new Pt_1.Pt([-1, 0, 0]),\n                new Pt_1.Pt([0, 1, 0]),\n                new Pt_1.Pt([p1[0] + p2[0], 0, 1])\n            ];\n        }\n        else {\n            let yi = intercept.yi;\n            let ang2 = Math.atan(intercept.slope) * 2;\n            let cosA = Math.cos(ang2);\n            let sinA = Math.sin(ang2);\n            return [\n                new Pt_1.Pt([cosA, sinA, 0]),\n                new Pt_1.Pt([sinA, -cosA, 0]),\n                new Pt_1.Pt([-yi * sinA, yi + yi * cosA, 1])\n            ];\n        }\n    }\n}\nexports.Mat = Mat;\n\n\n/***/ }),\n\n/***/ \"./src/Num.ts\":\n/*!********************!*\\\n  !*** ./src/Num.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Range = exports.Shaping = exports.Geom = exports.Num = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nconst uheprng_1 = __webpack_require__(/*! ./uheprng */ \"./src/uheprng.ts\");\nclass Num {\n    static equals(a, b, threshold = 0.00001) {\n        return Math.abs(a - b) < threshold;\n    }\n    static lerp(a, b, t) {\n        return (1 - t) * a + t * b;\n    }\n    static clamp(val, min, max) {\n        return Math.max(min, Math.min(max, val));\n    }\n    static boundValue(val, min, max) {\n        let len = Math.abs(max - min);\n        let a = val % len;\n        if (a > max)\n            a -= len;\n        else if (a < min)\n            a += len;\n        return a;\n    }\n    static within(p, a, b) {\n        return p >= Math.min(a, b) && p <= Math.max(a, b);\n    }\n    static randomRange(a, b = 0) {\n        let r = (a > b) ? (a - b) : (b - a);\n        return a + Num.random() * r;\n    }\n    static randomPt(a, b) {\n        let p = new Pt_1.Pt(a.length);\n        let range = b ? LinearAlgebra_1.Vec.subtract(b, a) : a;\n        let start = b ? a : new Pt_1.Pt(a.length).fill(0);\n        for (let i = 0, len = p.length; i < len; i++) {\n            p[i] = Num.random() * range[i] + start[i];\n        }\n        return p;\n    }\n    static normalizeValue(n, a, b) {\n        let min = Math.min(a, b);\n        let max = Math.max(a, b);\n        return (n - min) / (max - min);\n    }\n    static sum(pts) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        let c = new Pt_1.Pt(_pts[0]);\n        for (let i = 1, len = _pts.length; i < len; i++) {\n            LinearAlgebra_1.Vec.add(c, _pts[i]);\n        }\n        return c;\n    }\n    static average(pts) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        return Num.sum(_pts).divide(_pts.length);\n    }\n    static cycle(t, method = Shaping.sineInOut) {\n        return method(t > 0.5 ? 2 - t * 2 : t * 2);\n    }\n    static mapToRange(n, currA, currB, targetA, targetB) {\n        if (currA == currB)\n            throw new Error(\"[currMin, currMax] must define a range that is not zero\");\n        let min = Math.min(targetA, targetB);\n        let max = Math.max(targetA, targetB);\n        return Num.normalizeValue(n, currA, currB) * (max - min) + min;\n    }\n    static seed(seed) {\n        this.generator = uheprng_1.default(seed);\n    }\n    static random() {\n        return this.generator\n            ? this.generator.random()\n            : Math.random();\n    }\n}\nexports.Num = Num;\nclass Geom {\n    static boundAngle(angle) {\n        return Num.boundValue(angle, 0, 360);\n    }\n    static boundRadian(radian) {\n        return Num.boundValue(radian, 0, Util_1.Const.two_pi);\n    }\n    static toRadian(angle) {\n        return angle * Util_1.Const.deg_to_rad;\n    }\n    static toDegree(radian) {\n        return radian * Util_1.Const.rad_to_deg;\n    }\n    static boundingBox(pts) {\n        let minPt, maxPt;\n        for (let p of pts) {\n            if (minPt == undefined) {\n                minPt = p.clone();\n                maxPt = p.clone();\n            }\n            else {\n                minPt = minPt.$min(p);\n                maxPt = maxPt.$max(p);\n            }\n        }\n        return new Pt_1.Group(minPt, maxPt);\n    }\n    static centroid(pts) {\n        return Num.average(pts);\n    }\n    static anchor(pts, ptOrIndex = 0, direction = \"to\") {\n        let method = (direction == \"to\") ? \"subtract\" : \"add\";\n        let i = 0;\n        for (let p of pts) {\n            if (typeof ptOrIndex == \"number\") {\n                if (ptOrIndex !== i)\n                    p[method](pts[ptOrIndex]);\n            }\n            else {\n                p[method](ptOrIndex);\n            }\n            i++;\n        }\n    }\n    static interpolate(a, b, t = 0.5) {\n        let len = Math.min(a.length, b.length);\n        let d = Pt_1.Pt.make(len);\n        for (let i = 0; i < len; i++) {\n            d[i] = a[i] * (1 - t) + b[i] * t;\n        }\n        return d;\n    }\n    static perpendicular(pt, axis = Util_1.Const.xy) {\n        let y = axis[1];\n        let x = axis[0];\n        let p = new Pt_1.Pt(pt);\n        let pa = new Pt_1.Pt(p);\n        pa[x] = -p[y];\n        pa[y] = p[x];\n        let pb = new Pt_1.Pt(p);\n        pb[x] = p[y];\n        pb[y] = -p[x];\n        return new Pt_1.Group(pa, pb);\n    }\n    static isPerpendicular(p1, p2) {\n        return new Pt_1.Pt(p1).dot(p2) === 0;\n    }\n    static withinBound(pt, boundPt1, boundPt2) {\n        for (let i = 0, len = Math.min(pt.length, boundPt1.length, boundPt2.length); i < len; i++) {\n            if (!Num.within(pt[i], boundPt1[i], boundPt2[i]))\n                return false;\n        }\n        return true;\n    }\n    static sortEdges(pts) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        let bounds = Geom.boundingBox(_pts);\n        let center = bounds[1].add(bounds[0]).divide(2);\n        let fn = (a, b) => {\n            if (a.length < 2 || b.length < 2)\n                throw new Error(\"Pt dimension cannot be less than 2\");\n            let da = a.$subtract(center);\n            let db = b.$subtract(center);\n            if (da[0] >= 0 && db[0] < 0)\n                return 1;\n            if (da[0] < 0 && db[0] >= 0)\n                return -1;\n            if (da[0] == 0 && db[0] == 0) {\n                if (da[1] >= 0 || db[1] >= 0)\n                    return (da[1] > db[1]) ? 1 : -1;\n                return (db[1] > da[1]) ? 1 : -1;\n            }\n            let det = da.$cross2D(db);\n            if (det < 0)\n                return 1;\n            if (det > 0)\n                return -1;\n            return (da[0] * da[0] + da[1] * da[1] > db[0] * db[0] + db[1] * db[1]) ? 1 : -1;\n        };\n        return _pts.sort(fn);\n    }\n    static scale(ps, scale, anchor) {\n        let pts = Util_1.Util.iterToArray((ps[0] !== undefined && typeof ps[0] == 'number') ? [ps] : ps);\n        let scs = (typeof scale == \"number\") ? Pt_1.Pt.make(pts[0].length, scale) : scale;\n        if (!anchor)\n            anchor = Pt_1.Pt.make(pts[0].length, 0);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = pts[i];\n            for (let k = 0, lenP = p.length; k < lenP; k++) {\n                p[k] = (anchor && anchor[k]) ? anchor[k] + (p[k] - anchor[k]) * scs[k] : p[k] * scs[k];\n            }\n        }\n        return Geom;\n    }\n    static rotate2D(ps, angle, anchor, axis) {\n        let pts = Util_1.Util.iterToArray((ps[0] !== undefined && typeof ps[0] == 'number') ? [ps] : ps);\n        let fn = (anchor) ? LinearAlgebra_1.Mat.rotateAt2DMatrix : LinearAlgebra_1.Mat.rotate2DMatrix;\n        if (!anchor)\n            anchor = Pt_1.Pt.make(pts[0].length, 0);\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(LinearAlgebra_1.Mat.transform2D(p, fn(cos, sin, anchor)));\n            if (axis) {\n                for (let k = 0; k < axis.length; k++) {\n                    pts[i][axis[k]] = p[k];\n                }\n            }\n        }\n        return Geom;\n    }\n    static shear2D(ps, scale, anchor, axis) {\n        let pts = Util_1.Util.iterToArray((ps[0] !== undefined && typeof ps[0] == 'number') ? [ps] : ps);\n        let s = (typeof scale == \"number\") ? [scale, scale] : scale;\n        if (!anchor)\n            anchor = Pt_1.Pt.make(pts[0].length, 0);\n        let fn = (anchor) ? LinearAlgebra_1.Mat.shearAt2DMatrix : LinearAlgebra_1.Mat.shear2DMatrix;\n        let tanx = Math.tan(s[0]);\n        let tany = Math.tan(s[1]);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(LinearAlgebra_1.Mat.transform2D(p, fn(tanx, tany, anchor)));\n            if (axis) {\n                for (let k = 0; k < axis.length; k++) {\n                    pts[i][axis[k]] = p[k];\n                }\n            }\n        }\n        return Geom;\n    }\n    static reflect2D(ps, line, axis) {\n        let pts = Util_1.Util.iterToArray((ps[0] !== undefined && typeof ps[0] == 'number') ? [ps] : ps);\n        let _line = Util_1.Util.iterToArray(line);\n        let mat = LinearAlgebra_1.Mat.reflectAt2DMatrix(_line[0], _line[1]);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(LinearAlgebra_1.Mat.transform2D(p, mat));\n            if (axis) {\n                for (let k = 0; k < axis.length; k++) {\n                    pts[i][axis[k]] = p[k];\n                }\n            }\n        }\n        return Geom;\n    }\n    static cosTable() {\n        let cos = new Float64Array(360);\n        for (let i = 0; i < 360; i++)\n            cos[i] = Math.cos(i * Math.PI / 180);\n        let find = (rad) => cos[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n        return { table: cos, cos: find };\n    }\n    static sinTable() {\n        let sin = new Float64Array(360);\n        for (let i = 0; i < 360; i++)\n            sin[i] = Math.sin(i * Math.PI / 180);\n        let find = (rad) => sin[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n        return { table: sin, sin: find };\n    }\n}\nexports.Geom = Geom;\nclass Shaping {\n    static linear(t, c = 1) {\n        return c * t;\n    }\n    static quadraticIn(t, c = 1) {\n        return c * t * t;\n    }\n    static quadraticOut(t, c = 1) {\n        return -c * t * (t - 2);\n    }\n    static quadraticInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? c / 2 * t * t * 4 : -c / 2 * ((dt - 1) * (dt - 3) - 1);\n    }\n    static cubicIn(t, c = 1) {\n        return c * t * t * t;\n    }\n    static cubicOut(t, c = 1) {\n        let dt = t - 1;\n        return c * (dt * dt * dt + 1);\n    }\n    static cubicInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? c / 2 * dt * dt * dt : c / 2 * ((dt - 2) * (dt - 2) * (dt - 2) + 2);\n    }\n    static exponentialIn(t, c = 1, p = 0.25) {\n        return c * Math.pow(t, 1 / p);\n    }\n    static exponentialOut(t, c = 1, p = 0.25) {\n        return c * Math.pow(t, p);\n    }\n    static sineIn(t, c = 1) {\n        return -c * Math.cos(t * Util_1.Const.half_pi) + c;\n    }\n    static sineOut(t, c = 1) {\n        return c * Math.sin(t * Util_1.Const.half_pi);\n    }\n    static sineInOut(t, c = 1) {\n        return -c / 2 * (Math.cos(Math.PI * t) - 1);\n    }\n    static cosineApprox(t, c = 1) {\n        let t2 = t * t;\n        let t4 = t2 * t2;\n        let t6 = t4 * t2;\n        return c * (4 * t6 / 9 - 17 * t4 / 9 + 22 * t2 / 9);\n    }\n    static circularIn(t, c = 1) {\n        return -c * (Math.sqrt(1 - t * t) - 1);\n    }\n    static circularOut(t, c = 1) {\n        let dt = t - 1;\n        return c * Math.sqrt(1 - dt * dt);\n    }\n    static circularInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? -c / 2 * (Math.sqrt(1 - dt * dt) - 1) : c / 2 * (Math.sqrt(1 - (dt - 2) * (dt - 2)) + 1);\n    }\n    static elasticIn(t, c = 1, p = 0.7) {\n        let dt = t - 1;\n        let s = (p / Util_1.Const.two_pi) * 1.5707963267948966;\n        return c * (-Math.pow(2, 10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p));\n    }\n    static elasticOut(t, c = 1, p = 0.7) {\n        let s = (p / Util_1.Const.two_pi) * 1.5707963267948966;\n        return c * (Math.pow(2, -10 * t) * Math.sin((t - s) * Util_1.Const.two_pi / p)) + c;\n    }\n    static elasticInOut(t, c = 1, p = 0.6) {\n        let dt = t * 2;\n        let s = (p / Util_1.Const.two_pi) * 1.5707963267948966;\n        if (t < 0.5) {\n            dt -= 1;\n            return c * (-0.5 * (Math.pow(2, 10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p)));\n        }\n        else {\n            dt -= 1;\n            return c * (0.5 * (Math.pow(2, -10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p))) + c;\n        }\n    }\n    static bounceIn(t, c = 1) {\n        return c - Shaping.bounceOut((1 - t), c);\n    }\n    static bounceOut(t, c = 1) {\n        if (t < (1 / 2.75)) {\n            return c * (7.5625 * t * t);\n        }\n        else if (t < (2 / 2.75)) {\n            t -= 1.5 / 2.75;\n            return c * (7.5625 * t * t + 0.75);\n        }\n        else if (t < (2.5 / 2.75)) {\n            t -= 2.25 / 2.75;\n            return c * (7.5625 * t * t + 0.9375);\n        }\n        else {\n            t -= 2.625 / 2.75;\n            return c * (7.5625 * t * t + 0.984375);\n        }\n    }\n    static bounceInOut(t, c = 1) {\n        return (t < 0.5) ? Shaping.bounceIn(t * 2, c) / 2 : Shaping.bounceOut(t * 2 - 1, c) / 2 + c / 2;\n    }\n    static sigmoid(t, c = 1, p = 10) {\n        let d = p * (t - 0.5);\n        return c / (1 + Math.exp(-d));\n    }\n    static logSigmoid(t, c = 1, p = 0.7) {\n        p = Math.max(Util_1.Const.epsilon, Math.min(1 - Util_1.Const.epsilon, p));\n        p = 1 / (1 - p);\n        let A = 1 / (1 + Math.exp(((t - 0.5) * p * -2)));\n        let B = 1 / (1 + Math.exp(p));\n        let C = 1 / (1 + Math.exp(-p));\n        return c * (A - B) / (C - B);\n    }\n    static seat(t, c = 1, p = 0.5) {\n        if ((t < 0.5)) {\n            return c * (Math.pow(2 * t, 1 - p)) / 2;\n        }\n        else {\n            return c * (1 - (Math.pow(2 * (1 - t), 1 - p)) / 2);\n        }\n    }\n    static quadraticBezier(t, c = 1, p = [0.05, 0.95]) {\n        let a = (typeof p != \"number\") ? p[0] : p;\n        let b = (typeof p != \"number\") ? p[1] : 0.5;\n        let om2a = 1 - 2 * a;\n        if (om2a === 0) {\n            om2a = Util_1.Const.epsilon;\n        }\n        let d = (Math.sqrt(a * a + om2a * t) - a) / om2a;\n        return c * ((1 - 2 * b) * (d * d) + (2 * b) * d);\n    }\n    static cubicBezier(t, c = 1, p1 = [0.1, 0.7], p2 = [0.9, 0.2]) {\n        let curve = new Pt_1.Group(new Pt_1.Pt(0, 0), new Pt_1.Pt(p1), new Pt_1.Pt(p2), new Pt_1.Pt(1, 1));\n        return c * Op_1.Curve.bezierStep(new Pt_1.Pt(t * t * t, t * t, t, 1), Op_1.Curve.controlPoints(curve)).y;\n    }\n    static quadraticTarget(t, c = 1, p1 = [0.2, 0.35]) {\n        let a = Math.min(1 - Util_1.Const.epsilon, Math.max(Util_1.Const.epsilon, p1[0]));\n        let b = Math.min(1, Math.max(0, p1[1]));\n        let A = (1 - b) / (1 - a) - (b / a);\n        let B = (A * (a * a) - b) / a;\n        let y = A * (t * t) - B * t;\n        return c * Math.min(1, Math.max(0, y));\n    }\n    static cliff(t, c = 1, p = 0.5) {\n        return (t > p) ? c : 0;\n    }\n    static step(fn, steps, t, c, ...args) {\n        let s = 1 / steps;\n        let tt = Math.floor(t / s) * s;\n        return fn(tt, c, ...args);\n    }\n}\nexports.Shaping = Shaping;\nclass Range {\n    constructor(g) {\n        this._dims = 0;\n        this._source = Pt_1.Group.fromPtArray(g);\n        this.calc();\n    }\n    get max() { return this._max.clone(); }\n    get min() { return this._min.clone(); }\n    get magnitude() { return this._mag.clone(); }\n    calc() {\n        if (!this._source)\n            return;\n        let dims = this._source[0].length;\n        this._dims = dims;\n        let max = new Pt_1.Pt(dims);\n        let min = new Pt_1.Pt(dims);\n        let mag = new Pt_1.Pt(dims);\n        for (let i = 0; i < dims; i++) {\n            max[i] = Util_1.Const.min;\n            min[i] = Util_1.Const.max;\n            mag[i] = 0;\n            let s = this._source.zipSlice(i);\n            for (let k = 0, len = s.length; k < len; k++) {\n                max[i] = Math.max(max[i], s[k]);\n                min[i] = Math.min(min[i], s[k]);\n                mag[i] = max[i] - min[i];\n            }\n        }\n        this._max = max;\n        this._min = min;\n        this._mag = mag;\n        return this;\n    }\n    mapTo(min, max, exclude) {\n        let target = new Pt_1.Group();\n        for (let i = 0, len = this._source.length; i < len; i++) {\n            let g = this._source[i];\n            let n = new Pt_1.Pt(this._dims);\n            for (let k = 0; k < this._dims; k++) {\n                n[k] = (exclude && exclude[k]) ? g[k] : Num.mapToRange(g[k], this._min[k], this._max[k], min, max);\n            }\n            target.push(n);\n        }\n        return target;\n    }\n    append(pts, update = true) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (_pts[0].length !== this._dims)\n            throw new Error(`Dimensions don't match. ${this._dims} dimensions in Range and ${_pts[0].length} provided in parameter. `);\n        this._source = this._source.concat(_pts);\n        if (update)\n            this.calc();\n        return this;\n    }\n    ticks(count) {\n        let g = new Pt_1.Group();\n        for (let i = 0; i <= count; i++) {\n            let p = new Pt_1.Pt(this._dims);\n            for (let k = 0, len = this._max.length; k < len; k++) {\n                p[k] = Num.lerp(this._min[k], this._max[k], i / count);\n            }\n            g.push(p);\n        }\n        return g;\n    }\n}\nexports.Range = Range;\n\n\n/***/ }),\n\n/***/ \"./src/Op.ts\":\n/*!*******************!*\\\n  !*** ./src/Op.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Curve = exports.Polygon = exports.Triangle = exports.Circle = exports.Rectangle = exports.Line = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nlet _errorLength = (obj, param = \"expected\") => Util_1.Util.warn(\"Group's length is less than \" + param, obj);\nlet _errorOutofBound = (obj, param = \"\") => Util_1.Util.warn(`Index ${param} is out of bound in Group`, obj);\nclass Line {\n    static fromAngle(anchor, angle, magnitude) {\n        let g = new Pt_1.Group(new Pt_1.Pt(anchor), new Pt_1.Pt(anchor));\n        g[1].toAngle(angle, magnitude, true);\n        return g;\n    }\n    static slope(p1, p2) {\n        return (p2[0] - p1[0] === 0) ? undefined : (p2[1] - p1[1]) / (p2[0] - p1[0]);\n    }\n    static intercept(p1, p2) {\n        if (p2[0] - p1[0] === 0) {\n            return undefined;\n        }\n        else {\n            let m = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n            let c = p1[1] - m * p1[0];\n            return { slope: m, yi: c, xi: (m === 0) ? undefined : -c / m };\n        }\n    }\n    static sideOfPt2D(line, pt) {\n        let _line = Util_1.Util.iterToArray(line);\n        return (_line[1][0] - _line[0][0]) * (pt[1] - _line[0][1]) - (pt[0] - _line[0][0]) * (_line[1][1] - _line[0][1]);\n    }\n    static collinear(p1, p2, p3, threshold = 0.01) {\n        let a = new Pt_1.Pt(0, 0, 0).to(p1).$subtract(p2);\n        let b = new Pt_1.Pt(0, 0, 0).to(p1).$subtract(p3);\n        return a.$cross(b).divide(1000).equals(new Pt_1.Pt(0, 0, 0), threshold);\n    }\n    static magnitude(line) {\n        let _line = Util_1.Util.iterToArray(line);\n        return (_line.length >= 2) ? _line[1].$subtract(_line[0]).magnitude() : 0;\n    }\n    static magnitudeSq(line) {\n        let _line = Util_1.Util.iterToArray(line);\n        return (_line.length >= 2) ? _line[1].$subtract(_line[0]).magnitudeSq() : 0;\n    }\n    static perpendicularFromPt(line, pt, asProjection = false) {\n        let _line = Util_1.Util.iterToArray(line);\n        if (_line[0].equals(_line[1]))\n            return undefined;\n        let a = _line[0].$subtract(_line[1]);\n        let b = _line[1].$subtract(pt);\n        let proj = b.$subtract(a.$project(b));\n        return (asProjection) ? proj : proj.$add(pt);\n    }\n    static distanceFromPt(line, pt) {\n        let _line = Util_1.Util.iterToArray(line);\n        let projectionVector = Line.perpendicularFromPt(_line, pt, true);\n        if (projectionVector) {\n            return projectionVector.magnitude();\n        }\n        else {\n            return _line[0].$subtract(pt).magnitude();\n        }\n    }\n    static intersectRay2D(la, lb) {\n        let _la = Util_1.Util.iterToArray(la);\n        let _lb = Util_1.Util.iterToArray(lb);\n        let a = Line.intercept(_la[0], _la[1]);\n        let b = Line.intercept(_lb[0], _lb[1]);\n        let pa = _la[0];\n        let pb = _lb[0];\n        if (a == undefined) {\n            if (b == undefined)\n                return undefined;\n            let y1 = -b.slope * (pb[0] - pa[0]) + pb[1];\n            return new Pt_1.Pt(pa[0], y1);\n        }\n        else {\n            if (b == undefined) {\n                let y1 = -a.slope * (pa[0] - pb[0]) + pa[1];\n                return new Pt_1.Pt(pb[0], y1);\n            }\n            else if (b.slope != a.slope) {\n                let px = (a.slope * pa[0] - b.slope * pb[0] + pb[1] - pa[1]) / (a.slope - b.slope);\n                let py = a.slope * (px - pa[0]) + pa[1];\n                return new Pt_1.Pt(px, py);\n            }\n            else {\n                if (a.yi == b.yi) {\n                    return new Pt_1.Pt(pa[0], pa[1]);\n                }\n                else {\n                    return undefined;\n                }\n            }\n        }\n    }\n    static intersectLine2D(la, lb) {\n        let _la = Util_1.Util.iterToArray(la);\n        let _lb = Util_1.Util.iterToArray(lb);\n        let pt = Line.intersectRay2D(_la, _lb);\n        return (pt && Num_1.Geom.withinBound(pt, _la[0], _la[1]) && Num_1.Geom.withinBound(pt, _lb[0], _lb[1])) ? pt : undefined;\n    }\n    static intersectLineWithRay2D(line, ray) {\n        let _line = Util_1.Util.iterToArray(line);\n        let _ray = Util_1.Util.iterToArray(ray);\n        let pt = Line.intersectRay2D(_line, _ray);\n        return (pt && Num_1.Geom.withinBound(pt, _line[0], _line[1])) ? pt : undefined;\n    }\n    static intersectPolygon2D(lineOrRay, poly, sourceIsRay = false) {\n        let _lineOrRay = Util_1.Util.iterToArray(lineOrRay);\n        let _poly = Util_1.Util.iterToArray(poly);\n        let fn = sourceIsRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n        let pts = new Pt_1.Group();\n        for (let i = 0, len = _poly.length; i < len; i++) {\n            let next = (i === len - 1) ? 0 : i + 1;\n            let d = fn([_poly[i], _poly[next]], _lineOrRay);\n            if (d)\n                pts.push(d);\n        }\n        return (pts.length > 0) ? pts : undefined;\n    }\n    static intersectLines2D(lines1, lines2, isRay = false) {\n        let group = new Pt_1.Group();\n        let fn = isRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n        for (let l1 of lines1) {\n            for (let l2 of lines2) {\n                let _ip = fn(l1, l2);\n                if (_ip)\n                    group.push(_ip);\n            }\n        }\n        return group;\n    }\n    static intersectGridWithRay2D(ray, gridPt) {\n        let _ray = Util_1.Util.iterToArray(ray);\n        let t = Line.intercept(new Pt_1.Pt(_ray[0]).subtract(gridPt), new Pt_1.Pt(_ray[1]).subtract(gridPt));\n        let g = new Pt_1.Group();\n        if (t && t.xi)\n            g.push(new Pt_1.Pt(gridPt[0] + t.xi, gridPt[1]));\n        if (t && t.yi)\n            g.push(new Pt_1.Pt(gridPt[0], gridPt[1] + t.yi));\n        return g;\n    }\n    static intersectGridWithLine2D(line, gridPt) {\n        let _line = Util_1.Util.iterToArray(line);\n        let g = Line.intersectGridWithRay2D(_line, gridPt);\n        let gg = new Pt_1.Group();\n        for (let i = 0, len = g.length; i < len; i++) {\n            if (Num_1.Geom.withinBound(g[i], _line[0], _line[1]))\n                gg.push(g[i]);\n        }\n        return gg;\n    }\n    static intersectRect2D(line, rect) {\n        let _line = Util_1.Util.iterToArray(line);\n        let _rect = Util_1.Util.iterToArray(rect);\n        let box = Num_1.Geom.boundingBox(Pt_1.Group.fromPtArray(_line));\n        if (!Rectangle.hasIntersectRect2D(box, _rect))\n            return new Pt_1.Group();\n        return Line.intersectLines2D([_line], Rectangle.sides(_rect));\n    }\n    static subpoints(line, num) {\n        let _line = Util_1.Util.iterToArray(line);\n        let pts = new Pt_1.Group();\n        for (let i = 1; i <= num; i++) {\n            pts.push(Num_1.Geom.interpolate(_line[0], _line[1], i / (num + 1)));\n        }\n        return pts;\n    }\n    static crop(line, size, index = 0, cropAsCircle = true) {\n        let _line = Util_1.Util.iterToArray(line);\n        let tdx = (index === 0) ? 1 : 0;\n        let ls = _line[tdx].$subtract(_line[index]);\n        if (ls[0] === 0 || size[0] === 0)\n            return _line[index];\n        if (cropAsCircle) {\n            let d = ls.unit().multiply(size[1]);\n            return _line[index].$add(d);\n        }\n        else {\n            let rect = Rectangle.fromCenter(_line[index], size);\n            let sides = Rectangle.sides(rect);\n            let sideIdx = 0;\n            if (Math.abs(ls[1] / ls[0]) > Math.abs(size[1] / size[0])) {\n                sideIdx = (ls[1] < 0) ? 0 : 2;\n            }\n            else {\n                sideIdx = (ls[0] < 0) ? 3 : 1;\n            }\n            return Line.intersectRay2D(sides[sideIdx], _line);\n        }\n    }\n    static marker(line, size, graphic = (\"arrow\" || false), atTail = true) {\n        let _line = Util_1.Util.iterToArray(line);\n        let h = atTail ? 0 : 1;\n        let t = atTail ? 1 : 0;\n        let unit = _line[h].$subtract(_line[t]);\n        if (unit.magnitudeSq() === 0)\n            return new Pt_1.Group();\n        unit.unit();\n        let ps = Num_1.Geom.perpendicular(unit).multiply(size[0]).add(_line[t]);\n        if (graphic == \"arrow\") {\n            ps.add(unit.$multiply(size[1]));\n            return new Pt_1.Group(_line[t], ps[0], ps[1]);\n        }\n        else {\n            return new Pt_1.Group(ps[0], ps[1]);\n        }\n    }\n    static toRect(line) {\n        let _line = Util_1.Util.iterToArray(line);\n        return new Pt_1.Group(_line[0].$min(_line[1]), _line[0].$max(_line[1]));\n    }\n}\nexports.Line = Line;\nclass Rectangle {\n    static from(topLeft, widthOrSize, height) {\n        return Rectangle.fromTopLeft(topLeft, widthOrSize, height);\n    }\n    static fromTopLeft(topLeft, widthOrSize, height) {\n        let size = (typeof widthOrSize == \"number\") ? [widthOrSize, (height || widthOrSize)] : widthOrSize;\n        return new Pt_1.Group(new Pt_1.Pt(topLeft), new Pt_1.Pt(topLeft).add(size));\n    }\n    static fromCenter(center, widthOrSize, height) {\n        let half = (typeof widthOrSize == \"number\") ? [widthOrSize / 2, (height || widthOrSize) / 2] : new Pt_1.Pt(widthOrSize).divide(2);\n        return new Pt_1.Group(new Pt_1.Pt(center).subtract(half), new Pt_1.Pt(center).add(half));\n    }\n    static toCircle(pts, within = true) {\n        return Circle.fromRect(pts, within);\n    }\n    static toSquare(pts, enclose = false) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        let s = Rectangle.size(_pts);\n        let m = (enclose) ? s.maxValue().value : s.minValue().value;\n        return Rectangle.fromCenter(Rectangle.center(_pts), m, m);\n    }\n    static size(pts) {\n        let p = Util_1.Util.iterToArray(pts);\n        return p[0].$max(p[1]).subtract(p[0].$min(p[1]));\n    }\n    static center(pts) {\n        let p = Util_1.Util.iterToArray(pts);\n        let min = p[0].$min(p[1]);\n        let max = p[0].$max(p[1]);\n        return min.add(max.$subtract(min).divide(2));\n    }\n    static corners(rect) {\n        let _rect = Util_1.Util.iterToArray(rect);\n        let p0 = _rect[0].$min(_rect[1]);\n        let p2 = _rect[0].$max(_rect[1]);\n        return new Pt_1.Group(p0, new Pt_1.Pt(p2.x, p0.y), p2, new Pt_1.Pt(p0.x, p2.y));\n    }\n    static sides(rect) {\n        let [p0, p1, p2, p3] = Rectangle.corners(rect);\n        return [\n            new Pt_1.Group(p0, p1), new Pt_1.Group(p1, p2),\n            new Pt_1.Group(p2, p3), new Pt_1.Group(p3, p0)\n        ];\n    }\n    static boundingBox(rects) {\n        let _rects = Util_1.Util.iterToArray(rects);\n        let merged = Util_1.Util.flatten(_rects, false);\n        let min = Pt_1.Pt.make(2, Number.MAX_VALUE);\n        let max = Pt_1.Pt.make(2, Number.MIN_VALUE);\n        for (let i = 0, len = merged.length; i < len; i++) {\n            let k = 0;\n            for (let m of merged[i]) {\n                min[k] = Math.min(min[k], m[k]);\n                max[k] = Math.max(max[k], m[k]);\n                if (++k >= 2)\n                    break;\n            }\n        }\n        return new Pt_1.Group(min, max);\n    }\n    static polygon(rect) {\n        return Rectangle.corners(rect);\n    }\n    static quadrants(rect, center) {\n        let _rect = Util_1.Util.iterToArray(rect);\n        let corners = Rectangle.corners(_rect);\n        let _center = (center != undefined) ? new Pt_1.Pt(center) : Rectangle.center(_rect);\n        return corners.map((c) => new Pt_1.Group(c, _center).boundingBox());\n    }\n    static halves(rect, ratio = 0.5, asRows = false) {\n        let _rect = Util_1.Util.iterToArray(rect);\n        let min = _rect[0].$min(_rect[1]);\n        let max = _rect[0].$max(_rect[1]);\n        let mid = (asRows) ? Num_1.Num.lerp(min[1], max[1], ratio) : Num_1.Num.lerp(min[0], max[0], ratio);\n        return (asRows)\n            ? [new Pt_1.Group(min, new Pt_1.Pt(max[0], mid)), new Pt_1.Group(new Pt_1.Pt(min[0], mid), max)]\n            : [new Pt_1.Group(min, new Pt_1.Pt(mid, max[1])), new Pt_1.Group(new Pt_1.Pt(mid, min[1]), max)];\n    }\n    static withinBound(rect, pt) {\n        let _rect = Util_1.Util.iterToArray(rect);\n        return Num_1.Geom.withinBound(pt, _rect[0], _rect[1]);\n    }\n    static hasIntersectRect2D(rect1, rect2, resetBoundingBox = false) {\n        let _rect1 = Util_1.Util.iterToArray(rect1);\n        let _rect2 = Util_1.Util.iterToArray(rect2);\n        if (resetBoundingBox) {\n            _rect1 = Num_1.Geom.boundingBox(_rect1);\n            _rect2 = Num_1.Geom.boundingBox(_rect2);\n        }\n        if (_rect1[0][0] > _rect2[1][0] || _rect2[0][0] > _rect1[1][0])\n            return false;\n        if (_rect1[0][1] > _rect2[1][1] || _rect2[0][1] > _rect1[1][1])\n            return false;\n        return true;\n    }\n    static intersectRect2D(rect1, rect2) {\n        let _rect1 = Util_1.Util.iterToArray(rect1);\n        let _rect2 = Util_1.Util.iterToArray(rect2);\n        if (!Rectangle.hasIntersectRect2D(_rect1, _rect2))\n            return new Pt_1.Group();\n        return Line.intersectLines2D(Rectangle.sides(_rect1), Rectangle.sides(_rect2));\n    }\n}\nexports.Rectangle = Rectangle;\nclass Circle {\n    static fromRect(pts, enclose = false) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        let r = 0;\n        let min = r = Rectangle.size(_pts).minValue().value / 2;\n        if (enclose) {\n            let max = Rectangle.size(_pts).maxValue().value / 2;\n            r = Math.sqrt(min * min + max * max);\n        }\n        else {\n            r = min;\n        }\n        return new Pt_1.Group(Rectangle.center(_pts), new Pt_1.Pt(r, r));\n    }\n    static fromTriangle(pts, enclose = false) {\n        if (enclose) {\n            return Triangle.circumcircle(pts);\n        }\n        else {\n            return Triangle.incircle(pts);\n        }\n    }\n    static fromCenter(pt, radius) {\n        return new Pt_1.Group(new Pt_1.Pt(pt), new Pt_1.Pt(radius, radius));\n    }\n    static withinBound(pts, pt, threshold = 0) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        let d = _pts[0].$subtract(pt);\n        return d.dot(d) + threshold < _pts[1].x * _pts[1].x;\n    }\n    static intersectRay2D(circle, ray) {\n        let _pts = Util_1.Util.iterToArray(circle);\n        let _ray = Util_1.Util.iterToArray(ray);\n        let d = _ray[0].$subtract(_ray[1]);\n        let f = _pts[0].$subtract(_ray[0]);\n        let a = d.dot(d);\n        let b = f.dot(d);\n        let c = f.dot(f) - _pts[1].x * _pts[1].x;\n        let p = b / a;\n        let q = c / a;\n        let disc = p * p - q;\n        if (disc < 0) {\n            return new Pt_1.Group();\n        }\n        else {\n            let discSqrt = Math.sqrt(disc);\n            let t1 = -p + discSqrt;\n            let p1 = _ray[0].$subtract(d.$multiply(t1));\n            if (disc === 0)\n                return new Pt_1.Group(p1);\n            let t2 = -p - discSqrt;\n            let p2 = _ray[0].$subtract(d.$multiply(t2));\n            return new Pt_1.Group(p1, p2);\n        }\n    }\n    static intersectLine2D(circle, line) {\n        let _pts = Util_1.Util.iterToArray(circle);\n        let _line = Util_1.Util.iterToArray(line);\n        let ps = Circle.intersectRay2D(_pts, _line);\n        let g = new Pt_1.Group();\n        if (ps.length > 0) {\n            for (let i = 0, len = ps.length; i < len; i++) {\n                if (Rectangle.withinBound(_line, ps[i]))\n                    g.push(ps[i]);\n            }\n        }\n        return g;\n    }\n    static intersectCircle2D(circle1, circle2) {\n        let _pts = Util_1.Util.iterToArray(circle1);\n        let _circle = Util_1.Util.iterToArray(circle2);\n        let dv = _circle[0].$subtract(_pts[0]);\n        let dr2 = dv.magnitudeSq();\n        let dr = Math.sqrt(dr2);\n        let ar = _pts[1].x;\n        let br = _circle[1].x;\n        let ar2 = ar * ar;\n        let br2 = br * br;\n        if (dr > ar + br) {\n            return new Pt_1.Group();\n        }\n        else if (dr < Math.abs(ar - br)) {\n            return new Pt_1.Group(_pts[0].clone());\n        }\n        else {\n            let a = (ar2 - br2 + dr2) / (2 * dr);\n            let h = Math.sqrt(ar2 - a * a);\n            let p = dv.$multiply(a / dr).add(_pts[0]);\n            return new Pt_1.Group(new Pt_1.Pt(p.x + h * dv.y / dr, p.y - h * dv.x / dr), new Pt_1.Pt(p.x - h * dv.y / dr, p.y + h * dv.x / dr));\n        }\n    }\n    static intersectRect2D(circle, rect) {\n        let _pts = Util_1.Util.iterToArray(circle);\n        let _rect = Util_1.Util.iterToArray(rect);\n        let sides = Rectangle.sides(_rect);\n        let g = [];\n        for (let i = 0, len = sides.length; i < len; i++) {\n            let ps = Circle.intersectLine2D(_pts, sides[i]);\n            if (ps.length > 0)\n                g.push(ps);\n        }\n        return Util_1.Util.flatten(g);\n    }\n    static toRect(circle, within = false) {\n        let _pts = Util_1.Util.iterToArray(circle);\n        let r = _pts[1][0];\n        if (within) {\n            let half = Math.sqrt(r * r) / 2;\n            return new Pt_1.Group(_pts[0].$subtract(half), _pts[0].$add(half));\n        }\n        else {\n            return new Pt_1.Group(_pts[0].$subtract(r), _pts[0].$add(r));\n        }\n    }\n    static toTriangle(circle, within = true) {\n        let _pts = Util_1.Util.iterToArray(circle);\n        if (within) {\n            let ang = -Math.PI / 2;\n            let inc = Math.PI * 2 / 3;\n            let g = new Pt_1.Group();\n            for (let i = 0; i < 3; i++) {\n                g.push(_pts[0].clone().toAngle(ang, _pts[1][0], true));\n                ang += inc;\n            }\n            return g;\n        }\n        else {\n            return Triangle.fromCenter(_pts[0], _pts[1][0]);\n        }\n    }\n}\nexports.Circle = Circle;\nclass Triangle {\n    static fromRect(rect) {\n        let _rect = Util_1.Util.iterToArray(rect);\n        let top = _rect[0].$add(_rect[1]).divide(2);\n        top.y = _rect[0][1];\n        let left = _rect[1].clone();\n        left.x = _rect[0][0];\n        return new Pt_1.Group(top, _rect[1].clone(), left);\n    }\n    static fromCircle(circle) {\n        return Circle.toTriangle(circle, true);\n    }\n    static fromCenter(pt, size) {\n        return Triangle.fromCircle(Circle.fromCenter(pt, size));\n    }\n    static medial(tri) {\n        let _pts = Util_1.Util.iterToArray(tri);\n        if (_pts.length < 3)\n            return _errorLength(new Pt_1.Group(), 3);\n        return Polygon.midpoints(_pts, true);\n    }\n    static oppositeSide(tri, index) {\n        let _pts = Util_1.Util.iterToArray(tri);\n        if (_pts.length < 3)\n            return _errorLength(new Pt_1.Group(), 3);\n        if (index === 0) {\n            return Pt_1.Group.fromPtArray([_pts[1], _pts[2]]);\n        }\n        else if (index === 1) {\n            return Pt_1.Group.fromPtArray([_pts[0], _pts[2]]);\n        }\n        else {\n            return Pt_1.Group.fromPtArray([_pts[0], _pts[1]]);\n        }\n    }\n    static altitude(tri, index) {\n        let _pts = Util_1.Util.iterToArray(tri);\n        let opp = Triangle.oppositeSide(_pts, index);\n        if (opp.length > 1) {\n            return new Pt_1.Group(_pts[index], Line.perpendicularFromPt(opp, _pts[index]));\n        }\n        else {\n            return new Pt_1.Group();\n        }\n    }\n    static orthocenter(tri) {\n        let _pts = Util_1.Util.iterToArray(tri);\n        if (_pts.length < 3)\n            return _errorLength(undefined, 3);\n        let a = Triangle.altitude(_pts, 0);\n        let b = Triangle.altitude(_pts, 1);\n        return Line.intersectRay2D(a, b);\n    }\n    static incenter(tri) {\n        let _pts = Util_1.Util.iterToArray(tri);\n        if (_pts.length < 3)\n            return _errorLength(undefined, 3);\n        let a = Polygon.bisector(_pts, 0).add(_pts[0]);\n        let b = Polygon.bisector(_pts, 1).add(_pts[1]);\n        return Line.intersectRay2D(new Pt_1.Group(_pts[0], a), new Pt_1.Group(_pts[1], b));\n    }\n    static incircle(tri, center) {\n        let _pts = Util_1.Util.iterToArray(tri);\n        let c = (center) ? center : Triangle.incenter(_pts);\n        let area = Polygon.area(_pts);\n        let perim = Polygon.perimeter(_pts, true);\n        let r = 2 * area / perim.total;\n        return Circle.fromCenter(c, r);\n    }\n    static circumcenter(tri) {\n        let _pts = Util_1.Util.iterToArray(tri);\n        let md = Triangle.medial(_pts);\n        let a = [md[0], Num_1.Geom.perpendicular(_pts[0].$subtract(md[0])).p1.$add(md[0])];\n        let b = [md[1], Num_1.Geom.perpendicular(_pts[1].$subtract(md[1])).p1.$add(md[1])];\n        return Line.intersectRay2D(a, b);\n    }\n    static circumcircle(tri, center) {\n        let _pts = Util_1.Util.iterToArray(tri);\n        let c = (center) ? center : Triangle.circumcenter(_pts);\n        let r = _pts[0].$subtract(c).magnitude();\n        return Circle.fromCenter(c, r);\n    }\n}\nexports.Triangle = Triangle;\nclass Polygon {\n    static centroid(pts) {\n        return Num_1.Geom.centroid(pts);\n    }\n    static rectangle(center, widthOrSize, height) {\n        return Rectangle.corners(Rectangle.fromCenter(center, widthOrSize, height));\n    }\n    static fromCenter(center, radius, sides) {\n        let g = new Pt_1.Group();\n        for (let i = 0; i < sides; i++) {\n            let ang = Math.PI * 2 * i / sides;\n            g.push(new Pt_1.Pt(Math.cos(ang) * radius, Math.sin(ang) * radius).add(center));\n        }\n        return g;\n    }\n    static lineAt(pts, index) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (index < 0 || index >= _pts.length)\n            throw new Error(\"index out of the Polygon's range\");\n        return new Pt_1.Group(_pts[index], (index === _pts.length - 1) ? _pts[0] : _pts[index + 1]);\n    }\n    static lines(poly, closePath = true) {\n        let _pts = Util_1.Util.iterToArray(poly);\n        if (_pts.length < 2)\n            return _errorLength(new Pt_1.Group(), 2);\n        let sp = Util_1.Util.split(_pts, 2, 1);\n        if (closePath)\n            sp.push(new Pt_1.Group(_pts[_pts.length - 1], _pts[0]));\n        return sp.map((g) => g);\n    }\n    static midpoints(poly, closePath = false, t = 0.5) {\n        let sides = Polygon.lines(poly, closePath);\n        let mids = sides.map((s) => Num_1.Geom.interpolate(s[0], s[1], t));\n        return mids;\n    }\n    static adjacentSides(poly, index, closePath = false) {\n        let _pts = Util_1.Util.iterToArray(poly);\n        if (_pts.length < 2)\n            return _errorLength(new Pt_1.Group(), 2);\n        if (index < 0 || index >= _pts.length)\n            return _errorOutofBound(new Pt_1.Group(), index);\n        let gs = [];\n        let left = index - 1;\n        if (closePath && left < 0)\n            left = _pts.length - 1;\n        if (left >= 0)\n            gs.push(new Pt_1.Group(_pts[index], _pts[left]));\n        let right = index + 1;\n        if (closePath && right > _pts.length - 1)\n            right = 0;\n        if (right <= _pts.length - 1)\n            gs.push(new Pt_1.Group(_pts[index], _pts[right]));\n        return gs;\n    }\n    static bisector(poly, index) {\n        let sides = Polygon.adjacentSides(poly, index, true);\n        if (sides.length >= 2) {\n            let a = sides[0][1].$subtract(sides[0][0]).unit();\n            let b = sides[1][1].$subtract(sides[1][0]).unit();\n            return a.add(b).divide(2);\n        }\n        else {\n            return undefined;\n        }\n    }\n    static perimeter(poly, closePath = false) {\n        let lines = Polygon.lines(poly, closePath);\n        let mag = 0;\n        let p = Pt_1.Pt.make(lines.length, 0);\n        for (let i = 0, len = lines.length; i < len; i++) {\n            let m = Line.magnitude(lines[i]);\n            mag += m;\n            p[i] = m;\n        }\n        return {\n            total: mag,\n            segments: p\n        };\n    }\n    static area(pts) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (_pts.length < 3)\n            return _errorLength(new Pt_1.Group(), 3);\n        let det = (a, b) => a[0] * b[1] - a[1] * b[0];\n        let area = 0;\n        for (let i = 0, len = _pts.length; i < len; i++) {\n            if (i < _pts.length - 1) {\n                area += det(_pts[i], _pts[i + 1]);\n            }\n            else {\n                area += det(_pts[i], _pts[0]);\n            }\n        }\n        return Math.abs(area / 2);\n    }\n    static convexHull(pts, sorted = false) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (_pts.length < 3)\n            return _errorLength(new Pt_1.Group(), 3);\n        if (!sorted) {\n            _pts = _pts.slice();\n            _pts.sort((a, b) => a[0] - b[0]);\n        }\n        let left = (a, b, c) => {\n            return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]) > 0;\n        };\n        let dq = [];\n        let bot = _pts.length - 2;\n        let top = bot + 3;\n        dq[bot] = _pts[2];\n        dq[top] = _pts[2];\n        if (left(_pts[0], _pts[1], _pts[2])) {\n            dq[bot + 1] = _pts[0];\n            dq[bot + 2] = _pts[1];\n        }\n        else {\n            dq[bot + 1] = _pts[1];\n            dq[bot + 2] = _pts[0];\n        }\n        for (let i = 3, len = _pts.length; i < len; i++) {\n            let pt = _pts[i];\n            if (left(dq[bot], dq[bot + 1], pt) && left(dq[top - 1], dq[top], pt)) {\n                continue;\n            }\n            while (!left(dq[bot], dq[bot + 1], pt)) {\n                bot += 1;\n            }\n            bot -= 1;\n            dq[bot] = pt;\n            while (!left(dq[top - 1], dq[top], pt)) {\n                top -= 1;\n            }\n            top += 1;\n            dq[top] = pt;\n        }\n        let hull = new Pt_1.Group();\n        for (let h = 0; h < (top - bot); h++) {\n            hull.push(dq[bot + h]);\n        }\n        return hull;\n    }\n    static network(poly, originIndex = 0) {\n        let _pts = Util_1.Util.iterToArray(poly);\n        let g = [];\n        for (let i = 0, len = _pts.length; i < len; i++) {\n            if (i != originIndex)\n                g.push(new Pt_1.Group(_pts[originIndex], _pts[i]));\n        }\n        return g;\n    }\n    static nearestPt(poly, pt) {\n        let _near = Number.MAX_VALUE;\n        let _item = -1;\n        let i = 0;\n        for (let p of poly) {\n            let d = p.$subtract(pt).magnitudeSq();\n            if (d < _near) {\n                _near = d;\n                _item = i;\n            }\n            i++;\n        }\n        return _item;\n    }\n    static projectAxis(poly, unitAxis) {\n        let _poly = Util_1.Util.iterToArray(poly);\n        let dot = unitAxis.dot(_poly[0]);\n        let d = new Pt_1.Pt(dot, dot);\n        for (let n = 1, len = _poly.length; n < len; n++) {\n            dot = unitAxis.dot(_poly[n]);\n            d = new Pt_1.Pt(Math.min(dot, d[0]), Math.max(dot, d[1]));\n        }\n        return d;\n    }\n    static _axisOverlap(poly1, poly2, unitAxis) {\n        let pa = Polygon.projectAxis(poly1, unitAxis);\n        let pb = Polygon.projectAxis(poly2, unitAxis);\n        return (pa[0] < pb[0]) ? pb[0] - pa[1] : pa[0] - pb[1];\n    }\n    static hasIntersectPoint(poly, pt) {\n        let _poly = Util_1.Util.iterToArray(poly);\n        let c = false;\n        for (let i = 0, len = _poly.length; i < len; i++) {\n            let ln = Polygon.lineAt(_poly, i);\n            if (((ln[0][1] > pt[1]) != (ln[1][1] > pt[1])) &&\n                (pt[0] < (ln[1][0] - ln[0][0]) * (pt[1] - ln[0][1]) / (ln[1][1] - ln[0][1]) + ln[0][0])) {\n                c = !c;\n            }\n        }\n        return c;\n    }\n    static hasIntersectCircle(poly, circle) {\n        let _poly = Util_1.Util.iterToArray(poly);\n        let _circle = Util_1.Util.iterToArray(circle);\n        let info = {\n            which: -1,\n            dist: 0,\n            normal: null,\n            edge: null,\n            vertex: null,\n        };\n        let c = _circle[0];\n        let r = _circle[1][0];\n        let minDist = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, len = _poly.length; i < len; i++) {\n            let edge = Polygon.lineAt(_poly, i);\n            let axis = new Pt_1.Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n            let poly2 = new Pt_1.Group(c.$add(axis.$multiply(r)), c.$subtract(axis.$multiply(r)));\n            let dist = Polygon._axisOverlap(_poly, poly2, axis);\n            if (dist > 0) {\n                return null;\n            }\n            else if (Math.abs(dist) < minDist) {\n                let check = Rectangle.withinBound(edge, Line.perpendicularFromPt(edge, c)) || Circle.intersectLine2D(circle, edge).length > 0;\n                if (check) {\n                    info.edge = edge;\n                    info.normal = axis;\n                    minDist = Math.abs(dist);\n                    info.which = i;\n                }\n            }\n        }\n        if (!info.edge)\n            return null;\n        let dir = c.$subtract(Polygon.centroid(_poly)).dot(info.normal);\n        if (dir < 0)\n            info.normal.multiply(-1);\n        info.dist = minDist;\n        info.vertex = c;\n        return info;\n    }\n    static hasIntersectPolygon(poly1, poly2) {\n        let _poly1 = Util_1.Util.iterToArray(poly1);\n        let _poly2 = Util_1.Util.iterToArray(poly2);\n        let info = {\n            which: -1,\n            dist: 0,\n            normal: new Pt_1.Pt(),\n            edge: new Pt_1.Group(),\n            vertex: new Pt_1.Pt()\n        };\n        let minDist = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, plen = (_poly1.length + _poly2.length); i < plen; i++) {\n            let edge = (i < _poly1.length) ? Polygon.lineAt(_poly1, i) : Polygon.lineAt(_poly2, i - _poly1.length);\n            let axis = new Pt_1.Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n            let dist = Polygon._axisOverlap(_poly1, _poly2, axis);\n            if (dist > 0) {\n                return null;\n            }\n            else if (Math.abs(dist) < minDist) {\n                info.edge = edge;\n                info.normal = axis;\n                minDist = Math.abs(dist);\n                info.which = (i < _poly1.length) ? 0 : 1;\n            }\n        }\n        info.dist = minDist;\n        let b1 = (info.which === 0) ? _poly2 : _poly1;\n        let b2 = (info.which === 0) ? _poly1 : _poly2;\n        let c1 = Polygon.centroid(b1);\n        let c2 = Polygon.centroid(b2);\n        let dir = c1.$subtract(c2).dot(info.normal);\n        if (dir < 0)\n            info.normal.multiply(-1);\n        let smallest = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, len = b1.length; i < len; i++) {\n            let d = info.normal.dot(b1[i].$subtract(c2));\n            if (d < smallest) {\n                smallest = d;\n                info.vertex = b1[i];\n            }\n        }\n        return info;\n    }\n    static intersectPolygon2D(poly1, poly2) {\n        let _poly1 = Util_1.Util.iterToArray(poly1);\n        let _poly2 = Util_1.Util.iterToArray(poly2);\n        let lp = Polygon.lines(_poly1);\n        let g = [];\n        for (let i = 0, len = lp.length; i < len; i++) {\n            let ins = Line.intersectPolygon2D(lp[i], _poly2, false);\n            if (ins)\n                g.push(ins);\n        }\n        return Util_1.Util.flatten(g, true);\n    }\n    static toRects(polys) {\n        let boxes = [];\n        for (let g of polys) {\n            boxes.push(Num_1.Geom.boundingBox(g));\n        }\n        let merged = Util_1.Util.flatten(boxes, false);\n        boxes.unshift(Num_1.Geom.boundingBox(merged));\n        return boxes;\n    }\n}\nexports.Polygon = Polygon;\nclass Curve {\n    static getSteps(steps) {\n        let ts = new Pt_1.Group();\n        for (let i = 0; i <= steps; i++) {\n            let t = i / steps;\n            ts.push(new Pt_1.Pt(t * t * t, t * t, t, 1));\n        }\n        return ts;\n    }\n    static controlPoints(pts, index = 0, copyStart = false) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (index > _pts.length - 1)\n            return new Pt_1.Group();\n        let _index = (i) => (i < _pts.length - 1) ? i : _pts.length - 1;\n        let p0 = _pts[index];\n        index = (copyStart) ? index : index + 1;\n        return new Pt_1.Group(p0, _pts[_index(index++)], _pts[_index(index++)], _pts[_index(index++)]);\n    }\n    static _calcPt(ctrls, params) {\n        let x = ctrls.reduce((a, c, i) => a + c.x * params[i], 0);\n        let y = ctrls.reduce((a, c, i) => a + c.y * params[i], 0);\n        if (ctrls[0].length > 2) {\n            let z = ctrls.reduce((a, c, i) => a + c.z * params[i], 0);\n            return new Pt_1.Pt(x, y, z);\n        }\n        return new Pt_1.Pt(x, y);\n    }\n    static catmullRom(pts, steps = 10) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (_pts.length < 2)\n            return new Pt_1.Group();\n        let ps = new Pt_1.Group();\n        let ts = Curve.getSteps(steps);\n        let c = Curve.controlPoints(_pts, 0, true);\n        for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.catmullRomStep(ts[i], c));\n        }\n        let k = 0;\n        while (k < _pts.length - 2) {\n            let cp = Curve.controlPoints(_pts, k);\n            if (cp.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.catmullRomStep(ts[i], cp));\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static catmullRomStep(step, ctrls) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-0.5, 1, -0.5, 0), new Pt_1.Pt(1.5, -2.5, 0, 1), new Pt_1.Pt(-1.5, 2, 0.5, 0), new Pt_1.Pt(0.5, -0.5, 0, 0));\n        return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n    }\n    static cardinal(pts, steps = 10, tension = 0.5) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (_pts.length < 2)\n            return new Pt_1.Group();\n        let ps = new Pt_1.Group();\n        let ts = Curve.getSteps(steps);\n        let c = Curve.controlPoints(_pts, 0, true);\n        for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.cardinalStep(ts[i], c, tension));\n        }\n        let k = 0;\n        while (k < _pts.length - 2) {\n            let cp = Curve.controlPoints(_pts, k);\n            if (cp.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.cardinalStep(ts[i], cp, tension));\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static cardinalStep(step, ctrls, tension = 0.5) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-1, 2, -1, 0), new Pt_1.Pt(-1, 1, 0, 0), new Pt_1.Pt(1, -2, 1, 0), new Pt_1.Pt(1, -1, 0, 0));\n        let h = LinearAlgebra_1.Mat.multiply([step], m, true)[0].multiply(tension);\n        let h2 = (2 * step[0] - 3 * step[1] + 1);\n        let h3 = -2 * step[0] + 3 * step[1];\n        let pt = Curve._calcPt(ctrls, h);\n        pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n        pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n        if (pt.length > 2)\n            pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n        return pt;\n    }\n    static bezier(pts, steps = 10) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (_pts.length < 4)\n            return new Pt_1.Group();\n        let ps = new Pt_1.Group();\n        let ts = Curve.getSteps(steps);\n        let k = 0;\n        while (k < _pts.length - 3) {\n            let c = Curve.controlPoints(_pts, k);\n            if (c.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.bezierStep(ts[i], c));\n                }\n                k += 3;\n            }\n        }\n        return ps;\n    }\n    static bezierStep(step, ctrls) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-1, 3, -3, 1), new Pt_1.Pt(3, -6, 3, 0), new Pt_1.Pt(-3, 3, 0, 0), new Pt_1.Pt(1, 0, 0, 0));\n        return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n    }\n    static bspline(pts, steps = 10, tension = 1) {\n        let _pts = Util_1.Util.iterToArray(pts);\n        if (_pts.length < 2)\n            return new Pt_1.Group();\n        let ps = new Pt_1.Group();\n        let ts = Curve.getSteps(steps);\n        let k = 0;\n        while (k < _pts.length - 3) {\n            let c = Curve.controlPoints(_pts, k);\n            if (c.length > 0) {\n                if (tension !== 1) {\n                    for (let i = 0; i <= steps; i++) {\n                        ps.push(Curve.bsplineTensionStep(ts[i], c, tension));\n                    }\n                }\n                else {\n                    for (let i = 0; i <= steps; i++) {\n                        ps.push(Curve.bsplineStep(ts[i], c));\n                    }\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static bsplineStep(step, ctrls) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt_1.Pt(0.5, -1, 0, 0.6666666666666666), new Pt_1.Pt(-0.5, 0.5, 0.5, 0.16666666666666666), new Pt_1.Pt(0.16666666666666666, 0, 0, 0));\n        return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n    }\n    static bsplineTensionStep(step, ctrls, tension = 1) {\n        let m = new Pt_1.Group(new Pt_1.Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt_1.Pt(-1.5, 2, 0, -0.3333333333333333), new Pt_1.Pt(1.5, -2.5, 0.5, 0.16666666666666666), new Pt_1.Pt(0.16666666666666666, 0, 0, 0));\n        let h = LinearAlgebra_1.Mat.multiply([step], m, true)[0].multiply(tension);\n        let h2 = (2 * step[0] - 3 * step[1] + 1);\n        let h3 = -2 * step[0] + 3 * step[1];\n        let pt = Curve._calcPt(ctrls, h);\n        pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n        pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n        if (pt.length > 2)\n            pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n        return pt;\n    }\n}\nexports.Curve = Curve;\n\n\n/***/ }),\n\n/***/ \"./src/Physics.ts\":\n/*!************************!*\\\n  !*** ./src/Physics.ts ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Body = exports.Particle = exports.World = void 0;\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nclass World {\n    constructor(bound, friction = 1, gravity = 0) {\n        this._lastTime = null;\n        this._gravity = new Pt_1.Pt();\n        this._friction = 1;\n        this._damping = 0.75;\n        this._particles = [];\n        this._bodies = [];\n        this._pnames = [];\n        this._bnames = [];\n        this._bound = Pt_1.Bound.fromGroup(bound);\n        this._friction = friction;\n        this._gravity = (typeof gravity === \"number\") ? new Pt_1.Pt(0, gravity) : new Pt_1.Pt(gravity);\n        return this;\n    }\n    get bound() { return this._bound; }\n    set bound(bound) { this._bound = bound; }\n    get gravity() { return this._gravity; }\n    set gravity(g) { this._gravity = g; }\n    get friction() { return this._friction; }\n    set friction(f) { this._friction = f; }\n    get damping() { return this._damping; }\n    set damping(f) { this._damping = f; }\n    get bodyCount() { return this._bodies.length; }\n    get particleCount() { return this._particles.length; }\n    body(id) {\n        let idx = id;\n        if (typeof id === \"string\" && id.length > 0) {\n            idx = this._bnames.indexOf(id);\n        }\n        if (!(idx >= 0))\n            return undefined;\n        return this._bodies[idx];\n    }\n    particle(id) {\n        let idx = id;\n        if (typeof id === \"string\" && id.length > 0) {\n            idx = this._pnames.indexOf(id);\n        }\n        if (!(idx >= 0))\n            return undefined;\n        return this._particles[idx];\n    }\n    bodyIndex(name) {\n        return this._bnames.indexOf(name);\n    }\n    particleIndex(name) {\n        return this._pnames.indexOf(name);\n    }\n    update(ms) {\n        let dt = ms / 1000;\n        this._updateParticles(dt);\n        this._updateBodies(dt);\n    }\n    drawParticles(fn) {\n        this._drawParticles = fn;\n    }\n    drawBodies(fn) {\n        this._drawBodies = fn;\n    }\n    add(p, name = '') {\n        if (p instanceof Body) {\n            this._bodies.push(p);\n            this._bnames.push(name);\n        }\n        else {\n            this._particles.push(p);\n            this._pnames.push(name);\n        }\n        return this;\n    }\n    _index(fn, id) {\n        let index = 0;\n        if (typeof id === \"string\") {\n            index = fn(id);\n            if (index < 0)\n                throw new Error(`Cannot find index of ${id}. You can use particleIndex() or bodyIndex() function to check existence by name.`);\n        }\n        else {\n            index = id;\n        }\n        return index;\n    }\n    removeBody(from, count = 1) {\n        const index = this._index(this.bodyIndex.bind(this), from);\n        const param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        this._bodies.splice(param[0], param[1]);\n        this._bnames.splice(param[0], param[1]);\n        return this;\n    }\n    removeParticle(from, count = 1) {\n        const index = this._index(this.particleIndex.bind(this), from);\n        const param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        this._particles.splice(param[0], param[1]);\n        this._pnames.splice(param[0], param[1]);\n        return this;\n    }\n    static edgeConstraint(p1, p2, dist, stiff = 1, precise = false) {\n        const m1 = 1 / (p1.mass || 1);\n        const m2 = 1 / (p2.mass || 1);\n        const mm = m1 + m2;\n        let delta = p2.$subtract(p1);\n        let distSq = dist * dist;\n        let d = (precise) ? (dist / delta.magnitude() - 1) : (distSq / (delta.dot(delta) + distSq) - 0.5);\n        let f = delta.$multiply(d * stiff);\n        p1.subtract(f.$multiply(m1 / mm));\n        p2.add(f.$multiply(m2 / mm));\n        return p1;\n    }\n    static boundConstraint(p, rect, damping = 0.75) {\n        let bound = Num_1.Geom.boundingBox(rect);\n        let np = p.$min(bound[1].subtract(p.radius)).$max(bound[0].add(p.radius));\n        if (np[0] === bound[0][0] || np[0] === bound[1][0]) {\n            let c = p.changed.$multiply(damping);\n            p.previous = np.$subtract(new Pt_1.Pt(-c[0], c[1]));\n        }\n        else if (np[1] === bound[0][1] || np[1] === bound[1][1]) {\n            let c = p.changed.$multiply(damping);\n            p.previous = np.$subtract(new Pt_1.Pt(c[0], -c[1]));\n        }\n        p.to(np);\n    }\n    integrate(p, dt, prevDt) {\n        p.addForce(this._gravity);\n        p.verlet(dt, this._friction, prevDt);\n        return p;\n    }\n    _updateParticles(dt) {\n        for (let i = 0, len = this._particles.length; i < len; i++) {\n            let p = this._particles[i];\n            this.integrate(p, dt, this._lastTime);\n            World.boundConstraint(p, this._bound, this._damping);\n            for (let k = i + 1; k < len; k++) {\n                if (i !== k) {\n                    let p2 = this._particles[k];\n                    p.collide(p2, this._damping);\n                }\n            }\n            if (this._drawParticles)\n                this._drawParticles(p, i);\n        }\n        this._lastTime = dt;\n    }\n    _updateBodies(dt) {\n        for (let i = 0, len = this._bodies.length; i < len; i++) {\n            let bds = this._bodies[i];\n            if (bds) {\n                for (let k = 0, klen = bds.length; k < klen; k++) {\n                    let bk = bds[k];\n                    World.boundConstraint(bk, this._bound, this._damping);\n                    this.integrate(bk, dt, this._lastTime);\n                }\n                for (let k = i + 1; k < len; k++) {\n                    bds.processBody(this._bodies[k]);\n                }\n                for (let m = 0, mlen = this._particles.length; m < mlen; m++) {\n                    bds.processParticle(this._particles[m]);\n                }\n                bds.processEdges();\n                if (this._drawBodies)\n                    this._drawBodies(bds, i);\n            }\n        }\n    }\n}\nexports.World = World;\nclass Particle extends Pt_1.Pt {\n    constructor(...args) {\n        super(...args);\n        this._mass = 1;\n        this._radius = 0;\n        this._force = new Pt_1.Pt();\n        this._prev = new Pt_1.Pt();\n        this._lock = false;\n        this._prev = this.clone();\n    }\n    get mass() { return this._mass; }\n    set mass(m) { this._mass = m; }\n    get radius() { return this._radius; }\n    set radius(f) { this._radius = f; }\n    get previous() { return this._prev; }\n    set previous(p) { this._prev = p; }\n    get force() { return this._force; }\n    set force(g) { this._force = g; }\n    get body() { return this._body; }\n    set body(b) { this._body = b; }\n    get lock() { return this._lock; }\n    set lock(b) {\n        this._lock = b;\n        this._lockPt = new Pt_1.Pt(this);\n    }\n    get changed() { return this.$subtract(this._prev); }\n    set position(p) {\n        this.previous.to(this);\n        if (this._lock)\n            this._lockPt = p;\n        this.to(p);\n    }\n    size(r) {\n        this._mass = r;\n        this._radius = r;\n        return this;\n    }\n    addForce(...args) {\n        this._force.add(...args);\n        return this._force;\n    }\n    verlet(dt, friction, lastDt) {\n        if (this._lock) {\n            this.to(this._lockPt);\n        }\n        else {\n            let lt = (lastDt) ? lastDt : dt;\n            let a = this._force.multiply(dt * (dt + lt) / 2);\n            let v = this.changed.multiply(friction * dt / lt).add(a);\n            this._prev = this.clone();\n            this.add(v);\n            this._force = new Pt_1.Pt();\n        }\n        return this;\n    }\n    hit(...args) {\n        this._prev.subtract(new Pt_1.Pt(...args).$divide(Math.sqrt(this._mass)));\n        return this;\n    }\n    collide(p2, damp = 1) {\n        let p1 = this;\n        let dp = p1.$subtract(p2);\n        let distSq = dp.magnitudeSq();\n        let dr = p1.radius + p2.radius;\n        if (distSq < dr * dr) {\n            let c1 = p1.changed;\n            let c2 = p2.changed;\n            let dist = Math.sqrt(distSq);\n            let d = dp.$multiply(((dist - dr) / dist) / 2);\n            let np1 = p1.$subtract(d);\n            let np2 = p2.$add(d);\n            p1.to(np1);\n            p2.to(np2);\n            let f1 = damp * dp.dot(c1) / distSq;\n            let f2 = damp * dp.dot(c2) / distSq;\n            let dm1 = p1.mass / (p1.mass + p2.mass);\n            let dm2 = p2.mass / (p1.mass + p2.mass);\n            c1.add(new Pt_1.Pt(f2 * dp[0] - f1 * dp[0], f2 * dp[1] - f1 * dp[1]).$multiply(dm2));\n            c2.add(new Pt_1.Pt(f1 * dp[0] - f2 * dp[0], f1 * dp[1] - f2 * dp[1]).$multiply(dm1));\n            p1.previous = p1.$subtract(c1);\n            p2.previous = p2.$subtract(c2);\n        }\n    }\n    toString() {\n        return `Particle: ${this[0]} ${this[1]} | previous ${this._prev[0]} ${this._prev[1]} | mass ${this._mass}`;\n    }\n}\nexports.Particle = Particle;\nclass Body extends Pt_1.Group {\n    constructor() {\n        super();\n        this._cs = [];\n        this._stiff = 1;\n        this._locks = {};\n        this._mass = 1;\n    }\n    static fromGroup(body, stiff = 1, autoLink = true, autoMass = true) {\n        let b = new Body().init(body);\n        if (autoLink)\n            b.linkAll(stiff);\n        if (autoMass)\n            b.autoMass();\n        return b;\n    }\n    init(body, stiff = 1) {\n        let c = new Pt_1.Pt();\n        for (let li of body) {\n            let p = new Particle(li);\n            p.body = this;\n            c.add(li);\n            this.push(p);\n        }\n        this._stiff = stiff;\n        return this;\n    }\n    get mass() { return this._mass; }\n    set mass(m) {\n        this._mass = m;\n        for (let i = 0, len = this.length; i < len; i++) {\n            this[i].mass = this._mass;\n        }\n    }\n    autoMass() {\n        this.mass = Math.sqrt(Op_1.Polygon.area(this)) / 10;\n        return this;\n    }\n    link(index1, index2, stiff) {\n        if (index1 < 0 || index1 >= this.length)\n            throw new Error(\"index1 is not in the Group's indices\");\n        if (index2 < 0 || index2 >= this.length)\n            throw new Error(\"index1 is not in the Group's indices\");\n        let d = this[index1].$subtract(this[index2]).magnitude();\n        this._cs.push([index1, index2, d, stiff || this._stiff]);\n        return this;\n    }\n    linkAll(stiff) {\n        let half = this.length / 2;\n        for (let i = 0, len = this.length; i < len; i++) {\n            let n = (i >= len - 1) ? 0 : i + 1;\n            this.link(i, n, stiff);\n            if (len > 4) {\n                let nd = (Math.floor(half / 2)) + 1;\n                let n2 = (i >= len - nd) ? i % len : i + nd;\n                this.link(i, n2, stiff);\n            }\n            if (i <= half - 1) {\n                this.link(i, Math.min(this.length - 1, i + Math.floor(half)));\n            }\n        }\n    }\n    linksToLines() {\n        let gs = [];\n        for (let i = 0, len = this._cs.length; i < len; i++) {\n            let ln = this._cs[i];\n            gs.push(new Pt_1.Group(this[ln[0]], this[ln[1]]));\n        }\n        return gs;\n    }\n    processEdges() {\n        for (let i = 0, len = this._cs.length; i < len; i++) {\n            let [m, n, d, s] = this._cs[i];\n            World.edgeConstraint(this[m], this[n], d, s);\n        }\n    }\n    processBody(b) {\n        let b1 = this;\n        let b2 = b;\n        let hit = Op_1.Polygon.hasIntersectPolygon(b1, b2);\n        if (hit) {\n            let cv = hit.normal.$multiply(hit.dist);\n            let t;\n            let eg = hit.edge;\n            if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n                t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n            }\n            else {\n                t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n            }\n            let lambda = 1 / (t * t + (1 - t) * (1 - t));\n            let m0 = hit.vertex.body.mass || 1;\n            let m1 = hit.edge[0].body.mass || 1;\n            let mr0 = m0 / (m0 + m1);\n            let mr1 = m1 / (m0 + m1);\n            eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n            eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n            hit.vertex.add(cv.$multiply(mr1));\n        }\n    }\n    processParticle(b) {\n        let b1 = this;\n        let b2 = b;\n        let hit = Op_1.Polygon.hasIntersectCircle(b1, Op_1.Circle.fromCenter(b, b.radius));\n        if (hit) {\n            let cv = hit.normal.$multiply(hit.dist);\n            let t;\n            let eg = hit.edge;\n            if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n                t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n            }\n            else {\n                t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n            }\n            let lambda = 1 / (t * t + (1 - t) * (1 - t));\n            let m0 = hit.vertex.mass || b2.mass || 1;\n            let m1 = hit.edge[0].body.mass || 1;\n            let mr0 = m0 / (m0 + m1);\n            let mr1 = m1 / (m0 + m1);\n            eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n            eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n            let c1 = b.changed.add(cv.$multiply(mr1));\n            b.previous = b.$subtract(c1);\n        }\n    }\n}\nexports.Body = Body;\n\n\n/***/ }),\n\n/***/ \"./src/Play.ts\":\n/*!*********************!*\\\n  !*** ./src/Play.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sound = exports.Tempo = void 0;\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nclass Tempo {\n    constructor(bpm) {\n        this._listeners = {};\n        this._listenerInc = 0;\n        this.bpm = bpm;\n    }\n    static fromBeat(ms) {\n        return new Tempo(60000 / ms);\n    }\n    get bpm() { return this._bpm; }\n    set bpm(n) {\n        this._bpm = n;\n        this._ms = 60000 / this._bpm;\n    }\n    get ms() { return this._ms; }\n    set ms(n) {\n        this._bpm = Math.floor(60000 / n);\n        this._ms = 60000 / this._bpm;\n    }\n    _createID(listener) {\n        let id = '';\n        if (typeof listener === 'function') {\n            id = '_b' + (this._listenerInc++);\n        }\n        else {\n            id = listener.name || '_b' + (this._listenerInc++);\n        }\n        return id;\n    }\n    every(beats) {\n        let self = this;\n        let p = Array.isArray(beats) ? beats[0] : beats;\n        return {\n            start: function (fn, offset = 0, name) {\n                let id = name || self._createID(fn);\n                self._listeners[id] = { name: id, beats: beats, period: p, index: 0, offset: offset, duration: -1, continuous: false, fn: fn };\n                return this;\n            },\n            progress: function (fn, offset = 0, name) {\n                let id = name || self._createID(fn);\n                self._listeners[id] = { name: id, beats: beats, period: p, index: 0, offset: offset, duration: -1, continuous: true, fn: fn };\n                return this;\n            }\n        };\n    }\n    track(time) {\n        for (let k in this._listeners) {\n            if (this._listeners.hasOwnProperty(k)) {\n                let li = this._listeners[k];\n                let _t = (li.offset) ? time + li.offset : time;\n                let ms = li.period * this._ms;\n                let isStart = false;\n                if (_t > li.duration + ms) {\n                    li.duration = _t - (_t % this._ms);\n                    if (Array.isArray(li.beats)) {\n                        li.index = (li.index + 1) % li.beats.length;\n                        li.period = li.beats[li.index];\n                    }\n                    isStart = true;\n                }\n                let count = Math.max(0, Math.ceil(Math.floor(li.duration / this._ms) / li.period));\n                let params = (li.continuous) ? [count, Num_1.Num.clamp((_t - li.duration) / ms, 0, 1), _t, isStart] : [count];\n                if (li.continuous || isStart) {\n                    let done = li.fn.apply(li, params);\n                    if (done)\n                        delete this._listeners[li.name];\n                }\n            }\n        }\n    }\n    stop(name) {\n        if (this._listeners[name])\n            delete this._listeners[name];\n    }\n    animate(time, ftime) {\n        this.track(time);\n    }\n    resize(bound, evt) {\n        return;\n    }\n    action(type, px, py, evt) {\n        return;\n    }\n}\nexports.Tempo = Tempo;\nclass Sound {\n    constructor(type) {\n        this._playing = false;\n        this._type = type;\n        let _ctx = window.AudioContext || window.webkitAudioContext || false;\n        if (!_ctx)\n            throw (new Error(\"Your browser doesn't support Web Audio. (No AudioContext)\"));\n        this._ctx = (_ctx) ? new _ctx() : undefined;\n    }\n    static from(node, ctx, type = \"gen\", stream) {\n        let s = new Sound(type);\n        s._node = node;\n        s._ctx = ctx;\n        if (stream)\n            s._stream = stream;\n        return s;\n    }\n    static load(source, crossOrigin = \"anonymous\") {\n        return new Promise((resolve, reject) => {\n            let s = new Sound(\"file\");\n            s._source = (typeof source === 'string') ? new Audio(source) : source;\n            s._source.autoplay = false;\n            s._source.crossOrigin = crossOrigin;\n            s._source.addEventListener(\"ended\", function () { s._playing = false; });\n            s._source.addEventListener('error', function () { reject(\"Error loading sound\"); });\n            s._source.addEventListener('canplaythrough', function () {\n                s._node = s._ctx.createMediaElementSource(s._source);\n                resolve(s);\n            });\n        });\n    }\n    static loadAsBuffer(url) {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url, true);\n            request.responseType = 'arraybuffer';\n            let s = new Sound(\"file\");\n            request.onload = function () {\n                s._ctx.decodeAudioData(request.response, function (buffer) {\n                    s.createBuffer(buffer);\n                    resolve(s);\n                }, (err) => reject(\"Error decoding audio\"));\n            };\n            request.send();\n        });\n    }\n    createBuffer(buf) {\n        this._node = this._ctx.createBufferSource();\n        if (buf !== undefined)\n            this._buffer = buf;\n        this._node.buffer = this._buffer;\n        this._node.onended = () => { this._playing = false; };\n        return this;\n    }\n    static generate(type, val) {\n        let s = new Sound(\"gen\");\n        return s._gen(type, val);\n    }\n    _gen(type, val) {\n        this._node = this._ctx.createOscillator();\n        let osc = this._node;\n        osc.type = type;\n        if (type === 'custom') {\n            osc.setPeriodicWave(val);\n        }\n        else {\n            osc.frequency.value = val;\n        }\n        return this;\n    }\n    static input(constraint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let s = new Sound(\"input\");\n                if (!s)\n                    return undefined;\n                const c = constraint ? constraint : { audio: true, video: false };\n                s._stream = yield navigator.mediaDevices.getUserMedia(c);\n                s._node = s._ctx.createMediaStreamSource(s._stream);\n                return s;\n            }\n            catch (e) {\n                console.error(\"Cannot get audio from input device.\");\n                return Promise.resolve(null);\n            }\n        });\n    }\n    get ctx() { return this._ctx; }\n    get node() { return this._node; }\n    get outputNode() { return this._outputNode; }\n    get stream() { return this._stream; }\n    get source() { return this._source; }\n    get buffer() { return this._buffer; }\n    set buffer(b) { this._buffer = b; }\n    get type() { return this._type; }\n    get playing() { return this._playing; }\n    get progress() {\n        let dur = 0;\n        let curr = 0;\n        if (!!this._buffer) {\n            dur = this._buffer.duration;\n            curr = (this._timestamp) ? this._ctx.currentTime - this._timestamp : 0;\n        }\n        else {\n            dur = this._source.duration;\n            curr = this._source.currentTime;\n        }\n        return curr / dur;\n    }\n    get playable() {\n        return (this._type === \"input\") ? this._node !== undefined : (!!this._buffer || this._source.readyState === 4);\n    }\n    get binSize() {\n        return this.analyzer.size;\n    }\n    get sampleRate() {\n        return this._ctx.sampleRate;\n    }\n    get frequency() {\n        return (this._type === \"gen\") ? this._node.frequency.value : 0;\n    }\n    set frequency(f) {\n        if (this._type === \"gen\")\n            this._node.frequency.value = f;\n    }\n    connect(node) {\n        this._node.connect(node);\n        return this;\n    }\n    setOutputNode(outputNode) {\n        this._outputNode = outputNode;\n        return this;\n    }\n    removeOutputNode() {\n        this._outputNode = null;\n        return this;\n    }\n    analyze(size = 256, minDb = -100, maxDb = -30, smooth = 0.8) {\n        let a = this._ctx.createAnalyser();\n        a.fftSize = size * 2;\n        a.minDecibels = minDb;\n        a.maxDecibels = maxDb;\n        a.smoothingTimeConstant = smooth;\n        this.analyzer = {\n            node: a,\n            size: a.frequencyBinCount,\n            data: new Uint8Array(a.frequencyBinCount)\n        };\n        this._node.connect(this.analyzer.node);\n        return this;\n    }\n    _domain(time) {\n        if (this.analyzer) {\n            if (time) {\n                this.analyzer.node.getByteTimeDomainData(this.analyzer.data);\n            }\n            else {\n                this.analyzer.node.getByteFrequencyData(this.analyzer.data);\n            }\n            return this.analyzer.data;\n        }\n        return new Uint8Array(0);\n    }\n    _domainTo(time, size, position = [0, 0], trim = [0, 0]) {\n        let data = (time) ? this.timeDomain() : this.freqDomain();\n        let g = new Pt_1.Group();\n        for (let i = trim[0], len = data.length - trim[1]; i < len; i++) {\n            g.push(new Pt_1.Pt(position[0] + size[0] * i / len, position[1] + size[1] * data[i] / 255));\n        }\n        return g;\n    }\n    timeDomain() {\n        return this._domain(true);\n    }\n    timeDomainTo(size, position = [0, 0], trim = [0, 0]) {\n        return this._domainTo(true, size, position, trim);\n    }\n    freqDomain() {\n        return this._domain(false);\n    }\n    freqDomainTo(size, position = [0, 0], trim = [0, 0]) {\n        return this._domainTo(false, size, position, trim);\n    }\n    reset() {\n        this.stop();\n        this._node.disconnect();\n        return this;\n    }\n    start(timeAt = 0) {\n        if (this._ctx.state === 'suspended')\n            this._ctx.resume();\n        if (this._type === \"file\") {\n            if (!!this._buffer) {\n                this._node.start(timeAt);\n                this._timestamp = this._ctx.currentTime + timeAt;\n            }\n            else {\n                this._source.play();\n                if (timeAt > 0)\n                    this._source.currentTime = timeAt;\n            }\n        }\n        else if (this._type === \"gen\") {\n            this._gen(this._node.type, this._node.frequency.value);\n            this._node.start();\n            if (this.analyzer)\n                this._node.connect(this.analyzer.node);\n        }\n        (this._outputNode || this._node).connect(this._ctx.destination);\n        this._playing = true;\n        return this;\n    }\n    stop() {\n        if (this._playing)\n            (this._outputNode || this._node).disconnect(this._ctx.destination);\n        if (this._type === \"file\") {\n            if (!!this._buffer) {\n                if (this.progress < 1)\n                    this._node.stop();\n            }\n            else {\n                this._source.pause();\n            }\n        }\n        else if (this._type === \"gen\") {\n            this._node.stop();\n        }\n        else if (this._type === \"input\") {\n            this._stream.getAudioTracks().forEach(track => track.stop());\n        }\n        this._playing = false;\n        return this;\n    }\n    toggle() {\n        if (this._playing) {\n            this.stop();\n        }\n        else {\n            this.start();\n        }\n        return this;\n    }\n}\nexports.Sound = Sound;\n\n\n/***/ }),\n\n/***/ \"./src/Pt.ts\":\n/*!*******************!*\\\n  !*** ./src/Pt.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bound = exports.Group = exports.Pt = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nclass Pt extends Float32Array {\n    constructor(...args) {\n        if (args.length === 1 && typeof args[0] == \"number\") {\n            super(args[0]);\n        }\n        else {\n            super((args.length > 0) ? Util_1.Util.getArgs(args) : [0, 0]);\n        }\n    }\n    static make(dimensions, defaultValue = 0, randomize = false) {\n        let p = new Float32Array(dimensions);\n        if (defaultValue)\n            p.fill(defaultValue);\n        if (randomize) {\n            for (let i = 0, len = p.length; i < len; i++) {\n                p[i] = p[i] * Num_1.Num.random();\n            }\n        }\n        return new Pt(p);\n    }\n    get id() { return this._id; }\n    set id(s) { this._id = s; }\n    get x() { return this[0]; }\n    set x(n) { this[0] = n; }\n    get y() { return this[1]; }\n    set y(n) { this[1] = n; }\n    get z() { return this[2]; }\n    set z(n) { this[2] = n; }\n    get w() { return this[3]; }\n    set w(n) { this[3] = n; }\n    clone() {\n        return new Pt(this);\n    }\n    equals(p, threshold = 0.000001) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            if (Math.abs(this[i] - p[i]) > threshold)\n                return false;\n        }\n        return true;\n    }\n    to(...args) {\n        let p = Util_1.Util.getArgs(args);\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            this[i] = p[i];\n        }\n        return this;\n    }\n    $to(...args) {\n        return this.clone().to(...args);\n    }\n    toAngle(radian, magnitude, anchorFromPt = false) {\n        let m = (magnitude != undefined) ? magnitude : this.magnitude();\n        let change = [Math.cos(radian) * m, Math.sin(radian) * m];\n        return (anchorFromPt) ? this.add(change) : this.to(change);\n    }\n    op(fn) {\n        let self = this;\n        return (...params) => {\n            return fn(self, ...params);\n        };\n    }\n    ops(fns) {\n        let _ops = [];\n        for (let i = 0, len = fns.length; i < len; i++) {\n            _ops.push(this.op(fns[i]));\n        }\n        return _ops;\n    }\n    $take(axis) {\n        let p = [];\n        for (let i = 0, len = axis.length; i < len; i++) {\n            p.push(this[axis[i]] || 0);\n        }\n        return new Pt(p);\n    }\n    $concat(...args) {\n        return new Pt(this.toArray().concat(Util_1.Util.getArgs(args)));\n    }\n    add(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? LinearAlgebra_1.Vec.add(this, args[0]) : LinearAlgebra_1.Vec.add(this, Util_1.Util.getArgs(args));\n        return this;\n    }\n    $add(...args) { return this.clone().add(...args); }\n    subtract(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? LinearAlgebra_1.Vec.subtract(this, args[0]) : LinearAlgebra_1.Vec.subtract(this, Util_1.Util.getArgs(args));\n        return this;\n    }\n    $subtract(...args) { return this.clone().subtract(...args); }\n    multiply(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? LinearAlgebra_1.Vec.multiply(this, args[0]) : LinearAlgebra_1.Vec.multiply(this, Util_1.Util.getArgs(args));\n        return this;\n    }\n    $multiply(...args) { return this.clone().multiply(...args); }\n    divide(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? LinearAlgebra_1.Vec.divide(this, args[0]) : LinearAlgebra_1.Vec.divide(this, Util_1.Util.getArgs(args));\n        return this;\n    }\n    $divide(...args) { return this.clone().divide(...args); }\n    magnitudeSq() { return LinearAlgebra_1.Vec.dot(this, this); }\n    magnitude() { return LinearAlgebra_1.Vec.magnitude(this); }\n    unit(magnitude = undefined) {\n        LinearAlgebra_1.Vec.unit(this, magnitude);\n        return this;\n    }\n    $unit(magnitude = undefined) { return this.clone().unit(magnitude); }\n    dot(...args) { return LinearAlgebra_1.Vec.dot(this, Util_1.Util.getArgs(args)); }\n    $cross2D(...args) { return LinearAlgebra_1.Vec.cross2D(this, Util_1.Util.getArgs(args)); }\n    $cross(...args) { return LinearAlgebra_1.Vec.cross(this, Util_1.Util.getArgs(args)); }\n    $project(...args) {\n        return this.$multiply(this.dot(...args) / this.magnitudeSq());\n    }\n    projectScalar(...args) {\n        return this.dot(...args) / this.magnitude();\n    }\n    abs() {\n        LinearAlgebra_1.Vec.abs(this);\n        return this;\n    }\n    $abs() {\n        return this.clone().abs();\n    }\n    floor() {\n        LinearAlgebra_1.Vec.floor(this);\n        return this;\n    }\n    $floor() {\n        return this.clone().floor();\n    }\n    ceil() {\n        LinearAlgebra_1.Vec.ceil(this);\n        return this;\n    }\n    $ceil() {\n        return this.clone().ceil();\n    }\n    round() {\n        LinearAlgebra_1.Vec.round(this);\n        return this;\n    }\n    $round() {\n        return this.clone().round();\n    }\n    minValue() {\n        return LinearAlgebra_1.Vec.min(this);\n    }\n    maxValue() {\n        return LinearAlgebra_1.Vec.max(this);\n    }\n    $min(...args) {\n        let p = Util_1.Util.getArgs(args);\n        let m = this.clone();\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            m[i] = Math.min(this[i], p[i]);\n        }\n        return m;\n    }\n    $max(...args) {\n        let p = Util_1.Util.getArgs(args);\n        let m = this.clone();\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            m[i] = Math.max(this[i], p[i]);\n        }\n        return m;\n    }\n    angle(axis = Util_1.Const.xy) {\n        return Math.atan2(this[axis[1]], this[axis[0]]);\n    }\n    angleBetween(p, axis = Util_1.Const.xy) {\n        return Num_1.Geom.boundRadian(this.angle(axis)) - Num_1.Geom.boundRadian(p.angle(axis));\n    }\n    scale(scale, anchor) {\n        Num_1.Geom.scale(this, scale, anchor || Pt.make(this.length, 0));\n        return this;\n    }\n    rotate2D(angle, anchor, axis) {\n        Num_1.Geom.rotate2D(this, angle, anchor || Pt.make(this.length, 0), axis);\n        return this;\n    }\n    shear2D(scale, anchor, axis) {\n        Num_1.Geom.shear2D(this, scale, anchor || Pt.make(this.length, 0), axis);\n        return this;\n    }\n    reflect2D(line, axis) {\n        Num_1.Geom.reflect2D(this, line, axis);\n        return this;\n    }\n    toString() {\n        return `Pt(${this.join(\", \")})`;\n    }\n    toArray() {\n        return [].slice.call(this);\n    }\n    toGroup() {\n        return new Group(Pt.make(this.length), this.clone());\n    }\n    toBound() {\n        return new Bound(Pt.make(this.length), this.clone());\n    }\n}\nexports.Pt = Pt;\nclass Group extends Array {\n    constructor(...args) {\n        super(...args);\n    }\n    get id() { return this._id; }\n    set id(s) { this._id = s; }\n    get p1() { return this[0]; }\n    get p2() { return this[1]; }\n    get p3() { return this[2]; }\n    get p4() { return this[3]; }\n    get q1() { return this[this.length - 1]; }\n    get q2() { return this[this.length - 2]; }\n    get q3() { return this[this.length - 3]; }\n    get q4() { return this[this.length - 4]; }\n    clone() {\n        let group = new Group();\n        for (let i = 0, len = this.length; i < len; i++) {\n            group.push(this[i].clone());\n        }\n        return group;\n    }\n    static fromArray(list) {\n        let g = new Group();\n        for (let li of list) {\n            let p = (li instanceof Pt) ? li : new Pt(li);\n            g.push(p);\n        }\n        return g;\n    }\n    static fromPtArray(list) {\n        return Group.from(list);\n    }\n    split(chunkSize, stride, loopBack = false) {\n        let sp = Util_1.Util.split(this, chunkSize, stride, loopBack);\n        return sp;\n    }\n    insert(pts, index = 0) {\n        Group.prototype.splice.apply(this, [index, 0, ...pts]);\n        return this;\n    }\n    remove(index = 0, count = 1) {\n        let param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        return Group.prototype.splice.apply(this, param);\n    }\n    segments(pts_per_segment = 2, stride = 1, loopBack = false) {\n        return this.split(pts_per_segment, stride, loopBack);\n    }\n    lines() { return this.segments(2, 1); }\n    centroid() {\n        return Num_1.Geom.centroid(this);\n    }\n    boundingBox() {\n        return Num_1.Geom.boundingBox(this);\n    }\n    anchorTo(ptOrIndex = 0) { Num_1.Geom.anchor(this, ptOrIndex, \"to\"); }\n    anchorFrom(ptOrIndex = 0) { Num_1.Geom.anchor(this, ptOrIndex, \"from\"); }\n    op(fn) {\n        let self = this;\n        return (...params) => {\n            return fn(self, ...params);\n        };\n    }\n    ops(fns) {\n        let _ops = [];\n        for (let i = 0, len = fns.length; i < len; i++) {\n            _ops.push(this.op(fns[i]));\n        }\n        return _ops;\n    }\n    interpolate(t) {\n        t = Num_1.Num.clamp(t, 0, 1);\n        let chunk = this.length - 1;\n        let tc = 1 / (this.length - 1);\n        let idx = Math.floor(t / tc);\n        return Num_1.Geom.interpolate(this[idx], this[Math.min(this.length - 1, idx + 1)], (t - idx * tc) * chunk);\n    }\n    moveBy(...args) {\n        return this.add(...args);\n    }\n    moveTo(...args) {\n        let d = new Pt(Util_1.Util.getArgs(args)).subtract(this[0]);\n        this.moveBy(d);\n        return this;\n    }\n    scale(scale, anchor) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Num_1.Geom.scale(this[i], scale, anchor || this[0]);\n        }\n        return this;\n    }\n    rotate2D(angle, anchor, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Num_1.Geom.rotate2D(this[i], angle, anchor || this[0], axis);\n        }\n        return this;\n    }\n    shear2D(scale, anchor, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Num_1.Geom.shear2D(this[i], scale, anchor || this[0], axis);\n        }\n        return this;\n    }\n    reflect2D(line, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Num_1.Geom.reflect2D(this[i], line, axis);\n        }\n        return this;\n    }\n    sortByDimension(dim, desc = false) {\n        return this.sort((a, b) => (desc) ? b[dim] - a[dim] : a[dim] - b[dim]);\n    }\n    forEachPt(ptFn, ...args) {\n        if (!this[0][ptFn]) {\n            Util_1.Util.warn(`${ptFn} is not a function of Pt`);\n            return this;\n        }\n        for (let i = 0, len = this.length; i < len; i++) {\n            this[i] = this[i][ptFn](...args);\n        }\n        return this;\n    }\n    add(...args) {\n        return this.forEachPt(\"add\", ...args);\n    }\n    subtract(...args) {\n        return this.forEachPt(\"subtract\", ...args);\n    }\n    multiply(...args) {\n        return this.forEachPt(\"multiply\", ...args);\n    }\n    divide(...args) {\n        return this.forEachPt(\"divide\", ...args);\n    }\n    $matrixAdd(g) {\n        return LinearAlgebra_1.Mat.add(this, g);\n    }\n    $matrixMultiply(g, transposed = false, elementwise = false) {\n        return LinearAlgebra_1.Mat.multiply(this, g, transposed, elementwise);\n    }\n    zipSlice(index, defaultValue = false) {\n        return LinearAlgebra_1.Mat.zipSlice(this, index, defaultValue);\n    }\n    $zip(defaultValue = undefined, useLongest = false) {\n        return LinearAlgebra_1.Mat.zip(this, defaultValue, useLongest);\n    }\n    toBound() {\n        return Bound.fromGroup(this);\n    }\n    toString() {\n        return \"Group[ \" + this.reduce((p, c) => p + c.toString() + \" \", \"\") + \" ]\";\n    }\n}\nexports.Group = Group;\nclass Bound extends Group {\n    constructor(...args) {\n        super(...args);\n        this._center = new Pt();\n        this._size = new Pt();\n        this._topLeft = new Pt();\n        this._bottomRight = new Pt();\n        this._inited = false;\n        this.init();\n    }\n    static fromBoundingRect(rect) {\n        let b = new Bound(new Pt(rect.left || 0, rect.top || 0), new Pt(rect.right || 0, rect.bottom || 0));\n        if (rect.width && rect.height)\n            b.size = new Pt(rect.width, rect.height);\n        return b;\n    }\n    static fromGroup(g) {\n        let _g = Util_1.Util.iterToArray(g);\n        if (_g.length < 2)\n            throw new Error(\"Cannot create a Bound from a group that has less than 2 Pt\");\n        return new Bound(_g[0], _g[_g.length - 1]);\n    }\n    init() {\n        if (this.p1) {\n            this._size = this.p1.clone();\n            this._inited = true;\n        }\n        if (this.p1 && this.p2) {\n            let a = this.p1;\n            let b = this.p2;\n            this.topLeft = a.$min(b);\n            this._bottomRight = a.$max(b);\n            this._updateSize();\n            this._inited = true;\n        }\n    }\n    clone() {\n        return new Bound(this._topLeft.clone(), this._bottomRight.clone());\n    }\n    _updateSize() {\n        this._size = this._bottomRight.$subtract(this._topLeft).abs();\n        this._updateCenter();\n    }\n    _updateCenter() {\n        this._center = this._size.$multiply(0.5).add(this._topLeft);\n    }\n    _updatePosFromTop() {\n        this._bottomRight = this._topLeft.$add(this._size);\n        this._updateCenter();\n    }\n    _updatePosFromBottom() {\n        this._topLeft = this._bottomRight.$subtract(this._size);\n        this._updateCenter();\n    }\n    _updatePosFromCenter() {\n        let half = this._size.$multiply(0.5);\n        this._topLeft = this._center.$subtract(half);\n        this._bottomRight = this._center.$add(half);\n    }\n    get size() { return new Pt(this._size); }\n    set size(p) {\n        this._size = new Pt(p);\n        this._updatePosFromTop();\n    }\n    get center() { return new Pt(this._center); }\n    set center(p) {\n        this._center = new Pt(p);\n        this._updatePosFromCenter();\n    }\n    get topLeft() { return new Pt(this._topLeft); }\n    set topLeft(p) {\n        this._topLeft = new Pt(p);\n        this[0] = this._topLeft;\n        this._updateSize();\n    }\n    get bottomRight() { return new Pt(this._bottomRight); }\n    set bottomRight(p) {\n        this._bottomRight = new Pt(p);\n        this[1] = this._bottomRight;\n        this._updateSize();\n    }\n    get width() { return (this._size.length > 0) ? this._size.x : 0; }\n    set width(w) {\n        this._size.x = w;\n        this._updatePosFromTop();\n    }\n    get height() { return (this._size.length > 1) ? this._size.y : 0; }\n    set height(h) {\n        this._size.y = h;\n        this._updatePosFromTop();\n    }\n    get depth() { return (this._size.length > 2) ? this._size.z : 0; }\n    set depth(d) {\n        this._size.z = d;\n        this._updatePosFromTop();\n    }\n    get x() { return this.topLeft.x; }\n    get y() { return this.topLeft.y; }\n    get z() { return this.topLeft.z; }\n    get inited() { return this._inited; }\n    update() {\n        this._topLeft = this[0];\n        this._bottomRight = this[1];\n        this._updateSize();\n        return this;\n    }\n}\nexports.Bound = Bound;\n\n\n/***/ }),\n\n/***/ \"./src/Space.ts\":\n/*!**********************!*\\\n  !*** ./src/Space.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiTouchSpace = exports.Space = void 0;\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst UI_1 = __webpack_require__(/*! ./UI */ \"./src/UI.ts\");\nclass Space {\n    constructor() {\n        this.id = \"space\";\n        this.bound = new Pt_1.Bound();\n        this._time = { prev: 0, diff: 0, end: -1, min: 0 };\n        this.players = {};\n        this.playerCount = 0;\n        this._animID = -1;\n        this._pause = false;\n        this._refresh = undefined;\n        this._pointer = new Pt_1.Pt();\n        this._isReady = false;\n        this._playing = false;\n    }\n    refresh(b) {\n        this._refresh = b;\n        return this;\n    }\n    minFrameTime(ms = 0) {\n        this._time.min = ms;\n    }\n    add(p) {\n        let player = (typeof p == \"function\") ? { animate: p } : p;\n        let k = this.playerCount++;\n        let pid = this.id + k;\n        this.players[pid] = player;\n        player.animateID = pid;\n        if (player.resize && this.bound.inited)\n            player.resize(this.bound);\n        if (this._refresh === undefined)\n            this._refresh = true;\n        return this;\n    }\n    remove(player) {\n        delete this.players[player.animateID];\n        return this;\n    }\n    removeAll() {\n        this.players = {};\n        return this;\n    }\n    play(time = 0) {\n        if (time === 0 && this._animID !== -1) {\n            return;\n        }\n        this._animID = requestAnimationFrame(this.play.bind(this));\n        if (this._pause)\n            return this;\n        this._time.diff = time - this._time.prev;\n        if (this._time.diff < this._time.min)\n            return this;\n        this._time.prev = time;\n        try {\n            this.playItems(time);\n        }\n        catch (err) {\n            cancelAnimationFrame(this._animID);\n            this._animID = -1;\n            this._playing = false;\n            throw err;\n        }\n        return this;\n    }\n    replay() {\n        this._time.end = -1;\n        this.play();\n    }\n    playItems(time) {\n        this._playing = true;\n        if (this._refresh)\n            this.clear();\n        if (this._isReady) {\n            for (let k in this.players) {\n                if (this.players[k].animate)\n                    this.players[k].animate(time, this._time.diff, this);\n            }\n        }\n        if (this._time.end >= 0 && time > this._time.end) {\n            cancelAnimationFrame(this._animID);\n            this._animID = -1;\n            this._playing = false;\n        }\n    }\n    pause(toggle = false) {\n        this._pause = (toggle) ? !this._pause : true;\n        return this;\n    }\n    resume() {\n        this._pause = false;\n        return this;\n    }\n    stop(t = 0) {\n        this._time.end = t;\n        return this;\n    }\n    playOnce(duration = 0) {\n        this.play();\n        this.stop(duration);\n        return this;\n    }\n    render(context) {\n        if (this._renderFunc)\n            this._renderFunc(context, this);\n        return this;\n    }\n    set customRendering(f) { this._renderFunc = f; }\n    get customRendering() { return this._renderFunc; }\n    get isPlaying() { return this._playing; }\n    get outerBound() { return this.bound.clone(); }\n    get innerBound() { return new Pt_1.Bound(Pt_1.Pt.make(this.size.length, 0), this.size.clone()); }\n    get size() { return this.bound.size.clone(); }\n    get center() { return this.size.divide(2); }\n    get width() { return this.bound.width; }\n    get height() { return this.bound.height; }\n}\nexports.Space = Space;\nclass MultiTouchSpace extends Space {\n    constructor() {\n        super(...arguments);\n        this._pressed = false;\n        this._dragged = false;\n        this._hasMouse = false;\n        this._hasTouch = false;\n        this._hasKeyboard = false;\n    }\n    get pointer() {\n        let p = this._pointer.clone();\n        p.id = this._pointer.id;\n        return p;\n    }\n    bindCanvas(evt, callback, options = {}, customTarget) {\n        const target = customTarget ? customTarget : this._canvas;\n        target.addEventListener(evt, callback, options);\n    }\n    unbindCanvas(evt, callback, options = {}, customTarget) {\n        const target = customTarget ? customTarget : this._canvas;\n        target.removeEventListener(evt, callback, options);\n    }\n    bindDoc(evt, callback, options = {}) {\n        if (document) {\n            document.addEventListener(evt, callback, options);\n        }\n    }\n    unbindDoc(evt, callback, options = {}) {\n        if (document) {\n            document.removeEventListener(evt, callback, options);\n        }\n    }\n    bindMouse(bind = true, customTarget) {\n        if (bind) {\n            this._mouseDown = this._mouseDown.bind(this);\n            this._mouseUp = this._mouseUp.bind(this);\n            this._mouseOver = this._mouseOver.bind(this);\n            this._mouseOut = this._mouseOut.bind(this);\n            this._mouseMove = this._mouseMove.bind(this);\n            this._mouseClick = this._mouseClick.bind(this);\n            this._contextMenu = this._contextMenu.bind(this);\n            this.bindCanvas(\"mousedown\", this._mouseDown, {}, customTarget);\n            this.bindCanvas(\"mouseup\", this._mouseUp, {}, customTarget);\n            this.bindCanvas(\"mouseover\", this._mouseOver, {}, customTarget);\n            this.bindCanvas(\"mouseout\", this._mouseOut, {}, customTarget);\n            this.bindCanvas(\"mousemove\", this._mouseMove, {}, customTarget);\n            this.bindCanvas(\"click\", this._mouseClick, {}, customTarget);\n            this.bindCanvas(\"contextmenu\", this._contextMenu, {}, customTarget);\n            this._hasMouse = true;\n        }\n        else {\n            this.unbindCanvas(\"mousedown\", this._mouseDown, {}, customTarget);\n            this.unbindCanvas(\"mouseup\", this._mouseUp, {}, customTarget);\n            this.unbindCanvas(\"mouseover\", this._mouseOver, {}, customTarget);\n            this.unbindCanvas(\"mouseout\", this._mouseOut, {}, customTarget);\n            this.unbindCanvas(\"mousemove\", this._mouseMove, {}, customTarget);\n            this.unbindCanvas(\"click\", this._mouseClick, {}, customTarget);\n            this.unbindCanvas(\"contextmenu\", this._contextMenu, {}, customTarget);\n            this._hasMouse = false;\n        }\n        return this;\n    }\n    bindTouch(bind = true, passive = false, customTarget) {\n        if (bind) {\n            this.bindCanvas(\"touchstart\", this._touchStart.bind(this), { passive: passive }, customTarget);\n            this.bindCanvas(\"touchend\", this._mouseUp.bind(this), {}, customTarget);\n            this.bindCanvas(\"touchmove\", this._touchMove.bind(this), { passive: passive }, customTarget);\n            this.bindCanvas(\"touchcancel\", this._mouseOut.bind(this), {}, customTarget);\n            this._hasTouch = true;\n        }\n        else {\n            this.unbindCanvas(\"touchstart\", this._touchStart.bind(this), { passive: passive }, customTarget);\n            this.unbindCanvas(\"touchend\", this._mouseUp.bind(this), {}, customTarget);\n            this.unbindCanvas(\"touchmove\", this._touchMove.bind(this), { passive: passive }, customTarget);\n            this.unbindCanvas(\"touchcancel\", this._mouseOut.bind(this), {}, customTarget);\n            this._hasTouch = false;\n        }\n        return this;\n    }\n    bindKeyboard(bind = true) {\n        if (bind) {\n            this._keyDownBind = this._keyDown.bind(this);\n            this._keyUpBind = this._keyUp.bind(this);\n            this.bindDoc(\"keydown\", this._keyDownBind, {});\n            this.bindDoc(\"keyup\", this._keyUpBind, {});\n            this._hasKeyboard = true;\n        }\n        else {\n            this.unbindDoc(\"keydown\", this._keyDownBind, {});\n            this.unbindDoc(\"keyup\", this._keyUpBind, {});\n            this._hasKeyboard = false;\n        }\n        return this;\n    }\n    touchesToPoints(evt, which = \"touches\") {\n        if (!evt || !evt[which])\n            return [];\n        let ts = [];\n        for (var i = 0; i < evt[which].length; i++) {\n            let t = evt[which].item(i);\n            ts.push(new Pt_1.Pt(t.pageX - this.bound.topLeft.x, t.pageY - this.bound.topLeft.y));\n        }\n        return ts;\n    }\n    _mouseAction(type, evt) {\n        if (!this.isPlaying)\n            return;\n        let px = 0, py = 0;\n        if (evt instanceof MouseEvent) {\n            for (let k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    let v = this.players[k];\n                    px = evt.pageX - this.outerBound.x;\n                    py = evt.pageY - this.outerBound.y;\n                    if (v.action)\n                        v.action(type, px, py, evt);\n                }\n            }\n        }\n        else {\n            for (let k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    let v = this.players[k];\n                    let c = evt.changedTouches && evt.changedTouches.length > 0;\n                    let touch = evt.changedTouches.item(0);\n                    px = (c) ? touch.pageX - this.outerBound.x : 0;\n                    py = (c) ? touch.pageY - this.outerBound.y : 0;\n                    if (v.action)\n                        v.action(type, px, py, evt);\n                }\n            }\n        }\n        if (type) {\n            this._pointer.to(px, py);\n            this._pointer.id = type;\n        }\n    }\n    _mouseDown(evt) {\n        this._mouseAction(UI_1.UIPointerActions.down, evt);\n        this._pressed = true;\n        return false;\n    }\n    _mouseUp(evt) {\n        if (this._dragged) {\n            this._mouseAction(UI_1.UIPointerActions.drop, evt);\n        }\n        else {\n            this._mouseAction(UI_1.UIPointerActions.up, evt);\n        }\n        this._pressed = false;\n        this._dragged = false;\n        return false;\n    }\n    _mouseMove(evt) {\n        this._mouseAction(UI_1.UIPointerActions.move, evt);\n        if (this._pressed) {\n            this._dragged = true;\n            this._mouseAction(UI_1.UIPointerActions.drag, evt);\n        }\n        return false;\n    }\n    _mouseOver(evt) {\n        this._mouseAction(UI_1.UIPointerActions.over, evt);\n        return false;\n    }\n    _mouseOut(evt) {\n        this._mouseAction(UI_1.UIPointerActions.out, evt);\n        if (this._dragged)\n            this._mouseAction(UI_1.UIPointerActions.drop, evt);\n        this._dragged = false;\n        return false;\n    }\n    _mouseClick(evt) {\n        this._mouseAction(UI_1.UIPointerActions.click, evt);\n        this._pressed = false;\n        this._dragged = false;\n        return false;\n    }\n    _contextMenu(evt) {\n        this._mouseAction(UI_1.UIPointerActions.contextmenu, evt);\n        return false;\n    }\n    _touchMove(evt) {\n        this._mouseMove(evt);\n        evt.preventDefault();\n        return false;\n    }\n    _touchStart(evt) {\n        this._mouseDown(evt);\n        evt.preventDefault();\n        return false;\n    }\n    _keyDown(evt) {\n        this._keyboardAction(UI_1.UIPointerActions.keydown, evt);\n        return false;\n    }\n    _keyUp(evt) {\n        this._keyboardAction(UI_1.UIPointerActions.keyup, evt);\n        return false;\n    }\n    _keyboardAction(type, evt) {\n        if (!this.isPlaying)\n            return;\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let v = this.players[k];\n                if (v.action)\n                    v.action(type, evt.shiftKey ? 1 : 0, evt.altKey ? 1 : 0, evt);\n            }\n        }\n    }\n}\nexports.MultiTouchSpace = MultiTouchSpace;\n\n\n/***/ }),\n\n/***/ \"./src/Svg.ts\":\n/*!********************!*\\\n  !*** ./src/Svg.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SVGForm = exports.SVGSpace = void 0;\nconst Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nconst Dom_1 = __webpack_require__(/*! ./Dom */ \"./src/Dom.ts\");\nclass SVGSpace extends Dom_1.DOMSpace {\n    constructor(elem, callback) {\n        super(elem, callback);\n        this._bgcolor = \"#999\";\n        if (this._canvas.nodeName.toLowerCase() != \"svg\") {\n            let s = SVGSpace.svgElement(this._canvas, \"svg\", `${this.id}_svg`);\n            this._container = this._canvas;\n            this._canvas = s;\n        }\n    }\n    getForm() { return new SVGForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    resize(b, evt) {\n        super.resize(b, evt);\n        SVGSpace.setAttr(this.element, {\n            \"viewBox\": `0 0 ${this.bound.width} ${this.bound.height}`,\n            \"width\": `${this.bound.width}`,\n            \"height\": `${this.bound.height}`,\n            \"xmlns\": \"http://www.w3.org/2000/svg\",\n            \"version\": \"1.1\"\n        });\n        return this;\n    }\n    static svgElement(parent, name, id) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElementNS(\"http://www.w3.org/2000/svg\", name);\n            elem.setAttribute(\"id\", id);\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + SVGForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexports.SVGSpace = SVGSpace;\nclass SVGForm extends Form_1.VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            \"filled\": true,\n            \"stroked\": true,\n            \"fill\": \"#f03\",\n            \"stroke\": \"#fff\",\n            \"stroke-width\": 1,\n            \"stroke-linejoin\": \"bevel\",\n            \"stroke-linecap\": \"sqaure\",\n            \"opacity\": 1\n        };\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {},\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_svg_\" + (SVGForm.groupID++);\n                this._ctx.style = Object.assign({}, this._style);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v) {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = v;\n    }\n    alpha(a) {\n        this.styleTo(\"opacity\", a);\n        return this;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"fill\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"stroke\", c);\n            if (width)\n                this.styleTo(\"stroke-width\", width);\n            if (linejoin)\n                this.styleTo(\"stroke-linejoin\", linejoin);\n            if (linecap)\n                this.styleTo(\"stroke-linecap\", linecap);\n        }\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    reset() {\n        this._ctx.style = Object.assign({}, this._style);\n        this._font = new Form_1.Font(10, \"sans-serif\");\n        this._ctx.style['font'] = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(SVGForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${SVGForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"fill: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"stroke: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('fill') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('stroke') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return Dom_1.DOMSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return SVGForm.circle(ctx, pt, radius);\n        }\n        else {\n            return SVGForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        SVGForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = SVGSpace.svgElement(ctx.group, \"circle\", SVGForm.getID(ctx));\n        Dom_1.DOMSpace.setAttr(elem, {\n            cx: pt[0],\n            cy: pt[1],\n            r: radius,\n            'class': `pts-svgform pts-circle ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        let p = Util_1.Util.iterToArray(pts);\n        SVGForm.circle(this._ctx, p[0], p[1][0]);\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        let elem = SVGSpace.svgElement(ctx.group, \"path\", SVGForm.getID(ctx));\n        const start = new Pt_1.Pt(pt).toAngle(startAngle, radius, true);\n        const end = new Pt_1.Pt(pt).toAngle(endAngle, radius, true);\n        const diff = Num_1.Geom.boundAngle(endAngle) - Num_1.Geom.boundAngle(startAngle);\n        let largeArc = (diff > Util_1.Const.pi) ? true : false;\n        if (cc)\n            largeArc = !largeArc;\n        const sweep = (cc) ? \"0\" : \"1\";\n        const d = `M ${start[0]} ${start[1]} A ${radius} ${radius} 0 ${largeArc ? \"1\" : \"0\"} ${sweep} ${end[0]} ${end[1]}`;\n        Dom_1.DOMSpace.setAttr(elem, {\n            d: d,\n            'class': `pts-svgform pts-arc ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        this.nextID();\n        SVGForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        Dom_1.DOMSpace.setAttr(elem, {\n            x: pt[0] - halfsize,\n            y: pt[1] - halfsize,\n            width: halfsize * 2,\n            height: halfsize * 2,\n            'class': `pts-svgform pts-square ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        SVGForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static line(ctx, pts) {\n        let points = SVGForm.pointsString(pts);\n        if (points.count < 2)\n            return;\n        if (points.count > 2)\n            return SVGForm._poly(ctx, points.string, false);\n        let elem = SVGSpace.svgElement(ctx.group, \"line\", SVGForm.getID(ctx));\n        let p = Util_1.Util.iterToArray(pts);\n        Dom_1.DOMSpace.setAttr(elem, {\n            x1: p[0][0],\n            y1: p[0][1],\n            x2: p[1][0],\n            y2: p[1][1],\n            'class': `pts-svgform pts-line ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    line(pts) {\n        this.nextID();\n        SVGForm.line(this._ctx, pts);\n        return this;\n    }\n    static _poly(ctx, points, closePath = true) {\n        let elem = SVGSpace.svgElement(ctx.group, ((closePath) ? \"polygon\" : \"polyline\"), SVGForm.getID(ctx));\n        Dom_1.DOMSpace.setAttr(elem, {\n            points: points,\n            'class': `pts-svgform pts-polygon ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    static pointsString(pts) {\n        let points = \"\";\n        let count = 0;\n        for (let p of pts) {\n            points += `${p[0]},${p[1]} `;\n            count++;\n        }\n        return { string: points, count: count };\n    }\n    static polygon(ctx, pts) {\n        let points = SVGForm.pointsString(pts);\n        return SVGForm._poly(ctx, points.string, true);\n    }\n    polygon(pts) {\n        this.nextID();\n        SVGForm.polygon(this._ctx, pts);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!Util_1.Util.arrayCheck(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        let bound = Pt_1.Group.fromArray(pts).boundingBox();\n        let size = Op_1.Rectangle.size(bound);\n        Dom_1.DOMSpace.setAttr(elem, {\n            x: bound[0][0],\n            y: bound[0][1],\n            width: size[0],\n            height: size[1],\n            'class': `pts-svgform pts-rect ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        SVGForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = SVGSpace.svgElement(ctx.group, \"text\", SVGForm.getID(ctx));\n        Dom_1.DOMSpace.setAttr(elem, {\n            \"pointer-events\": \"none\",\n            x: pt[0],\n            y: pt[1],\n            dx: 0, dy: 0,\n            'class': `pts-svgform pts-text ${ctx.currentClass}`,\n        });\n        elem.textContent = txt;\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        SVGForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n}\nexports.SVGForm = SVGForm;\nSVGForm.groupID = 0;\nSVGForm.domID = 0;\n\n\n/***/ }),\n\n/***/ \"./src/Typography.ts\":\n/*!***************************!*\\\n  !*** ./src/Typography.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Typography = void 0;\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nclass Typography {\n    static textWidthEstimator(fn, samples = [\"M\", \"n\", \".\"], distribution = [0.06, 0.8, 0.14]) {\n        let m = samples.map(fn);\n        let avg = new Pt_1.Pt(distribution).dot(m);\n        return (str) => str.length * avg;\n    }\n    static truncate(fn, str, width, tail = \"\") {\n        let trim = Math.floor(str.length * Math.min(1, width / fn(str)));\n        if (trim < str.length) {\n            trim = Math.max(0, trim - tail.length);\n            return [str.substr(0, trim) + tail, trim];\n        }\n        else {\n            return [str, str.length];\n        }\n    }\n    static fontSizeToBox(box, ratio = 1, byHeight = true) {\n        let bound = Pt_1.Bound.fromGroup(box);\n        let h = byHeight ? bound.height : bound.width;\n        let f = ratio * h;\n        return function (box2) {\n            let bound2 = Pt_1.Bound.fromGroup(box2);\n            let nh = (byHeight ? bound2.height : bound2.width) / h;\n            return f * nh;\n        };\n    }\n    static fontSizeToThreshold(threshold, direction = 0) {\n        return function (defaultSize, val) {\n            let d = defaultSize * val / threshold;\n            if (direction < 0)\n                return Math.min(d, defaultSize);\n            if (direction > 0)\n                return Math.max(d, defaultSize);\n            return d;\n        };\n    }\n}\nexports.Typography = Typography;\n\n\n/***/ }),\n\n/***/ \"./src/UI.ts\":\n/*!*******************!*\\\n  !*** ./src/UI.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UIDragger = exports.UIButton = exports.UI = exports.UIPointerActions = exports.UIShape = void 0;\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nconst Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nexports.UIShape = {\n    rectangle: \"rectangle\", circle: \"circle\", polygon: \"polygon\", polyline: \"polyline\", line: \"line\"\n};\nexports.UIPointerActions = {\n    up: \"up\", down: \"down\", move: \"move\",\n    drag: \"drag\", uidrag: \"uidrag\", drop: \"drop\", uidrop: \"uidrop\",\n    over: \"over\", out: \"out\", enter: \"enter\", leave: \"leave\", click: \"click\",\n    keydown: 'keydown', keyup: 'keyup',\n    contextmenu: \"contextmenu\", all: \"all\"\n};\nclass UI {\n    constructor(group, shape, states = {}, id) {\n        this._holds = new Map();\n        this._group = Pt_1.Group.fromArray(group);\n        this._shape = shape;\n        this._id = id === undefined ? `ui_${(UI._counter++)}` : id;\n        this._states = states;\n        this._actions = {};\n    }\n    static fromRectangle(group, states, id) {\n        return new this(group, exports.UIShape.rectangle, states, id);\n    }\n    static fromCircle(group, states, id) {\n        return new this(group, exports.UIShape.circle, states, id);\n    }\n    static fromPolygon(group, states, id) {\n        return new this(group, exports.UIShape.polygon, states, id);\n    }\n    static fromUI(ui, states, id) {\n        return new this(ui.group, ui.shape, states || ui._states, id);\n    }\n    get id() { return this._id; }\n    set id(d) { this._id = d; }\n    get group() { return this._group; }\n    set group(d) { this._group = d; }\n    get shape() { return this._shape; }\n    set shape(d) { this._shape = d; }\n    state(key, value) {\n        if (!key)\n            return null;\n        if (value !== undefined) {\n            this._states[key] = value;\n            return this;\n        }\n        return this._states[key];\n    }\n    on(type, fn) {\n        if (!this._actions[type])\n            this._actions[type] = [];\n        return UI._addHandler(this._actions[type], fn);\n    }\n    off(type, which) {\n        if (!this._actions[type])\n            return false;\n        if (which === undefined) {\n            delete this._actions[type];\n            return true;\n        }\n        else {\n            return UI._removeHandler(this._actions[type], which);\n        }\n    }\n    listen(type, p, evt) {\n        if (this._actions[type] !== undefined) {\n            if (this._within(p) || Array.from(this._holds.values()).indexOf(type) >= 0) {\n                UI._trigger(this._actions[type], this, p, type, evt);\n                return true;\n            }\n            else if (this._actions['all']) {\n                UI._trigger(this._actions['all'], this, p, type, evt);\n                return true;\n            }\n        }\n        return false;\n    }\n    hold(type) {\n        let newKey = Math.max(0, ...Array.from(this._holds.keys())) + 1;\n        this._holds.set(newKey, type);\n        return newKey;\n    }\n    unhold(key) {\n        if (key !== undefined) {\n            this._holds.delete(key);\n        }\n        else {\n            this._holds.clear();\n        }\n    }\n    static track(uis, type, p, evt) {\n        for (let i = 0, len = uis.length; i < len; i++) {\n            uis[i].listen(type, p, evt);\n        }\n    }\n    render(fn) {\n        fn(this._group, this._states);\n    }\n    toString() {\n        return `UI ${this.group.toString}`;\n    }\n    _within(p) {\n        let fn = null;\n        if (this._shape === exports.UIShape.rectangle) {\n            fn = Op_1.Rectangle.withinBound;\n        }\n        else if (this._shape === exports.UIShape.circle) {\n            fn = Op_1.Circle.withinBound;\n        }\n        else if (this._shape === exports.UIShape.polygon) {\n            fn = Op_1.Polygon.hasIntersectPoint;\n        }\n        else {\n            return false;\n        }\n        return fn(this._group, p);\n    }\n    static _trigger(fns, target, pt, type, evt) {\n        if (fns) {\n            for (let i = 0, len = fns.length; i < len; i++) {\n                if (fns[i])\n                    fns[i](target, pt, type, evt);\n            }\n        }\n    }\n    static _addHandler(fns, fn) {\n        if (fn) {\n            fns.push(fn);\n            return fns.length - 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    static _removeHandler(fns, index) {\n        if (index >= 0 && index < fns.length) {\n            let temp = fns.length;\n            fns.splice(index, 1);\n            return (temp > fns.length);\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.UI = UI;\nUI._counter = 0;\nclass UIButton extends UI {\n    constructor(group, shape, states = {}, id) {\n        super(group, shape, states, id);\n        this._hoverID = -1;\n        if (states.hover === undefined)\n            this._states['hover'] = false;\n        if (states.clicks === undefined)\n            this._states['clicks'] = 0;\n        const UA = exports.UIPointerActions;\n        this.on(UA.up, (target, pt, type, evt) => {\n            this.state('clicks', this._states.clicks + 1);\n        });\n        this.on(UA.move, (target, pt, type, evt) => {\n            let hover = this._within(pt);\n            if (hover && !this._states.hover) {\n                this.state('hover', true);\n                UI._trigger(this._actions[UA.enter], this, pt, UA.enter, evt);\n                var _capID = this.hold(UA.move);\n                this._hoverID = this.on(UA.move, (t, p) => {\n                    if (!this._within(p) && !this.state('dragging')) {\n                        this.state('hover', false);\n                        UI._trigger(this._actions[UA.leave], this, pt, UA.leave, evt);\n                        this.off(UA.move, this._hoverID);\n                        this.unhold(_capID);\n                    }\n                });\n            }\n        });\n    }\n    onClick(fn) {\n        return this.on(exports.UIPointerActions.up, fn);\n    }\n    offClick(id) {\n        return this.off(exports.UIPointerActions.up, id);\n    }\n    onContextMenu(fn) {\n        return this.on(exports.UIPointerActions.contextmenu, fn);\n    }\n    offContextMenu(id) {\n        return this.off(exports.UIPointerActions.contextmenu, id);\n    }\n    onHover(enter, leave) {\n        var ids = [undefined, undefined];\n        if (enter)\n            ids[0] = this.on(exports.UIPointerActions.enter, enter);\n        if (leave)\n            ids[1] = this.on(exports.UIPointerActions.leave, leave);\n        return ids;\n    }\n    offHover(enterID, leaveID) {\n        var s = [false, false];\n        if (enterID === undefined || enterID >= 0)\n            s[0] = this.off(exports.UIPointerActions.enter, enterID);\n        if (leaveID === undefined || leaveID >= 0)\n            s[1] = this.off(exports.UIPointerActions.leave, leaveID);\n        return s;\n    }\n}\nexports.UIButton = UIButton;\nclass UIDragger extends UIButton {\n    constructor(group, shape, states = {}, id) {\n        super(group, shape, states, id);\n        this._draggingID = -1;\n        this._moveHoldID = -1;\n        this._dropHoldID = -1;\n        this._upHoldID = -1;\n        if (states.dragging === undefined)\n            this._states['dragging'] = false;\n        if (states.moved === undefined)\n            this._states['moved'] = false;\n        if (states.offset === undefined)\n            this._states['offset'] = new Pt_1.Pt();\n        const UA = exports.UIPointerActions;\n        this.on(UA.down, (target, pt, type, evt) => {\n            if (this._moveHoldID === -1) {\n                this.state('dragging', true);\n                this.state('offset', new Pt_1.Pt(pt).subtract(target.group[0]));\n                this._moveHoldID = this.hold(UA.move);\n            }\n            if (this._dropHoldID === -1) {\n                this._dropHoldID = this.hold(UA.drop);\n            }\n            if (this._upHoldID === -1) {\n                this._upHoldID = this.hold(UA.up);\n            }\n            if (this._draggingID === -1) {\n                this._draggingID = this.on(UA.move, (t, p) => {\n                    if (this.state('dragging')) {\n                        UI._trigger(this._actions[UA.uidrag], t, p, UA.uidrag, evt);\n                        this.state('moved', true);\n                    }\n                });\n            }\n        });\n        const endDrag = (target, pt, type, evt) => {\n            this.state('dragging', false);\n            this.off(UA.move, this._draggingID);\n            this._draggingID = -1;\n            this.unhold(this._moveHoldID);\n            this._moveHoldID = -1;\n            this.unhold(this._dropHoldID);\n            this._dropHoldID = -1;\n            this.unhold(this._upHoldID);\n            this._upHoldID = -1;\n            if (this.state('moved')) {\n                UI._trigger(this._actions[UA.uidrop], target, pt, UA.uidrop, evt);\n                this.state('moved', false);\n            }\n        };\n        this.on(UA.drop, endDrag);\n        this.on(UA.up, endDrag);\n        this.on(UA.out, endDrag);\n    }\n    onDrag(fn) {\n        return this.on(exports.UIPointerActions.uidrag, fn);\n    }\n    offDrag(id) {\n        return this.off(exports.UIPointerActions.uidrag, id);\n    }\n    onDrop(fn) {\n        return this.on(exports.UIPointerActions.uidrop, fn);\n    }\n    offDrop(id) {\n        return this.off(exports.UIPointerActions.uidrop, id);\n    }\n}\nexports.UIDragger = UIDragger;\n\n\n/***/ }),\n\n/***/ \"./src/Util.ts\":\n/*!*********************!*\\\n  !*** ./src/Util.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.Const = void 0;\nconst Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nconst Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nexports.Const = {\n    xy: \"xy\",\n    yz: \"yz\",\n    xz: \"xz\",\n    xyz: \"xyz\",\n    horizontal: 0,\n    vertical: 1,\n    identical: 0,\n    right: 4,\n    bottom_right: 5,\n    bottom: 6,\n    bottom_left: 7,\n    left: 8,\n    top_left: 1,\n    top: 2,\n    top_right: 3,\n    epsilon: 0.0001,\n    max: Number.MAX_VALUE,\n    min: Number.MIN_VALUE,\n    pi: Math.PI,\n    two_pi: 6.283185307179586,\n    half_pi: 1.5707963267948966,\n    quarter_pi: 0.7853981633974483,\n    one_degree: 0.017453292519943295,\n    rad_to_deg: 57.29577951308232,\n    deg_to_rad: 0.017453292519943295,\n    gravity: 9.81,\n    newton: 0.10197,\n    gaussian: 0.3989422804014327\n};\nclass Util {\n    static warnLevel(lv) {\n        if (lv) {\n            Util._warnLevel = lv;\n        }\n        return Util._warnLevel;\n    }\n    static getArgs(args) {\n        if (args.length < 1)\n            return [];\n        let pos = [];\n        let isArray = Array.isArray(args[0]) || ArrayBuffer.isView(args[0]);\n        if (typeof args[0] === 'number') {\n            pos = Array.prototype.slice.call(args);\n        }\n        else if (typeof args[0] === 'object' && !isArray) {\n            let a = [\"x\", \"y\", \"z\", \"w\"];\n            let p = args[0];\n            for (let i = 0; i < a.length; i++) {\n                if ((p.length && i >= p.length) || !(a[i] in p))\n                    break;\n                pos.push(p[a[i]]);\n            }\n        }\n        else if (isArray) {\n            pos = [].slice.call(args[0]);\n        }\n        return pos;\n    }\n    static warn(message = \"error\", defaultReturn = undefined) {\n        if (Util.warnLevel() == \"error\") {\n            throw new Error(message);\n        }\n        else if (Util.warnLevel() == \"warn\") {\n            console.warn(message);\n        }\n        return defaultReturn;\n    }\n    static randomInt(range, start = 0) {\n        Util.warn(\"Util.randomInt is deprecated. Please use `Num.randomRange`\");\n        return Math.floor(Num_1.Num.random() * range) + start;\n    }\n    static split(pts, size, stride, loopBack = false, matchSize = true) {\n        let chunks = [];\n        let part = [];\n        let st = stride || size;\n        let index = 0;\n        if (pts.length <= 0 || st <= 0)\n            return [];\n        while (index < pts.length) {\n            part = [];\n            for (let k = 0; k < size; k++) {\n                if (loopBack) {\n                    part.push(pts[(index + k) % pts.length]);\n                }\n                else {\n                    if (index + k >= pts.length)\n                        break;\n                    part.push(pts[index + k]);\n                }\n            }\n            index += st;\n            if (!matchSize || (matchSize && part.length === size))\n                chunks.push(part);\n        }\n        return chunks;\n    }\n    static flatten(pts, flattenAsGroup = true) {\n        let arr = (flattenAsGroup) ? new Pt_1.Group() : new Array();\n        return arr.concat.apply(arr, pts);\n    }\n    static combine(a, b, op) {\n        let result = [];\n        for (let i = 0, len = a.length; i < len; i++) {\n            for (let k = 0, lenB = b.length; k < lenB; k++) {\n                result.push(op(a[i], b[k]));\n            }\n        }\n        return result;\n    }\n    static zip(arrays) {\n        let z = [];\n        for (let i = 0, len = arrays[0].length; i < len; i++) {\n            let p = [];\n            for (let k = 0; k < arrays.length; k++) {\n                p.push(arrays[k][i]);\n            }\n            z.push(p);\n        }\n        return z;\n    }\n    static stepper(max, min = 0, stride = 1, callback) {\n        let c = min;\n        return function () {\n            c += stride;\n            if (c >= max) {\n                c = min + (c - max);\n            }\n            if (callback)\n                callback(c);\n            return c;\n        };\n    }\n    static forRange(fn, range, start = 0, step = 1) {\n        let temp = [];\n        for (let i = start, len = range; i < len; i += step) {\n            temp[i] = fn(i);\n        }\n        return temp;\n    }\n    static load(url, callback) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.onload = function () {\n            if (request.status >= 200 && request.status < 400) {\n                callback(request.responseText, true);\n            }\n            else {\n                callback(`Server error (${request.status}) when loading \"${url}\"`, false);\n            }\n        };\n        request.onerror = function () {\n            callback(`Unknown network error`, false);\n        };\n        request.send();\n    }\n    static download(space, filename = 'pts_canvas_image', filetype = \"png\", quality = 1) {\n        const ftype = filetype === 'jpg' ? 'jpeg' : filetype;\n        space.element.toBlob(function (blob) {\n            const link = document.createElement('a');\n            const url = URL.createObjectURL(blob);\n            link.href = url;\n            link.download = `${filename}.${filetype}`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            URL.revokeObjectURL(url);\n        }, `image/${ftype}`, quality);\n    }\n    static performance(avgFrames = 10) {\n        let last = Date.now();\n        let avg = [];\n        return function () {\n            const now = Date.now();\n            avg.push(now - last);\n            if (avg.length >= avgFrames)\n                avg.shift();\n            last = now;\n            return Math.floor(avg.reduce((a, b) => a + b, 0) / avg.length);\n        };\n    }\n    static arrayCheck(pts, minRequired = 2) {\n        if (Array.isArray(pts) && pts.length < minRequired) {\n            Util.warn(`Requires ${minRequired} or more Pts in this Group.`);\n            return false;\n        }\n        return true;\n    }\n    static iterToArray(it) {\n        return (!Array.isArray(it)) ? [...it] : it;\n    }\n    static isMobile() {\n        return /iPhone|iPad|Android/i.test(navigator.userAgent);\n    }\n}\nexports.Util = Util;\nUtil._warnLevel = \"mute\";\n\n\n/***/ }),\n\n/***/ \"./src/_module.ts\":\n/*!************************!*\\\n  !*** ./src/_module.ts ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./Canvas */ \"./src/Canvas.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Create */ \"./src/Create.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Form */ \"./src/Form.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Num */ \"./src/Num.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Op */ \"./src/Op.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Pt */ \"./src/Pt.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Space */ \"./src/Space.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Color */ \"./src/Color.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Util */ \"./src/Util.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Dom */ \"./src/Dom.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Svg */ \"./src/Svg.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Typography */ \"./src/Typography.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Physics */ \"./src/Physics.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Play */ \"./src/Play.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./UI */ \"./src/UI.ts\"), exports);\n__exportStar(__webpack_require__(/*! ./Image */ \"./src/Image.ts\"), exports);\n\n\n/***/ }),\n\n/***/ \"./src/uheprng.ts\":\n/*!************************!*\\\n  !*** ./src/uheprng.ts ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Mash() {\n    var n = 0xefc8249d;\n    var mash = function (data) {\n        if (data) {\n            data = data.toString();\n            for (var i = 0; i < data.length; i++) {\n                n += data.charCodeAt(i);\n                var h = 0.02519603282416938 * n;\n                n = h >>> 0;\n                h -= n;\n                h *= n;\n                n = h >>> 0;\n                h -= n;\n                n += h * 0x100000000;\n            }\n            return (n >>> 0) * 2.3283064365386963e-10;\n        }\n        else\n            n = 0xefc8249d;\n    };\n    return mash;\n}\nfunction default_1(seed) {\n    var o = 48;\n    var c = 1;\n    var p = o;\n    var s = new Array(o);\n    var i, j, k = 0;\n    var mash = Mash();\n    for (i = 0; i < o; i++)\n        s[i] = mash(Math.random().toString());\n    function initState() {\n        mash();\n        for (i = 0; i < o; i++)\n            s[i] = mash(' ');\n        c = 1;\n        p = o;\n    }\n    function cleanString(inStr) {\n        inStr = inStr.replace(/(^\\s*)|(\\s*$)/gi, '');\n        inStr = inStr.replace(/[\\x00-\\x1F]/gi, '');\n        inStr = inStr.replace(/\\n /, '\\n');\n        return inStr;\n    }\n    function hashString(inStr) {\n        inStr = cleanString(inStr);\n        mash(inStr);\n        for (i = 0; i < inStr.length; i++) {\n            k = inStr.charCodeAt(i);\n            for (j = 0; j < o; j++) {\n                s[j] -= mash(k.toString());\n                if (s[j] < 0)\n                    s[j] += 1;\n            }\n        }\n    }\n    initState();\n    hashString(seed);\n    return {\n        random() {\n            if (++p >= o)\n                p = 0;\n            var t = 1768863 * s[p] + c * 2.3283064365386963e-10;\n            return (s[p] = t - (c = t | 0));\n        }\n    };\n}\nexports.default = default_1;\n\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=index.js.map","const { EventEmitter } = require('events');\n\nmodule.exports = function createInputEvents (opt) {\n  if (opt == null) opt = window;\n  if (isDOMNode(opt)) opt = { target: opt };\n\n  const {\n    target = window,\n    parent = window,\n    tapDistanceThreshold = 10,\n    tapDelay = 300,\n    preventDefault = false,\n    filtered = true,\n    passive = true\n  } = opt;\n  \n  const eventOpts = passive ? { passive: true } : undefined;\n\n  const emitter = new EventEmitter();\n\n  let initialIdentifier;\n  let dragging = false;\n  let lastTime;\n  let lastPosition;\n  let attached = false;\n\n  attach();\n\n  emitter.enable = attach;\n  emitter.disable = detach;\n\n  Object.defineProperties(emitter, {\n    target: {\n      get () { return target }\n    },\n    parent: {\n      get () { return parent }\n    }\n  });\n\n  return emitter;\n\n  function mousedown (event) {\n    // mark the drag event as having started\n    dragging = true;\n    const touch = getCurrentEvent(event);\n    const result = createEvent(event, touch, target);\n    lastPosition = result.position.slice();\n    lastTime = Date.now();\n    emitter.emit('down', result);\n  }\n\n  function mouseup (event) {\n    const wasDragging = dragging;\n    const touch = getCurrentEvent(event);\n    let valid = true;\n    if (filtered && event.changedTouches && (!touch || touch.identifier !== initialIdentifier)) {\n      // skip entirely if this touch doesn't match expected\n      valid = false;\n    }\n    if (touch && valid) {\n      const result = createEvent(event, touch, target);\n      initialIdentifier = null;\n      if (wasDragging || result.inside) {\n        // If the interaction was or is inside, emit an event\n        emitter.emit('up', result);\n      }\n      if (lastPosition != null) {\n        const nowTime = Date.now();\n        const delta = nowTime - lastTime;\n        const dist = distance(result.position, lastPosition);\n        if (delta <= tapDelay && dist < tapDistanceThreshold) {\n          emitter.emit('tap', result);\n        }\n        lastPosition = null;\n      }\n      dragging = false;\n    }\n  }\n\n  function mousemove (event) {\n    const touch = getCurrentEvent(event);\n    if (touch) {\n      // we didn't have an identifier and now we do\n      if (filtered && event.changedTouches && touch.identifier != null) {\n        const bounds = getElementBounds(target);\n        if (isInsideBounds(touch, bounds)) {\n          // ensure dragging is set to true\n          dragging = true;\n        }\n      }\n      const result = createEvent(event, touch, target);\n      if (dragging || result.inside) {\n        emitter.emit('move', result);\n      }\n    }\n  }\n\n  function attach () {\n    if (attached) return;\n    attached = true;\n    target.addEventListener('touchstart', mousedown, eventOpts);\n    parent.addEventListener('touchend', mouseup, eventOpts);\n    parent.addEventListener('touchmove', mousemove, eventOpts);\n\n    target.addEventListener('mousedown', mousedown, eventOpts);\n    parent.addEventListener('mouseup', mouseup, eventOpts);\n    parent.addEventListener('mousemove', mousemove, eventOpts);\n\n    if (preventDefault) {\n      window.addEventListener('dragstart', preventDefaultEvent, {\n        passive: false\n      });\n      document.addEventListener('touchmove', preventDefaultEvent, {\n        passive: false\n      });\n    }\n  }\n\n  function detach () {\n    if (!attached) return;\n    attached = false;\n    target.removeEventListener('touchstart', mousedown);\n    parent.removeEventListener('touchend', mouseup);\n    parent.removeEventListener('touchmove', mousemove);\n\n    target.removeEventListener('mousedown', mousedown);\n    parent.removeEventListener('mouseup', mouseup);\n    parent.removeEventListener('mousemove', mousemove);\n\n    if (preventDefault) {\n      window.removeEventListener('dragstart', preventDefaultEvent);\n      document.removeEventListener('touchmove', preventDefaultEvent);\n    }\n  }\n\n  function preventDefaultEvent (ev) {\n    ev.preventDefault();\n    return false;\n  }\n\n  function getCurrentEvent (event) {\n    if (event.changedTouches) {\n      const list = event.changedTouches;\n      if (filtered) {\n        if (initialIdentifier == null) {\n          // first time tracking, mark identifier\n          const first = getFirstTargetTouch(list) || list[0];\n          initialIdentifier = first.identifier;\n          return first;\n        } else {\n          // identifier exists, try to get it\n          return getTouch(list, initialIdentifier);\n        }\n      } else {\n        return list[0];\n      }\n    } else {\n      return event;\n    }\n  }\n\n  function getFirstTargetTouch (touches) {\n    for (let i = 0; i < touches.length; i++) {\n      const t = touches[i];\n      if (t.target === target) return t;\n    }\n    return null;\n  }\n\n  function getTouch (touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n      const t = touches[i];\n      if (t.identifier === id) {\n        return t;\n      }\n    }\n    return null;\n  }\n\n  function createEvent (event, touch, target) {\n    const bounds = getElementBounds(target);\n    const position = getPosition(touch, target, bounds);\n    const uv = getNormalizedPosition(position, bounds);\n    return {\n      dragging,\n      touch,\n      inside: isInsideBounds(touch, bounds),\n      position,\n      uv,\n      event,\n      bounds\n    };\n  }\n};\n\nfunction distance (a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\nfunction isInsideBounds (event, bounds) {\n  const { clientX, clientY } = event;\n  return clientX >= bounds.left && clientX < bounds.right &&\n    clientY >= bounds.top && clientY < bounds.bottom;\n}\n\nfunction getNormalizedPosition (position, bounds) {\n  return [\n    position[0] / bounds.width,\n    position[1] / bounds.height\n  ];\n}\n\nfunction getPosition (event, target, bounds) {\n  const { clientX, clientY } = event;\n  const x = clientX - bounds.left;\n  const y = clientY - bounds.top;\n  return [ x, y ];\n}\n\nfunction getElementBounds (element) {\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return {\n      x: 0,\n      y: 0,\n      left: 0,\n      top: 0,\n      right: window.innerWidth,\n      bottom: window.innerHeight,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  } else {\n    return element.getBoundingClientRect();\n  }\n}\n\nfunction isDOMNode (obj) {\n  if (!obj || obj == null) return false;\n  const winEl = typeof window !== 'undefined' ? window : null;\n  return obj === winEl || (typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string');\n}\n","\nglobal.CANVAS_SKETCH_DEFAULT_STORAGE_KEY = window.location.href;\n"]}